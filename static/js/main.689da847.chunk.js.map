{"version":3,"sources":["components/Header/turtledot.svg","components/Header/index.js","components/Nav/index.js","functions/validateItem.js","components/Modal/index.js","functions/cutNumber.js","components/Arrange/ArrangeWeek/Row/Cell/NumberModal/index.js","components/Arrange/ArrangeWeek/Row/Cell/index.js","components/Arrange/ArrangeWeek/Row/index.js","components/Arrange/ArrangeWeek/ActionsPanel/index.js","static/colorsDays.js","components/Arrange/ArrangeWeek/DayModal/index.js","functions/getStoredItems.js","functions/sortColor.js","functions/getStoredWeek.js","components/Arrange/ArrangeWeek/index.js","components/Arrange/index.js","components/Items/UpdateItem/index.js","components/Items/Item/index.js","components/Items/index.js","components/Archive/ArchiveWeek/index.js","components/Archive/index.js","components/Information/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","src","turtledot","className","alt","Nav","to","activeClassName","size","validateItem","item","text","length","number","type","Modal","props","name","onClick","onSwitchEditing","tabIndex","onKeyDown","event","key","target","nodeName","preventDefault","modal","cutNumber","toString","slice","Math","ceil","NumberModal","useState","day","currentValue","editCurrentValue","avgTodo","inputNumber","editInputNumber","validateTodo","onUpdateTodo","doEstimate","doChange","dayOfWeek","id","weekBeginning","min","max","value","onFocus","onChange","checkEnter","touchMax","pos","neg","touch","initial","X","Y","move","final","Cell","editingNumber","switchEditingNumber","updateTodo","onSaveTodo","index","checkVerticalLimit","data-id","data-item","rowIndex","data-day","isThisWeek","today","color","onChangeDay","classList","contains","onTouchStart","e","touches","clientX","clientY","onTouchMove","onTouchEnd","t","v","Row","todo","editTodo","currentTotal","tooHigh","tooLow","allDone","cutNum","goalNum","originalDay","row","editRow","useEffect","numberDoneAndToDo","numberToDo","forEach","push","reduce","a","b","doNumbers","draggable","archive","shifting","data-index","data-dragid","data-dragweek","deleting","onRemoveItem","data-direction","onMoveItem","map","i","days","ActionsPanel","onSwitchDeleting","htmlFor","onSwitchShifting","colorsDays","DayModal","getDay","whichDay","selected","getStoredItems","localStorage","getItem","JSON","parse","sort","getStoredWeek","week","ArrangeWeek","editWeek","unselected","editUnselected","editSelected","switchDeleting","switchShifting","editingDay","switchEditingDay","createSelected","createUnselected","newWeek","items","findIndex","uItem","moveItem","splice","saveItem","setItem","stringify","addItemToWeek","undefined","date","removeItemFromWeek","filter","needle","moveItemInWeek","newIndex","currentTarget","dataset","direction","changeDay","updateArchive","saveTodo","thisWeek","unshift","createWeek","weekName","substring","ids","data-week","Arrange","Date","dateToday","updateDateToday","getWeekBeginning","thisWeekBeginning","updateThisWeekBeginning","nextWeekBeginning","updateNextWeekBeginning","ogDayToday","updateOgDayToday","dayToday","updateDayToday","addWeek","newDate","padZero","n","setDate","getDate","getFullYear","getMonth","setInterval","window","location","reload","UpdateItem","itemToPlay","editItem","checkKey","updateItem","handleInput","newItem","onUpdateItem","onCancelUpdate","colors","Item","editing","switchEditing","inUse","switchInUse","startEdit","onCancelNewItem","find","checkInUse","currentlyAdding","data","storedItems","edited","disabled","onDeleteItem","Items","editItems","adding","switchAdding","deleteItem","confirm","filtered","uuidv4","newItems","ArchiveWeek","Archive","Information","infoBox","toggleInfoBox","App","basename","process","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.689da847.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/turtledot.9f70b9aa.svg\";","import React from 'react';\r\nimport turtledot from './turtledot.svg';\r\nimport './header.css';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <img src={turtledot} className='logo' alt='logo' />\r\n        </header>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Plus, BookOpen} from 'react-feather';\r\nimport './nav.css';\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav>\r\n            <NavLink to='/Items' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <Plus size={16} />\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Items\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Arrange' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <span className='menu-icon-doit'>\r\n                    </span>\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Arrange\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Archive' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <BookOpen size={16} />\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Archive\r\n                </div>\r\n            </NavLink>\r\n        </nav>\r\n    );\r\n}","export default function validateItem(item) {\r\n    if (item.text.length > 0 && item.text.length < 12 && item.number > 0) {\r\n        if (item.type && item.number < 8) return true;\r\n        if (!item.type && item.number < 100001) return true;\r\n    } else return false;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Modal(props) {\r\n\r\n\tfunction checkBackspace(event) {\r\n\t\tif ((event.key === 'Backspace' && event.target.nodeName !== 'INPUT') || event.key === 'Escape') {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tprops.onSwitchEditing(false);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tclassName={props.name + '-modal-bg modal-bg'}\r\n\t\t\t\tonClick={() => props.onSwitchEditing(false)}\r\n\t\t\t>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName={props.name + '-modal modal'}\r\n\t\t\t\ttabIndex='0'\r\n\t\t\t\tonKeyDown={checkBackspace}\r\n\t\t\t>\r\n\t\t\t\t{props.modal}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","export default function cutNumber(number) {\r\n    if (number > 99999) {\r\n        return '100k';\r\n    } else if (number > 9999) {\r\n        return number.toString().slice(0,2) + 'k';\r\n    } else if (number > 999) {\r\n        if (number % 1000 === 0) return number.toString().slice(0, 1) + 'k';\r\n        return number.toString().slice(0, 1) + '.' + number.toString().slice(1, 2) + 'k';\r\n    } else if (number % 1 !== 0) {\r\n        return Math.ceil(number);\r\n    } else return number;\r\n}\r\n","import React, {useState} from 'react';\r\nimport cutNumber from '../../../../../../functions/cutNumber';\r\nimport {Check} from 'react-feather';\r\nimport './numberModal.css';\r\n\r\nexport default function NumberModal(props) {\r\n\r\n    const [currentValue, editCurrentValue] = useState(props.day);\r\n    const [inputNumber, editInputNumber] = useState(props.day > 0 ? props.day : cutNumber(props.avgTodo));\r\n\r\n    function validateTodo() {\r\n        if (currentValue > -2 && currentValue < 100001) {\r\n            props.onUpdateTodo(currentValue);\r\n        }\r\n        props.onSwitchEditing(false);\r\n    }\r\n\r\n    function checkEnter(event) {\r\n        if (event.key === 'Enter') validateTodo();\r\n    }\r\n\r\n    function doEstimate() {\r\n        if (inputNumber > 0) {\r\n            editCurrentValue(inputNumber);\r\n        } else if (props.avgTodo > 0) {\r\n            doChange(cutNumber(props.avgTodo));\r\n        } else {\r\n            doChange(1);\r\n        }\r\n    }\r\n\r\n    function doChange(number) {\r\n        editInputNumber(number);\r\n        editCurrentValue(number);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='header'>\r\n                <h2>\r\n                    {props.dayOfWeek}:\r\n                </h2>\r\n                <h3>\r\n                    {props.text}\r\n                </h3>\r\n            </div>\r\n            <div className='options'>\r\n                <div\r\n                    className={currentValue === -1 ? 'selected' : ''}\r\n                    onClick={() => editCurrentValue(-1)}\r\n                >\r\n                    not today\r\n                </div>\r\n                <div\r\n                    className={currentValue === 0 ? 'selected' : ''}\r\n                    onClick={() => editCurrentValue(0)}\r\n                >\r\n                    schedule for today\r\n                </div>\r\n                <div\r\n                    className={currentValue > 0 ? 'selected' : ''}\r\n                    onClick={doEstimate}\r\n                >\r\n                    number done today\r\n                    <input\r\n                        id={props.dayOfWeek + props.weekBeginning + props.id + 'inputNumber'}\r\n                        type='number'\r\n                        min='-1'\r\n                        max='100000'\r\n                        value={inputNumber}\r\n                        onFocus={doEstimate}\r\n                        onChange={event => doChange(+event.target.value)}\r\n                        onKeyDown={event => checkEnter(event)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='actions-panel'>\r\n                <div>\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        onClick={validateTodo}\r\n                        className='save-todo'\r\n                    >\r\n                        <Check size={16} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport Modal from '../../../../Modal';\r\nimport NumberModal from './NumberModal';\r\nimport cutNumber from '../../../../../functions/cutNumber';\r\nimport './cell.css';\r\nimport '../../../../Modal/modal.css';\r\n\r\nconst touchMax = {\r\n    max: {\r\n        pos: 12, neg: -12\r\n    },\r\n    limit: {\r\n        pos: 10, neg: -10\r\n    }\r\n}\r\n\r\nconst touch = {\r\n    initial: {\r\n        X: 0, Y: 0\r\n    },\r\n    move: {\r\n        X: 0, Y: 0\r\n    },\r\n    final: {\r\n        X: 0, Y: 0\r\n    }\r\n}\r\n\r\nexport default function Cell(props) {\r\n\r\n    const [editingNumber, switchEditingNumber] = useState(false);\r\n    const avgTodo = props.avgTodo > 0 ? cutNumber(props.avgTodo) : '';\r\n\r\n    function openModal(event) {\r\n        if (event.target.classList.contains('main-cell') || event.target.classList.contains('type-cell')) switchEditingNumber(true);\r\n    }\r\n\r\n    function updateTodo(value) {\r\n        props.onSaveTodo(props.id, props.index, value);\r\n    }\r\n\r\n    function startTouch(e) {\r\n        touch.initial.X = e.touches[0].clientX;\r\n        touch.initial.Y = e.touches[0].clientY;\r\n    }\r\n\r\n    function moveTouch(e) {\r\n        if (touch.initial.X === 0 && touch.initial.Y === 0) return;\r\n        touch.move.X = e.touches[0].clientX;\r\n        touch.final.X = touch.initial.X - touch.move.X;\r\n        touch.move.Y = e.touches[0].clientY;\r\n        touch.final.Y = touch.initial.Y - touch.move.Y;\r\n    }\r\n\r\n    function endTouch() {\r\n        if (touch.final.X > touchMax.max.pos && checkVerticalLimit()) {\r\n            updateTodo(-1);\r\n        } else if (touch.final.X < touchMax.max.neg && checkVerticalLimit()) {\r\n            updateTodo(1);\r\n        }\r\n        for (const t in touch) {\r\n            for (let v in touch[t]) {\r\n                touch[t][v] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkVerticalLimit() {\r\n        return touch.final.Y < touchMax.limit.pos && touch.final.Y > touchMax.limit.neg;\r\n    }\r\n\r\n    return (\r\n        <td\r\n            data-id={props.id}\r\n            data-item={props.rowIndex}\r\n            data-day={props.index}\r\n            className={'main-cell week-spots' + (props.isThisWeek && props.today === props.index ? props.color : '')}\r\n            onClick={props.type ? props.onChangeDay : props.isThisWeek ? openModal : props.onChangeDay}\r\n            onTouchStart={props.type && props.isThisWeek ? startTouch : null}\r\n            onTouchMove={props.type && props.isThisWeek ? moveTouch : null}\r\n            onTouchEnd={props.type && props.isThisWeek ? endTouch : null}\r\n        >\r\n            <div\r\n                className={props.type ?\r\n                    ('spot' + (props.day === 1 ? ' closed' : props.day === 0 ? ' open' : ''))\r\n                    :\r\n                    ('type-cell' + (props.day === 0 ? ' grey' : ''))}\r\n            >\r\n                {!props.type && props.day > 0 ? props.day : !props.type && props.day > -1 ? avgTodo : ''}\r\n            </div>\r\n            {editingNumber &&\r\n                <Modal\r\n                    name={'number'}\r\n                    onSwitchEditing={switchEditingNumber}\r\n                    modal={\r\n                        <NumberModal\r\n                            id={props.id}\r\n                            day={props.day}\r\n                            avgTodo={props.avgTodo}\r\n                            text={props.text}\r\n                            dayOfWeek={props.dayOfWeek}\r\n                            weekBeginning={props.weekBeginning}\r\n                            onUpdateTodo={updateTodo}\r\n                            onSwitchEditing={switchEditingNumber}\r\n                        />\r\n                    }\r\n                />\r\n            }\r\n        </td>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Cell from './Cell';\r\nimport cutNumber from '../../../../functions/cutNumber';\r\nimport {ArrowUp, ArrowDown} from 'react-feather';\r\nimport './row.css';\r\n\r\nexport default function Row(props) {\r\n\r\n    const [todo, editTodo] = useState([...props.todo]);\r\n    const [row, editRow] = useState({\r\n        currentTotal: 0,\r\n        avgTodo: 0,\r\n        tooHigh: false,\r\n        tooLow: false,\r\n        allDone: false,\r\n        cutNum: 0,\r\n        goalNum: 0,\r\n        originalDay: 0,\r\n        today: 0\r\n    });\r\n\r\n    useEffect(() => editTodo([...props.todo]), [props]);\r\n    useEffect(() => doNumbers(), [props]);\r\n\r\n    function doNumbers() {\r\n        let numberDoneAndToDo = [];\r\n        let numberToDo = [];\r\n        props.todo.forEach(day => {\r\n            if (day > -1) numberDoneAndToDo.push(+day);\r\n            if (day === 0) numberToDo.push(+day);\r\n        });\r\n        const currentTotal = numberDoneAndToDo.reduce((a, b) => a + b, 0);\r\n        const allDone = currentTotal >= +props.number;\r\n        const avgTodo = numberToDo.length > 0 ? (+props.number - currentTotal) / numberToDo.length : 0;\r\n        const tooHigh = numberDoneAndToDo.length > +props.number;\r\n        const tooLow = numberDoneAndToDo.length < +props.number;\r\n        const cutNum = cutNumber(+props.number);\r\n        const goalNum = cutNumber(+props.number - currentTotal);\r\n        editRow({\r\n            currentTotal: currentTotal,\r\n            avgTodo: avgTodo,\r\n            tooHigh: tooHigh,\r\n            tooLow: tooLow,\r\n            allDone: allDone,\r\n            cutNum: cutNum,\r\n            goalNum: goalNum\r\n        });\r\n    }\r\n\r\n    return (\r\n        <tr\r\n            draggable={!props.archive && props.shifting}\r\n            id={props.id + props.weekBeginning}\r\n            data-index={props.index}\r\n            data-dragid={props.id}\r\n            data-dragweek={props.weekBeginning}\r\n            className={row.allDone ? 'all-done' : props.color}\r\n        >\r\n            <td\r\n                id={props.id}\r\n                className={'week-item left-column' + (props.deleting || props.shifting ? ' small' : '')}>\r\n                {!props.archive && props.deleting &&\r\n                    <button\r\n                        value={props.id}\r\n                        onClick={props.onRemoveItem}\r\n                        className='week-item-actions'>\r\n                        &mdash;\r\n                    </button>\r\n                }\r\n                {!props.archive && props.shifting &&\r\n                <div>\r\n                    <button\r\n                        value={props.index}\r\n                        data-direction='up'\r\n                        onClick={props.onMoveItem}\r\n                        className='week-item-actions'>\r\n                        <ArrowUp size={10} />\r\n                    </button>\r\n                    <button\r\n                        value={props.index}\r\n                        data-direction='down'\r\n                        onClick={props.onMoveItem}\r\n                        className='week-item-actions'>\r\n                        <ArrowDown size={10} />\r\n                    </button>\r\n                </div>\r\n                }\r\n                {props.text}\r\n            </td>\r\n            <td className={'main-cell week-item-number'\r\n                + (props.type && (row.tooHigh ? ' week-number-arrow-down' : row.tooLow ? ' week-number-arrow-up' : ''))}>\r\n                {cutNumber(row.allDone ? row.currentTotal : row.goalNum > -1 ? row.goalNum : props.number)}\r\n            </td>\r\n            {todo.map((day, i) =>\r\n                <Cell\r\n                    key={props.number + props.id + i}\r\n                    id={props.id}\r\n                    day={day}\r\n                    index={i}\r\n                    rowIndex={props.index}\r\n                    today={props.today}\r\n                    avgTodo={row.avgTodo}\r\n                    type={props.type}\r\n                    color={props.color}\r\n                    isThisWeek={props.isThisWeek}\r\n                    weekBeginning={props.weekBeginning}\r\n                    dayOfWeek={!props.archive && props.days[i]}\r\n                    text={props.text}\r\n                    onSaveTodo={props.onSaveTodo}\r\n                    onChangeDay={props.onChangeDay}\r\n                />\r\n            )}\r\n        </tr>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Maximize2, Trash, Trash2, X} from 'react-feather';\r\n\r\nexport default function ActionsPanel(props) {\r\n\r\n    return (\r\n        <div className='actions-panel'>\r\n            <span>\r\n                <input\r\n                    type='checkbox'\r\n                    id={'delete-items' + props.weekBeginning}\r\n                    onChange={() => !props.shifting && props.onSwitchDeleting(!props.deleting)}\r\n                />\r\n                <label htmlFor={'delete-items' + props.weekBeginning}>\r\n                    {props.deleting ?\r\n                        <Trash2 size={16}/>\r\n                        :\r\n                        <Trash size={16}/>\r\n                    }\r\n                </label>\r\n            </span>\r\n            <span>\r\n                <input\r\n                    type='checkbox'\r\n                    id={'shift-items' + props.weekBeginning}\r\n                    onChange={() => !props.deleting && props.onSwitchShifting(!props.shifting)}\r\n                />\r\n                <label htmlFor={'shift-items' + props.weekBeginning}>\r\n                    {props.shifting ?\r\n                        <X size={16}/>\r\n                        :\r\n                        <Maximize2 size={14} className='deg45'/>\r\n                    }\r\n                </label>\r\n            </span>\r\n        </div>\r\n    )\r\n}","export const colorsDays = ['color0', 'color1', 'color2', 'color3', 'color4', 'color5', 'color6', 'color7', 'color8', 'color9'];\r\n\r\nexport const days = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];\r\n","import React, { useState } from 'react';\r\nimport { days } from '../../../../static/colorsDays';\r\nimport './dayModal.css';\r\n\r\nexport default function DayModal(props) {\r\n\r\n\tconst [whichDay, setDay] = useState(getDay());\r\n\r\n\tfunction getDay() {\r\n\t\tif (props.isThisWeek) {\r\n\t\t\tswitch(props.index) {\r\n\t\t\t\tcase props.today:\r\n\t\t\t\t\treturn 'today';\r\n\t\t\t\tcase props.today - 1:\r\n\t\t\t\t\treturn 'yesterday';\r\n\t\t\t\tcase props.today + 1:\r\n\t\t\t\t\treturn 'tomorrow';\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn days[props.index];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Here we shall be able to view and edit information about the selected day</h2>\r\n\r\n\t\t\t<div\r\n\t\t\t\tclassName='whichDay'\r\n\t\t\t>\r\n\t\t\t\t{whichDay}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='items'>\r\n\t\t\t\t{props.selected.map(item =>\r\n\t\t\t\t\titem.todo[props.index] > -1 &&\r\n\t\t\t\t\t<div className='item'>\r\n\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import sortColor from './sortColor';\r\n\r\nexport default function getStoredItems() {\r\n    if (localStorage.getItem('items')) {\r\n        return sortColor(JSON.parse(localStorage.getItem('items')));\r\n    } else return [];\r\n}\r\n","export default function sortColor(array) {\r\n    return array.sort((a, b) => (a.color > b.color) ? 1 : -1);\r\n}\r\n","export default function getStoredWeek(week) {\r\n    if (localStorage.getItem(week)) {\r\n        return JSON.parse(localStorage.getItem(week));\r\n    } else return {};\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Row from './Row';\r\nimport ActionsPanel from './ActionsPanel';\r\nimport Modal from '../../Modal';\r\nimport DayModal from './DayModal';\r\nimport getStoredItems from '../../../functions/getStoredItems';\r\nimport getStoredWeek from '../../../functions/getStoredWeek';\r\nimport '../arrange.css';\r\nimport '../../Modal/modal.css';\r\nimport {days} from '../../../static/colorsDays';\r\n\r\nexport default function ArrangeWeek(props) {\r\n\r\n    const [week, editWeek] = useState(getStoredWeek(props.weekBeginning));\r\n    const [unselected, editUnselected] = useState(getStoredItems());\r\n    const [selected, editSelected] = useState([]);\r\n    const [deleting, switchDeleting] = useState(false);\r\n    const [shifting, switchShifting] = useState(false);\r\n    const [editingDay, switchEditingDay] = useState(false);\r\n\r\n    useEffect(() => createWeek(), [week]);\r\n\r\n    async function createWeek() {\r\n        let createSelected = [];\r\n        let createUnselected = getStoredItems();\r\n        let newWeek = await getStoredWeek(props.weekBeginning);\r\n        if (newWeek.items) {\r\n            newWeek.items.forEach(item => {\r\n                let index = createUnselected.findIndex(uItem => uItem.id === item[0]);\r\n                if (index > -1) {\r\n                    let moveItem = createUnselected.splice(index, 1);\r\n                    moveItem[0].todo = item[1];\r\n                    createSelected.push(moveItem[0]);\r\n                }\r\n            });\r\n        }\r\n        editUnselected([...createUnselected]);\r\n        editSelected([...createSelected]);\r\n    }\r\n\r\n    function saveItem(newWeek) {\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n    }\r\n\r\n    function addItemToWeek(event) {\r\n        let newWeek = {...week};\r\n        if (newWeek.items === undefined) newWeek = {date: props.weekBeginning, items: []};\r\n        newWeek.items.push([event.target.value, [-1, -1, -1, -1, -1, -1, -1]]);\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function addAllItemsToWeek() {\r\n        let ids = [];\r\n        let newWeek = {...week};\r\n        unselected.forEach(item => ids.push(item.id));\r\n        if (newWeek.items === undefined) newWeek = {date: props.weekBeginning, items: []};\r\n        ids.forEach(id => newWeek.items.push([id, [-1, -1, -1, -1, -1, -1, -1]]));\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function removeItemFromWeek(event) {\r\n        let newWeek = {...week};\r\n        newWeek.items = newWeek.items.filter(needle => needle[0] !== event.target.value);\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function moveItemInWeek(event) {\r\n        let newWeek = JSON.parse(JSON.stringify(week));\r\n        let index = +event.currentTarget.value;\r\n        let newIndex;\r\n        if (event.currentTarget.dataset.direction === 'up') {\r\n            newIndex = index > 0 ? index - 1 : newWeek.items.length - 1;\r\n        } else {\r\n            newIndex = index < newWeek.items.length - 1 ? index + 1 : 0;\r\n        }\r\n        newWeek.items.splice(newIndex, 0, newWeek.items.splice(index, 1)[0]);\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function changeDay(event) {\r\n        let newWeek = {...week};\r\n        let index = newWeek.items.findIndex(item => item[0] === event.currentTarget.dataset.id);\r\n        let item = newWeek.items[index];\r\n        let day = event.currentTarget.dataset.day;\r\n        if (props.isThisWeek) {\r\n            item[1][day] = (item[1][day] === (-1) ? 0 : item[1][day] === 0 ? 1 : (-1));\r\n        } else {\r\n            item[1][day] = (item[1][day] > (-1) ? (-1) : 0);\r\n        }\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n        updateArchive(newWeek, index);\r\n    }\r\n\r\n    function saveTodo(id, day, value) {\r\n        let newWeek = {...week};\r\n        let index = newWeek.items.findIndex(item => item[0] === id);\r\n        let item = newWeek.items[index];\r\n        item[1][day] = value;\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n        updateArchive(newWeek, index);\r\n    }\r\n\r\n    function updateArchive(newWeek, i) {\r\n        if (props.isThisWeek) {\r\n            let archive = JSON.parse(localStorage.getItem('archive'));\r\n            let thisWeek = {\r\n                date: props.weekBeginning,\r\n                items: [...selected]\r\n            };\r\n            thisWeek.items[i].todo = newWeek.items[i][1];\r\n            if (archive) {\r\n                let index = archive.findIndex(week => week.date === thisWeek.date);\r\n                index > -1 ? archive[index] = thisWeek : archive.unshift(thisWeek);\r\n            } else {\r\n                archive = [];\r\n                archive.unshift(thisWeek);\r\n            }\r\n            localStorage.setItem('archive', JSON.stringify(archive));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='week'>\r\n            <div className='week-header'>\r\n                <ActionsPanel\r\n                    weekBeginning={props.weekBeginning}\r\n                    deleting={deleting}\r\n                    onSwitchDeleting={switchDeleting}\r\n                    shifting={shifting}\r\n                    onSwitchShifting={switchShifting}\r\n                />\r\n                {props.weekName === 'This Week' ?\r\n                    <h1>\r\n                        {props.weekName}\r\n                    </h1>\r\n                    :\r\n                    <h2>\r\n                        {props.weekName}\r\n                    </h2>\r\n                }\r\n            </div>\r\n            <section>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td className='week-date left-column'>\r\n                            {props.weekBeginning}\r\n                        </td>\r\n                        <td className='week-date'>\r\n                        </td>\r\n                        {props.days.map((day, i) =>\r\n                            <td\r\n                                key={day + i + props.weekBeginning}\r\n                                className='day'\r\n                                onClick={event => event.target.classList.contains('day') ? switchEditingDay(day + props.weekBeginning) : null}\r\n                            >\r\n                                {day.substring(0,1)}\r\n                                {editingDay === (day + props.weekBeginning) &&\r\n                                    <Modal\r\n                                        name={'day'}\r\n                                        onSwitchEditing={switchEditingDay}\r\n                                        modal={\r\n                                            <DayModal\r\n                                                key={day + props.weekBeginning + 'dayView'}\r\n                                                index={i}\r\n                                                day={day}\r\n                                                today={props.today}\r\n                                                isThisWeek={props.isThisWeek}\r\n                                                weekBeginning={props.weekBeginning}\r\n                                                selected={selected}\r\n                                                onSwitchEditing={switchEditingDay}\r\n                                            />\r\n                                        }\r\n                                    />\r\n                                }\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody data-dragweek={props.weekBeginning}>\r\n                        {selected.map((item, i) =>\r\n                            <Row\r\n                                key={item.id + props.weekBeginning}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                today={props.today}\r\n                                isThisWeek={props.isThisWeek}\r\n                                weekBeginning={props.weekBeginning}\r\n                                days={days}\r\n                                deleting={deleting}\r\n                                shifting={shifting}\r\n                                onRemoveItem={removeItemFromWeek}\r\n                                onMoveItem={moveItemInWeek}\r\n                                onChangeDay={changeDay}\r\n                                onSaveTodo={saveTodo}\r\n                            />\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n            {unselected.length > 0 &&\r\n                <div className='edit-box'>\r\n                    <button\r\n                        className='add-all-items'\r\n                        onClick={addAllItemsToWeek}\r\n                    >\r\n                        add all items\r\n                    </button>\r\n                    <div className='items-list'>\r\n                        {unselected.map(item =>\r\n                            <button\r\n                                key={item.id + props.weekBeginning + 'u'}\r\n                                value={item.id}\r\n                                data-week={props.weekBeginning}\r\n                                className={'items-list-item ' + item.color}\r\n                                onClick={addItemToWeek}\r\n                            >\r\n                                {item.text}\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport ArrangeWeek from './ArrangeWeek';\r\nimport {days} from '../../static/colorsDays';\r\nimport './arrange.css';\r\n\r\nexport default function Arrange() {\r\n\r\n    const [dateToday, updateDateToday] = useState(new Date());\r\n    const [thisWeekBeginning, updateThisWeekBeginning] = useState(getWeekBeginning());\r\n    const [nextWeekBeginning, updateNextWeekBeginning] = useState(getWeekBeginning(7));\r\n\r\n    const [ogDayToday, updateOgDayToday] = useState(dateToday.getDay());\r\n    const [dayToday, updateDayToday] = useState(ogDayToday === 0 ? 6 : ogDayToday - 1);\r\n\r\n    useEffect(() => updateOgDayToday(dateToday.getDay()), [dateToday]);\r\n    useEffect(() => updateDayToday(ogDayToday === 0 ? 6 : ogDayToday - 1), [ogDayToday]);\r\n    useEffect(() => updateThisWeekBeginning(getWeekBeginning()), [dateToday]);\r\n    useEffect(() => updateNextWeekBeginning(getWeekBeginning(7)), [dateToday]);\r\n\r\n    setInterval(() => {\r\n        const newDate = new Date();\r\n        if (newDate.getDay() === 1 && dateToday.getDay() === 0) {\r\n            window.location.reload();\r\n        } else if (newDate.getDate() !== dateToday.getDate()) {\r\n            updateDateToday(newDate);\r\n        }\r\n    }, 60000);\r\n\r\n    function getWeekBeginning(addWeek = 0) {\r\n        let newDate = new Date(),\r\n            day = newDate.getDay();\r\n        function padZero(n) { return n < 10 ? '0' + n : n }\r\n        if (day > 1) {\r\n            newDate.setDate(newDate.getDate() - day + 1 + addWeek);\r\n        } else if (day === 0) {\r\n            newDate.setDate(newDate.getDate() - 6 + addWeek);\r\n        } else {\r\n            newDate.setDate(newDate.getDate() + addWeek);\r\n        }\r\n        return newDate.getFullYear() + '/' + padZero(newDate.getMonth() + 1) + '/' + padZero(newDate.getDate());\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <ArrangeWeek\r\n                key={'thisWeek'}\r\n                today={dayToday}\r\n                weekName={'This Week'}\r\n                days={days}\r\n                weekBeginning={thisWeekBeginning}\r\n                isThisWeek={true}\r\n            />\r\n            <ArrangeWeek\r\n                key={'nextWeek'}\r\n                today={dayToday}\r\n                weekName={'Next Week'}\r\n                days={days}\r\n                weekBeginning={nextWeekBeginning}\r\n                thisWeekBeginning={thisWeekBeginning}\r\n            />\r\n        </main>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport validateItem from '../../../functions/validateItem';\r\nimport '../../Arrange/';\r\nimport {X, Check} from 'react-feather';\r\n\r\nexport default function UpdateItem(props) {\r\n\r\n    const itemToPlay = props.item ? {...props.item} :\r\n        {\r\n            id: '',\r\n            text: '',\r\n            type: true,\r\n            number: 1,\r\n            color: 'color0'\r\n        };\r\n\r\n    const [item, editItem] = useState(itemToPlay);\r\n\r\n    function checkKey(event) {\r\n        if (event.key === 'Enter') updateItem();\r\n    }\r\n\r\n    function handleInput(event) {\r\n        let newItem = {...item};\r\n        newItem[event.target.name] = event.target.value;\r\n        editItem({...newItem});\r\n    }\r\n\r\n    function switchType() {\r\n        let newItem = {...item};\r\n        newItem.type = !newItem.type;\r\n        editItem({...newItem});\r\n    }\r\n\r\n    function updateItem() {\r\n        if (validateItem(item)) {\r\n            props.onUpdateItem({...item});\r\n            editItem({\r\n                id: '',\r\n                text: '',\r\n                type: true,\r\n                number: 1,\r\n                color: 'color0'\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className='item'>\r\n                <input\r\n                    type='text'\r\n                    name='text'\r\n                    value={item.text}\r\n                    onChange={handleInput}\r\n                    onKeyDown={event => checkKey(event)}\r\n                    className='text'\r\n                />\r\n                <button\r\n                    name='type'\r\n                    value={item.type}\r\n                    onClick={switchType}\r\n                    className='type'>\r\n                    {item.type ?\r\n                        <div className='day spot open'>\r\n                        </div>\r\n                        :\r\n                        '#'\r\n                    }\r\n                </button>\r\n                <input\r\n                    type='number'\r\n                    name='number'\r\n                    min='1'\r\n                    max='99999'\r\n                    value={item.number}\r\n                    onChange={handleInput}\r\n                    onKeyDown={event => checkKey(event)}\r\n                    className='number'\r\n                />\r\n                <button\r\n                    className={'color ' + item.color}>\r\n                </button>\r\n                <button\r\n                    onClick={props.onCancelUpdate}\r\n                    className='plus-sign'>\r\n                    <X size={16} />\r\n                </button>\r\n            </div>\r\n            <div className='edit-box'>\r\n                <div className='palette'>\r\n                    {props.colors.map(color =>\r\n                        <button\r\n                            key={color}\r\n                            name='color'\r\n                            value={color}\r\n                            onClick={handleInput}\r\n                            className={'palette-square ' + color}>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <div className='edit-box-buttons'>\r\n                    <button\r\n                        onClick={updateItem}\r\n                        className='edit-complete'>\r\n                        <Check size={16} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport UpdateItem from '../UpdateItem';\r\nimport cutNumber from '../../../functions/cutNumber';\r\nimport validateItem from '../../../functions/validateItem';\r\nimport {X, Hash} from 'react-feather';\r\n\r\nexport default function Item(props) {\r\n\r\n    const [item, editItem] = useState(props.item);\r\n    const [editing, switchEditing] = useState(false);\r\n    const [inUse, switchInUse] = useState(false);\r\n\r\n    useEffect(() => {\r\n        checkInUse();\r\n    });\r\n\r\n    function startEdit() {\r\n        switchEditing(true);\r\n        props.onCancelNewItem();\r\n    }\r\n\r\n    function updateItem(data) {\r\n        if (validateItem(data)) {\r\n            let storedItems = JSON.parse(localStorage.getItem('items'));\r\n            let edited = storedItems.findIndex(item => item.id === data.id);\r\n            storedItems[edited] = data;\r\n            localStorage.setItem('items', JSON.stringify(storedItems));\r\n            editItem({...data});\r\n            switchEditing(false);\r\n        }\r\n    }\r\n\r\n    function checkInUse() {\r\n        if (localStorage.getItem('weeks')) {\r\n            const weeks = JSON.parse(localStorage.getItem('weeks'));\r\n            weeks.forEach(week => {\r\n                if (week.items.find((item) => item[0] === props.item.id)) switchInUse(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editing && !props.currentlyAdding ?\r\n                <UpdateItem\r\n                    item={item}\r\n                    colors={props.colors}\r\n                    onUpdateItem={updateItem}\r\n                    onCancelUpdate={() => switchEditing(false)}\r\n                />\r\n                :\r\n                <div className='item'>\r\n                    <div\r\n                        onClick={startEdit}\r\n                        className='text'>\r\n                        {item.text}\r\n                    </div>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className='type'>\r\n                        {item.type ?\r\n                            <div className='day spot open'>\r\n                            </div>\r\n                            :\r\n                            <Hash size={14} />\r\n                        }\r\n                    </button>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className='number'>\r\n                        {cutNumber(item.number)}\r\n                    </button>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className={'color ' + item.color}>\r\n                    </button>\r\n                    <button\r\n                        value={item.id}\r\n                        disabled={inUse}\r\n                        onClick={props.onDeleteItem}\r\n                        className='plus-sign'>\r\n                        <X size={16} />\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Item from './Item';\r\nimport UpdateItem from './UpdateItem';\r\nimport getStoredItems from '../../functions/getStoredItems';\r\nimport {colorsDays} from '../../static/colorsDays';\r\nimport './items.css';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {Plus} from 'react-feather';\r\n\r\nexport default function Items() {\r\n\r\n    const [items, editItems] = useState(getStoredItems());\r\n    const [adding, switchAdding] = useState(false);\r\n\r\n    function addItem(data) {\r\n        let item = {\r\n            id: uuidv4(),\r\n            text: data.text,\r\n            type: data.type,\r\n            number: data.number,\r\n            color: data.color\r\n        };\r\n        let newItems = [...items];\r\n        newItems.push(item);\r\n        localStorage.setItem('items', JSON.stringify(newItems));\r\n        editItems([...newItems]);\r\n    }\r\n\r\n    function deleteItem(event) {\r\n        if (window.confirm('Really delete?')) {\r\n            let newItems = [...items];\r\n            let filtered = newItems.filter(item => item.id !== event.currentTarget.value);\r\n            localStorage.setItem('items', JSON.stringify(filtered));\r\n            editItems([...filtered]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main id='items'>\r\n            <h1>\r\n                Items\r\n            </h1>\r\n            {items.map(item =>\r\n                <Item\r\n                    key={item.id}\r\n                    item={item}\r\n                    colors={colorsDays}\r\n                    currentlyAdding={adding}\r\n                    onDeleteItem={deleteItem}\r\n                    onCancelNewItem={() => switchAdding(false)}\r\n                />\r\n            )}\r\n            {adding ?\r\n                <UpdateItem\r\n                    colors={colorsDays}\r\n                    onUpdateItem={addItem}\r\n                    onCancelUpdate={() => switchAdding(false)}\r\n                />\r\n                :\r\n                <button\r\n                    onClick={() => switchAdding(true)}\r\n                    className='plus-sign add'>\r\n                    <Plus size={18} />\r\n                </button>\r\n            }\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Row from '../../Arrange/ArrangeWeek/Row';\r\nimport '../../Arrange/arrange.css';\r\n\r\nexport default function ArchiveWeek(props) {\r\n    return (\r\n        <div className='week'>\r\n            <section>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td className='week-date left-column'>\r\n                            {props.week.date}\r\n                        </td>\r\n                        <td className='week-date'>\r\n                        </td>\r\n                        {props.days.map((day, i) =>\r\n                            <td\r\n                                key={day + i + props.week.date}\r\n                                className='day'>\r\n                                {day.substring(0,1)}\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.week.items.map((item, i) =>\r\n                            <Row\r\n                                key={item.id + props.week.date}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                weekBeginning={props.week.date}\r\n                                archive={true}\r\n                                onChangeDay={null}\r\n                                onRemoveItem={null}\r\n                            />\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ArchiveWeek from './ArchiveWeek';\r\nimport {days} from '../../static/colorsDays';\r\nimport '../../components/Arrange/arrange.css';\r\n\r\nexport default function Archive(props) {\r\n\r\n    const archive = getArchive();\r\n\r\n    function getArchive() {\r\n        if (localStorage.getItem('archive')) {\r\n            return JSON.parse(localStorage.getItem('archive'));\r\n        } else return [];\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <h1>\r\n                Archive\r\n            </h1>\r\n            {archive.map((week, i) =>\r\n                <ArchiveWeek\r\n                    key={'archiveWeek' + i}\r\n                    week={week}\r\n                    days={days}\r\n                />\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport './information.css';\r\nimport {Info, Plus, Check, X} from 'react-feather';\r\n\r\nexport default function Information() {\r\n\r\n    const [infoBox, toggleInfoBox] = useState(false);\r\n\r\n    function checkKey(event) {\r\n        if (event.key === 'Backspace' || event.key === 'Escape') {\r\n            event.preventDefault();\r\n            toggleInfoBox(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Info size={16} className='info' onClick={() => toggleInfoBox(!infoBox)} />\r\n            {infoBox &&\r\n                <>\r\n                    <div className='info-modal-bg modal-bg' onClick={() => toggleInfoBox(false)}>\r\n                    </div>\r\n                    <div className='info-box modal' tabIndex='0' onKeyDown={checkKey}>\r\n                        <h2>ITEMS</h2>\r\n                        <ul>\r\n                            <li>add items: name, type, number, colour</li>\r\n                            <li>type: choose between dot (one per day) or number (up to 100,000 per week)</li>\r\n                            <li>enter a weekly goal number for the item</li>\r\n                            <li>choose a colour (so similar items can be visually grouped)</li>\r\n                        </ul>\r\n                        <h2>ARRANGE</h2>\r\n                        <ul>\r\n                            <li>touch an item on the list to add it to the week</li>\r\n                            <li>for dot items:</li>\r\n                            <li className='indent'>touch a cell to set as <i>todo</i> for that day</li>\r\n                            <li className='indent'>touch again to set as <i>done</i></li>\r\n                            <li>for number items:</li>\r\n                            <li className='indent'>touch a cell to select from options panel</li>\r\n                            <li>the number to the left of Monday tells you how many left to do that week</li>\r\n                            <li>when you've hit the weekly target for an item, the row will turn black</li>\r\n                        </ul>\r\n                        <h2>ARCHIVE</h2>\r\n                        <ul>\r\n                            <li>lists previous weeks</li>\r\n                            <li>not editable</li>\r\n                        </ul>\r\n                    </div>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Redirect, BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Nav from './components/Nav';\r\nimport Items from './components/Items';\r\nimport Arrange from './components/Arrange';\r\nimport Archive from './components/Archive';\r\nimport Information from './components/Information';\r\nimport './app.css';\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Header />\r\n            <Information />\r\n            <div className='bgPanel'>\r\n            </div>\r\n            <Switch>\r\n                <Route path='/Items'>\r\n                    <Items />\r\n                </Route>\r\n                <Route path='/Arrange'>\r\n                    <Arrange />\r\n                </Route>\r\n                <Route path='/Archive'>\r\n                    <Archive />\r\n                </Route>\r\n                <Route path='/'>\r\n                    <Redirect to='/Arrange' />\r\n                </Route>\r\n            </Switch>\r\n            <Nav />\r\n        </Router>\r\n    );\r\n}\r\n","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA.'\r\n                            );\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}