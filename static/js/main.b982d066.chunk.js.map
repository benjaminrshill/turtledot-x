{"version":3,"sources":["components/Modal/index.js","components/Nav/index.js","functions/validateItem.js","functions/cutNumber.js","components/Arrange/ArrangeWeek/Row/Cell/NumberModal/index.js","components/Arrange/ArrangeWeek/Row/Cell/index.js","components/Arrange/ArrangeWeek/Row/index.js","components/Arrange/ArrangeWeek/AddItems/index.js","components/Arrange/ArrangeWeek/ActionsPanel/index.js","components/Arrange/ArrangeWeek/NotesModal/index.js","components/Buttons/index.js","functions/getStoredItems.js","functions/sortColor.js","functions/getStoredWeek.js","static/colorsDays.js","components/Arrange/ArrangeWeek/index.js","components/Arrange/index.js","components/Items/UpdateItem/index.js","components/Items/Item/index.js","components/Items/index.js","components/Archive/ArchiveWeek/index.js","components/Archive/index.js","components/Information/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Modal","props","useState","show","switchShow","useEffect","setTimeout","className","name","onClick","onToggleModal","tabIndex","onKeyDown","event","key","target","nodeName","preventDefault","modal","Nav","to","activeClassName","size","validateItem","item","text","length","number","type","cutNumber","toString","slice","Math","ceil","NumberModal","day","currentValue","editCurrentValue","avgTodo","inputNumber","editInputNumber","validateTodo","onUpdateTodo","doEstimate","doChange","dayOfWeek","id","weekBeginning","min","max","value","onFocus","onChange","checkEnter","touchMax","pos","neg","touch","initial","X","Y","move","final","Cell","editingNumber","switchEditingNumber","updateTodo","onSaveTodo","index","checkVerticalLimit","data-id","data-item","rowIndex","data-day","isThisWeek","today","color","onChangeDay","classList","contains","onTouchStart","e","touches","clientX","clientY","onTouchMove","onTouchEnd","t","v","Row","todo","editTodo","currentTotal","tooHigh","tooLow","allDone","cutNum","goalNum","originalDay","row","editRow","numberDoneAndToDo","numberToDo","forEach","push","reduce","a","b","doNumbers","draggable","archive","shifting","data-index","data-dragid","data-dragweek","deleting","onRemoveItem","data-direction","onMoveItem","map","i","days","AddItems","addOne","onAddItemToWeek","onAddAllItemsToWeek","unselected","data-week","ActionsPanel","onSwitchDeleting","htmlFor","showShiftItems","onSwitchShifting","NotesModal","note","editNote","isCurrent","checkCurrent","thisDay","isArchive","maxLength","onInput","onSaveNote","AddBtn","switchAdding","getStoredItems","localStorage","getItem","JSON","parse","sort","getStoredWeek","week","notes","colorsDays","ArrangeWeek","editWeek","editUnselected","selected","editSelected","switchDeleting","switchShifting","addingItems","switchAddingItems","editingNotes","switchEditingNotes","createSelected","createUnselected","newWeek","items","findIndex","uItem","moveItem","splice","saveItem","setItem","stringify","removeItemFromWeek","filter","needle","moveItemInWeek","newIndex","currentTarget","dataset","direction","changeDay","updateArchive","saveTodo","saveNote","thisWeek","date","hasNotes","unshift","createWeek","weekName","substring","ids","undefined","Arrange","Date","dateToday","updateDateToday","getWeekBeginning","thisWeekBeginning","updateThisWeekBeginning","nextWeekBeginning","updateNextWeekBeginning","getDay","ogDayToday","updateOgDayToday","dayToday","updateDayToday","addWeek","newDate","padZero","n","setDate","getDate","getFullYear","getMonth","setInterval","window","location","reload","UpdateItem","itemToPlay","editItem","checkKey","updateItem","handleInput","newItem","onUpdateItem","onCancelUpdate","colors","Item","editing","switchEditing","inUse","switchInUse","startEdit","onCancelNewItem","find","checkInUse","currentlyAdding","data","storedItems","edited","disabled","onDeleteItem","Items","editItems","adding","deleteItem","confirm","filtered","uuidv4","newItems","ArchiveWeek","notesOpen","switchNotesOpen","Archive","Information","App","infoBox","toggleInfoBox","basename","process","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.b982d066.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function Modal(props) {\r\n\r\n\tconst [show, switchShow] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => switchShow(true), 10);\r\n\t}, []);\r\n\r\n\tfunction checkBackspace(event) {\r\n\t\tif ((event.key === 'Backspace' && (event.target.nodeName !== 'INPUT' && event.target.nodeName !== 'TEXTAREA')) || event.key === 'Escape') {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tprops.onToggleModal(false);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tclassName={props.name + '-modal-bg modal-bg' + (show ? ' show' : '')}\r\n\t\t\t\tonClick={() => props.onToggleModal(false)}\r\n\t\t\t>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName={props.name + '-modal modal' + (show ? ' show' : '')}\r\n\t\t\t\ttabIndex='0'\r\n\t\t\t\tonKeyDown={checkBackspace}\r\n\t\t\t>\r\n\t\t\t\t{props.modal}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Plus, BookOpen} from 'react-feather';\r\nimport './nav.css';\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav>\r\n            <NavLink to='/Items' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <Plus size={16} />\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Items\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Arrange' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <span className='menu-icon-doit'>\r\n                    </span>\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Arrange\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Archive' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <BookOpen size={16} />\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Archive\r\n                </div>\r\n            </NavLink>\r\n        </nav>\r\n    );\r\n}","export default function validateItem(item) {\r\n    if (item.text.length > 0 && item.text.length < 12 && item.number > 0) {\r\n        if (item.type && item.number < 8) return true;\r\n        if (!item.type && item.number < 100001) return true;\r\n    } else return false;\r\n}\r\n","export default function cutNumber(number) {\r\n    if (number > 99999) {\r\n        return '100k';\r\n    } else if (number > 9999) {\r\n        return number.toString().slice(0,2) + 'k';\r\n    } else if (number > 999) {\r\n        if (number % 1000 === 0) return number.toString().slice(0, 1) + 'k';\r\n        return number.toString().slice(0, 1) + '.' + number.toString().slice(1, 2) + 'k';\r\n    } else if (number % 1 !== 0) {\r\n        return Math.ceil(number);\r\n    } else return number;\r\n}\r\n","import React, {useState} from 'react';\r\nimport cutNumber from '../../../../../../functions/cutNumber';\r\nimport {Check} from 'react-feather';\r\nimport './numberModal.css';\r\n\r\nexport default function NumberModal(props) {\r\n\r\n    const [currentValue, editCurrentValue] = useState(props.day);\r\n    const [inputNumber, editInputNumber] = useState(props.day > 0 ? props.day : cutNumber(props.avgTodo));\r\n\r\n    function validateTodo() {\r\n        if (currentValue > -2 && currentValue < 100001) {\r\n            props.onUpdateTodo(currentValue);\r\n        }\r\n        props.onToggleModal(false);\r\n    }\r\n\r\n    function checkEnter(event) {\r\n        if (event.key === 'Enter') validateTodo();\r\n    }\r\n\r\n    function doEstimate() {\r\n        if (inputNumber > 0) {\r\n            editCurrentValue(inputNumber);\r\n        } else if (props.avgTodo > 0) {\r\n            doChange(cutNumber(props.avgTodo));\r\n        } else {\r\n            doChange(1);\r\n        }\r\n    }\r\n\r\n    function doChange(number) {\r\n        editInputNumber(number);\r\n        editCurrentValue(number);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='header'>\r\n                <h2>\r\n                    {props.dayOfWeek}:\r\n                </h2>\r\n                <h3>\r\n                    {props.text}\r\n                </h3>\r\n            </div>\r\n            <div className='options'>\r\n                <div\r\n                    className={currentValue === -1 ? 'selected' : ''}\r\n                    onClick={() => editCurrentValue(-1)}\r\n                >\r\n                    not today\r\n                </div>\r\n                <div\r\n                    className={currentValue === 0 ? 'selected' : ''}\r\n                    onClick={() => editCurrentValue(0)}\r\n                >\r\n                    schedule for today\r\n                </div>\r\n                <div\r\n                    className={currentValue > 0 ? 'selected' : ''}\r\n                    onClick={doEstimate}\r\n                >\r\n                    number done today\r\n                    <input\r\n                        id={props.dayOfWeek + props.weekBeginning + props.id + 'inputNumber'}\r\n                        type='number'\r\n                        min='-1'\r\n                        max='100000'\r\n                        value={inputNumber}\r\n                        onFocus={doEstimate}\r\n                        onChange={event => doChange(+event.target.value)}\r\n                        onKeyDown={event => checkEnter(event)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='actions-panel'>\r\n                <button\r\n                    onClick={validateTodo}\r\n                    className='save'\r\n                >\r\n                    <Check size={16} />\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport Modal from '../../../../Modal';\r\nimport NumberModal from './NumberModal';\r\nimport cutNumber from '../../../../../functions/cutNumber';\r\nimport './cell.css';\r\nimport '../../../../Modal/modal.css';\r\n\r\nconst touchMax = {\r\n    max: {\r\n        pos: 12, neg: -12\r\n    },\r\n    limit: {\r\n        pos: 10, neg: -10\r\n    }\r\n}\r\n\r\nconst touch = {\r\n    initial: {\r\n        X: 0, Y: 0\r\n    },\r\n    move: {\r\n        X: 0, Y: 0\r\n    },\r\n    final: {\r\n        X: 0, Y: 0\r\n    }\r\n}\r\n\r\nexport default function Cell(props) {\r\n\r\n    const [editingNumber, switchEditingNumber] = useState(false);\r\n    const avgTodo = props.avgTodo > 0 ? cutNumber(props.avgTodo) : '';\r\n\r\n    function openModal(event) {\r\n        if (event.target.classList.contains('main-cell') || event.target.classList.contains('type-cell')) switchEditingNumber(true);\r\n    }\r\n\r\n    function updateTodo(value) {\r\n        props.onSaveTodo(props.id, props.index, value);\r\n    }\r\n\r\n    function startTouch(e) {\r\n        touch.initial.X = e.touches[0].clientX;\r\n        touch.initial.Y = e.touches[0].clientY;\r\n    }\r\n\r\n    function moveTouch(e) {\r\n        if (touch.initial.X === 0 && touch.initial.Y === 0) return;\r\n        touch.move.X = e.touches[0].clientX;\r\n        touch.final.X = touch.initial.X - touch.move.X;\r\n        touch.move.Y = e.touches[0].clientY;\r\n        touch.final.Y = touch.initial.Y - touch.move.Y;\r\n    }\r\n\r\n    function endTouch() {\r\n        if (touch.final.X > touchMax.max.pos && checkVerticalLimit()) {\r\n            updateTodo(-1);\r\n        } else if (touch.final.X < touchMax.max.neg && checkVerticalLimit()) {\r\n            updateTodo(1);\r\n        }\r\n        for (const t in touch) {\r\n            for (let v in touch[t]) {\r\n                touch[t][v] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkVerticalLimit() {\r\n        return touch.final.Y < touchMax.limit.pos && touch.final.Y > touchMax.limit.neg;\r\n    }\r\n\r\n    return (\r\n        <td\r\n            data-id={props.id}\r\n            data-item={props.rowIndex}\r\n            data-day={props.index}\r\n            className={'main-cell week-spots' + (props.isThisWeek && props.today === props.index ? props.color : '')}\r\n            onClick={props.type ? props.onChangeDay : props.isThisWeek ? openModal : props.onChangeDay}\r\n            onTouchStart={props.type && props.isThisWeek ? startTouch : null}\r\n            onTouchMove={props.type && props.isThisWeek ? moveTouch : null}\r\n            onTouchEnd={props.type && props.isThisWeek ? endTouch : null}\r\n        >\r\n            <div\r\n                className={props.type ?\r\n                    ('spot' + (props.day === 1 ? ' closed' : props.day === 0 ? ' open' : ''))\r\n                    :\r\n                    ('type-cell' + (props.day === 0 ? ' grey' : ''))}\r\n            >\r\n                {!props.type && props.day > 0 ? props.day : !props.type && props.day > -1 ? avgTodo : ''}\r\n            </div>\r\n            {editingNumber &&\r\n                <Modal\r\n                    name={'number'}\r\n                    onToggleModal={switchEditingNumber}\r\n                    modal={\r\n                        <NumberModal\r\n                            id={props.id}\r\n                            day={props.day}\r\n                            avgTodo={props.avgTodo}\r\n                            text={props.text}\r\n                            dayOfWeek={props.dayOfWeek}\r\n                            weekBeginning={props.weekBeginning}\r\n                            onUpdateTodo={updateTodo}\r\n                            onToggleModal={switchEditingNumber}\r\n                        />\r\n                    }\r\n                />\r\n            }\r\n        </td>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Cell from './Cell';\r\nimport cutNumber from '../../../../functions/cutNumber';\r\nimport {ArrowUp, ArrowDown} from 'react-feather';\r\nimport './row.css';\r\n\r\nexport default function Row(props) {\r\n\r\n    const [todo, editTodo] = useState([...props.todo]);\r\n    const [row, editRow] = useState({\r\n        currentTotal: 0,\r\n        avgTodo: 0,\r\n        tooHigh: false,\r\n        tooLow: false,\r\n        allDone: false,\r\n        cutNum: 0,\r\n        goalNum: 0,\r\n        originalDay: 0,\r\n        today: 0\r\n    });\r\n\r\n    useEffect(() => editTodo([...props.todo]), [props]);\r\n    useEffect(() => doNumbers(), [props]);\r\n\r\n    function doNumbers() {\r\n        let numberDoneAndToDo = [];\r\n        let numberToDo = [];\r\n        props.todo.forEach(day => {\r\n            if (day > -1) numberDoneAndToDo.push(+day);\r\n            if (day === 0) numberToDo.push(+day);\r\n        });\r\n        const currentTotal = numberDoneAndToDo.reduce((a, b) => a + b, 0);\r\n        const allDone = currentTotal >= +props.number;\r\n        const avgTodo = numberToDo.length > 0 ? (+props.number - currentTotal) / numberToDo.length : 0;\r\n        const tooHigh = numberDoneAndToDo.length > +props.number;\r\n        const tooLow = numberDoneAndToDo.length < +props.number;\r\n        const cutNum = cutNumber(+props.number);\r\n        const goalNum = cutNumber(+props.number - currentTotal);\r\n        editRow({\r\n            currentTotal: currentTotal,\r\n            avgTodo: avgTodo,\r\n            tooHigh: tooHigh,\r\n            tooLow: tooLow,\r\n            allDone: allDone,\r\n            cutNum: cutNum,\r\n            goalNum: goalNum\r\n        });\r\n    }\r\n\r\n    return (\r\n        <tr\r\n            draggable={!props.archive && props.shifting}\r\n            id={props.id + props.weekBeginning}\r\n            data-index={props.index}\r\n            data-dragid={props.id}\r\n            data-dragweek={props.weekBeginning}\r\n            className={row.allDone ? 'all-done' : props.color}\r\n        >\r\n            <td\r\n                id={props.id}\r\n                className={'week-item left-column' + (props.deleting || props.shifting ? ' small' : '')}>\r\n                {!props.archive && props.deleting &&\r\n                    <button\r\n                        value={props.id}\r\n                        onClick={props.onRemoveItem}\r\n                        className='week-item-actions'>\r\n                        &mdash;\r\n                    </button>\r\n                }\r\n                {!props.archive && props.shifting &&\r\n                <div>\r\n                    <button\r\n                        value={props.index}\r\n                        data-direction='up'\r\n                        onClick={props.onMoveItem}\r\n                        className='week-item-actions'>\r\n                        <ArrowUp size={10} />\r\n                    </button>\r\n                    <button\r\n                        value={props.index}\r\n                        data-direction='down'\r\n                        onClick={props.onMoveItem}\r\n                        className='week-item-actions'>\r\n                        <ArrowDown size={10} />\r\n                    </button>\r\n                </div>\r\n                }\r\n                {props.text}\r\n            </td>\r\n            <td className={'main-cell week-item-number'\r\n                + (props.type && (row.tooHigh ? ' week-number-arrow-down' : row.tooLow ? ' week-number-arrow-up' : ''))}>\r\n                {cutNumber(row.allDone ? row.currentTotal : row.goalNum > -1 ? row.goalNum : props.number)}\r\n            </td>\r\n            {todo.map((day, i) =>\r\n                <Cell\r\n                    key={props.number + props.id + i}\r\n                    id={props.id}\r\n                    day={day}\r\n                    index={i}\r\n                    rowIndex={props.index}\r\n                    today={props.today}\r\n                    avgTodo={row.avgTodo}\r\n                    type={props.type}\r\n                    color={props.color}\r\n                    isThisWeek={props.isThisWeek}\r\n                    weekBeginning={props.weekBeginning}\r\n                    dayOfWeek={!props.archive && props.days[i]}\r\n                    text={props.text}\r\n                    onSaveTodo={props.onSaveTodo}\r\n                    onChangeDay={props.onChangeDay}\r\n                />\r\n            )}\r\n        </tr>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './addItems.css';\r\n\r\nexport default function AddItems(props) {\r\n\r\n\tfunction addAll() {\r\n\t\tprops.onAddAllItemsToWeek();\r\n\t\tprops.onToggleModal(false);\r\n\t}\r\n\r\n\tfunction addOne(event) {\r\n\t\tprops.onAddItemToWeek(event);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Add Items</h2>\r\n\r\n\t\t\t<button\r\n\t\t\t\tclassName='add-all-items'\r\n\t\t\t\tonClick={addAll}\r\n\t\t\t>\r\n\t\t\t\tadd all items\r\n\t\t\t</button>\r\n\r\n\t\t\t<div className='items-list'>\r\n\t\t\t\t{props.unselected.map(item =>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tkey={item.id + props.weekBeginning + 'u'}\r\n\t\t\t\t\t\tvalue={item.id}\r\n\t\t\t\t\t\tdata-week={props.weekBeginning}\r\n\t\t\t\t\t\tclassName={'items-list-item ' + item.color}\r\n\t\t\t\t\t\tonClick={addOne}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{item.text}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport {Maximize2, Trash, Trash2, X} from 'react-feather';\r\n\r\nexport default function ActionsPanel(props) {\r\n\r\n    return (\r\n        <div className='actions-panel'>\r\n            <span>\r\n                <input\r\n                    type='checkbox'\r\n                    id={'delete-items' + props.weekBeginning}\r\n                    onChange={() => !props.shifting && props.onSwitchDeleting(!props.deleting)}\r\n                />\r\n                <label htmlFor={'delete-items' + props.weekBeginning}>\r\n                    {props.deleting ?\r\n                        <Trash2 size={14}/>\r\n                        :\r\n                        <Trash size={14}/>\r\n                    }\r\n                </label>\r\n            </span>\r\n            {props.showShiftItems &&\r\n                <span>\r\n                    <input\r\n                        type='checkbox'\r\n                        id={'shift-items' + props.weekBeginning}\r\n                        onChange={() => !props.deleting && props.onSwitchShifting(!props.shifting)}\r\n                    />\r\n                    <label htmlFor={'shift-items' + props.weekBeginning}>\r\n                        {props.shifting ?\r\n                            <X size={14}/>\r\n                            :\r\n                            <Maximize2 size={12} className='deg45'/>\r\n                        }\r\n                    </label>\r\n                </span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport {Check} from 'react-feather';\r\nimport './notesModal.css';\r\n\r\nexport default function NotesModal(props) {\r\n\r\n\tconst [note, editNote] = useState(props.note);\r\n\tconst isCurrent = checkCurrent();\r\n\r\n\tfunction saveNote() {\r\n\t\tprops.onSaveNote(note, props.index);\r\n\t\tprops.onToggleModal(false);\r\n\t}\r\n\r\n\tfunction checkCurrent() {\r\n\t\tif (props.isThisWeek) {\r\n\t\t\tswitch (props.index) {\r\n\t\t\t\tcase props.today:\r\n\t\t\t\t\treturn 'today';\r\n\t\t\t\tcase props.today - 1:\r\n\t\t\t\t\treturn 'yesterday';\r\n\t\t\t\tcase props.today + 1:\r\n\t\t\t\t\treturn 'tomorrow';\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn props.isThisWeek ? 'this week' : 'next week';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (props.today === 6 && props.index === 0) {\r\n\t\t\t\treturn 'tomorrow';\r\n\t\t\t} else {\r\n\t\t\t\treturn props.isThisWeek ? 'this week' : 'next week';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Notes</h2>\r\n\r\n\t\t\t<div className='day-name'>\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName='this-day'\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.thisDay}\r\n\t\t\t\t</span>\r\n\t\t\t\t{isCurrent && !props.isArchive &&\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName='is-current'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{isCurrent}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='text'>\r\n\t\t\t\t{!props.isArchive ?\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tmaxLength='500'\r\n\t\t\t\t\t\tvalue={note}\r\n\t\t\t\t\t\tonInput={event => editNote(event.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{note}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t\t{!props.isArchive &&\r\n\t\t\t\t<div className='actions-panel'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='save'\r\n\t\t\t\t\t\tonClick={saveNote}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Check size={16} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport { Plus } from 'react-feather';\r\nimport './buttons.css';\r\n\r\nexport function AddBtn(props) {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName='plus-sign add'\r\n\t\t\tonClick={() => props.switchAdding(true)}\r\n\t\t>\r\n\t\t\t<Plus size={18} />\r\n\t\t</button>\r\n\t)\r\n}\r\n","import sortColor from './sortColor';\r\n\r\nexport default function getStoredItems() {\r\n    if (localStorage.getItem('items')) {\r\n        return sortColor(JSON.parse(localStorage.getItem('items')));\r\n    } else return [];\r\n}\r\n","export default function sortColor(array) {\r\n    return array.sort((a, b) => (a.color > b.color) ? 1 : -1);\r\n}\r\n","export default function getStoredWeek(week) {\r\n    if (localStorage.getItem(week)) {\r\n        return JSON.parse(localStorage.getItem(week));\r\n    } else return {\r\n        notes: ['', '', '', '', '', '', '']\r\n    };\r\n}\r\n","export const colorsDays = ['color0', 'color1', 'color2', 'color3', 'color4', 'color5', 'color6', 'color7', 'color8', 'color9'];\r\n\r\nexport const days = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];\r\n","import React, { useEffect, useState } from 'react';\r\nimport Row from './Row';\r\nimport AddItems from './AddItems';\r\nimport ActionsPanel from './ActionsPanel';\r\nimport Modal from '../../Modal';\r\nimport NotesModal from './NotesModal';\r\nimport { AddBtn } from '../../Buttons';\r\nimport getStoredItems from '../../../functions/getStoredItems';\r\nimport getStoredWeek from '../../../functions/getStoredWeek';\r\nimport { days } from '../../../static/colorsDays';\r\nimport { Edit2, MoreHorizontal } from 'react-feather';\r\nimport '../arrange.css';\r\nimport '../../Modal/modal.css';\r\n\r\nexport default function ArrangeWeek(props) {\r\n\r\n    const [week, editWeek] = useState(getStoredWeek(props.weekBeginning));\r\n    const [unselected, editUnselected] = useState(getStoredItems());\r\n    const [selected, editSelected] = useState([]);\r\n    const [deleting, switchDeleting] = useState(false);\r\n    const [shifting, switchShifting] = useState(false);\r\n    const [addingItems, switchAddingItems] = useState(false);\r\n    const [editingNotes, switchEditingNotes] = useState(false);\r\n\r\n    useEffect(() => createWeek(), [week]);\r\n\r\n    async function createWeek() {\r\n        let createSelected = [];\r\n        let createUnselected = getStoredItems();\r\n        let newWeek = await getStoredWeek(props.weekBeginning);\r\n        if (newWeek.items) {\r\n            newWeek.items.forEach(item => {\r\n                let index = createUnselected.findIndex(uItem => uItem.id === item[0]);\r\n                if (index > -1) {\r\n                    let moveItem = createUnselected.splice(index, 1);\r\n                    moveItem[0].todo = item[1];\r\n                    createSelected.push(moveItem[0]);\r\n                }\r\n            });\r\n        }\r\n        editUnselected([...createUnselected]);\r\n        editSelected([...createSelected]);\r\n        return;\r\n    }\r\n\r\n    function saveItem(newWeek) {\r\n        if (!newWeek.notes) newWeek.notes = ['', '', '', '', '', '', ''];\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n    }\r\n\r\n    function addAllItemsToWeek() {\r\n        let ids = [];\r\n        let newWeek = {...week};\r\n        unselected.forEach(item => ids.push(item.id));\r\n        if (newWeek.items === undefined) {\r\n            newWeek.date = props.weekBeginning;\r\n            newWeek.items = [];\r\n        };\r\n        ids.forEach(id => newWeek.items.push([id, [-1, -1, -1, -1, -1, -1, -1]]));\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function addItemToWeek(event) {\r\n        let newWeek = {...week};\r\n        if (newWeek.items === undefined) {\r\n            newWeek.date = props.weekBeginning;\r\n            newWeek.items = [];\r\n        };\r\n        newWeek.items.push([event.target.value, [-1, -1, -1, -1, -1, -1, -1]]);\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function removeItemFromWeek(event) {\r\n        let newWeek = {...week};\r\n        newWeek.items = newWeek.items.filter(needle => needle[0] !== event.target.value);\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function moveItemInWeek(event) {\r\n        let newWeek = JSON.parse(JSON.stringify(week));\r\n        let index = +event.currentTarget.value;\r\n        let newIndex;\r\n        if (event.currentTarget.dataset.direction === 'up') {\r\n            newIndex = index > 0 ? index - 1 : newWeek.items.length - 1;\r\n        } else {\r\n            newIndex = index < newWeek.items.length - 1 ? index + 1 : 0;\r\n        }\r\n        newWeek.items.splice(newIndex, 0, newWeek.items.splice(index, 1)[0]);\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function changeDay(event) {\r\n        let newWeek = {...week};\r\n        let index = newWeek.items.findIndex(item => item[0] === event.currentTarget.dataset.id);\r\n        let item = newWeek.items[index];\r\n        let day = event.currentTarget.dataset.day;\r\n        if (props.isThisWeek) {\r\n            item[1][day] = (item[1][day] === (-1) ? 0 : item[1][day] === 0 ? 1 : (-1));\r\n        } else {\r\n            item[1][day] = (item[1][day] > (-1) ? (-1) : 0);\r\n        }\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n        updateArchive(newWeek, index);\r\n    }\r\n\r\n    function saveTodo(id, day, value) {\r\n        let newWeek = {...week};\r\n        let index = newWeek.items.findIndex(item => item[0] === id);\r\n        let item = newWeek.items[index];\r\n        item[1][day] = value;\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n        updateArchive(newWeek, index);\r\n    }\r\n\r\n    function saveNote(value, i) {\r\n        let newWeek = {...week};\r\n        newWeek.notes[i] = value;\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function updateArchive(newWeek, i) {\r\n        if (props.isThisWeek) {\r\n            let archive = JSON.parse(localStorage.getItem('archive') || []);\r\n            let thisWeek = {\r\n                date: props.weekBeginning,\r\n                items: [...selected]\r\n            };\r\n            thisWeek.items[i].todo = newWeek.items[i][1];\r\n            if (hasNotes(newWeek.notes)) thisWeek.notes = newWeek.notes;\r\n            let index = archive.findIndex(week => week.date === thisWeek.date);\r\n            index > -1 ? archive[index] = thisWeek : archive.unshift(thisWeek);\r\n            localStorage.setItem('archive', JSON.stringify(archive));\r\n        }\r\n    }\r\n\r\n    function hasNotes(notes) {\r\n        let hasNotes = false;\r\n        notes.forEach(note => {\r\n            if (note !== '') hasNotes = true;\r\n        });\r\n        return hasNotes;\r\n    }\r\n\r\n    return (\r\n        <div className='week'>\r\n            {props.weekName === 'This Week' ?\r\n                <h1>\r\n                    {props.weekName}\r\n                </h1>\r\n                :\r\n                <h2>\r\n                    {props.weekName}\r\n                </h2>\r\n            }\r\n            <section>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td className='week-date left-column'>\r\n                            {props.weekBeginning}\r\n                        </td>\r\n                        <td className='week-date'>\r\n                        </td>\r\n                        {props.days.map((day, i) =>\r\n                            <td\r\n                                key={day + i + props.weekBeginning}\r\n                                className='day'\r\n                            >\r\n                                {day.substring(0,1)}\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody data-dragweek={props.weekBeginning}>\r\n                        {selected.map((item, i) =>\r\n                            <Row\r\n                                key={item.id + props.weekBeginning}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                today={props.today}\r\n                                isThisWeek={props.isThisWeek}\r\n                                weekBeginning={props.weekBeginning}\r\n                                days={days}\r\n                                deleting={deleting}\r\n                                shifting={shifting}\r\n                                onRemoveItem={removeItemFromWeek}\r\n                                onMoveItem={moveItemInWeek}\r\n                                onChangeDay={changeDay}\r\n                                onSaveTodo={saveTodo}\r\n                            />\r\n                        )}\r\n                        {week.notes &&\r\n                            <tr>\r\n                                <td className='no-table'>\r\n                                    {selected.length > 0 &&\r\n                                        <ActionsPanel\r\n                                            showShiftItems={selected.length > 1}\r\n                                            weekBeginning={props.weekBeginning}\r\n                                            deleting={deleting}\r\n                                            onSwitchDeleting={switchDeleting}\r\n                                            shifting={shifting}\r\n                                            onSwitchShifting={switchShifting}\r\n                                        />\r\n                                    }\r\n                                </td>\r\n                                <td className='no-table'>\r\n                                    <Edit2 size={12} />\r\n                                </td>\r\n                                {week.notes.map((note, i) =>\r\n                                    <td\r\n                                        key={props.weekBeginning + 'notes' + i}\r\n                                        className='notes-cell'\r\n                                        onClick={event => event.target.classList.contains('notes-cell') ? switchEditingNotes(props.weekBeginning + i) : ''}\r\n                                    >\r\n                                        {week.notes[i] &&\r\n                                            <MoreHorizontal\r\n                                                className='notes-cell'\r\n                                                size={12}\r\n                                            />\r\n                                        }\r\n                                        {editingNotes === (props.weekBeginning + i) &&\r\n                                            <Modal\r\n                                                name={'notes'}\r\n                                                onToggleModal={switchEditingNotes}\r\n                                                modal={\r\n                                                    <NotesModal\r\n                                                        key={props.weekBeginning + 'addItems'}\r\n                                                        index={i}\r\n                                                        note={note}\r\n                                                        day={days[i]}\r\n                                                        today={props.today}\r\n                                                        thisDay={days[i]}\r\n                                                        isThisWeek={props.isThisWeek}\r\n                                                        weekBeginning={props.weekBeginning}\r\n                                                        onSaveNote={saveNote}\r\n                                                        onToggleModal={switchEditingNotes}\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        }\r\n                                    </td>\r\n                                )}\r\n                            </tr>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n            {unselected.length > 0 &&\r\n                <div className='edit-box'>\r\n                    <AddBtn\r\n                        switchAdding={switchAddingItems}\r\n                    />\r\n                    {addingItems &&\r\n                        <Modal\r\n                            name={'add-items'}\r\n                            onToggleModal={switchAddingItems}\r\n                            modal={\r\n                                <AddItems\r\n                                    key={props.weekBeginning + 'addItems'}\r\n                                    unselected={unselected}\r\n                                    onAddAllItemsToWeek={addAllItemsToWeek}\r\n                                    onAddItemToWeek={addItemToWeek}\r\n                                    onToggleModal={switchAddingItems}\r\n                                />\r\n                            }\r\n                        />\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport ArrangeWeek from './ArrangeWeek';\r\nimport {days} from '../../static/colorsDays';\r\nimport './arrange.css';\r\n\r\nexport default function Arrange() {\r\n\r\n    const [dateToday, updateDateToday] = useState(new Date());\r\n    const [thisWeekBeginning, updateThisWeekBeginning] = useState(getWeekBeginning());\r\n    const [nextWeekBeginning, updateNextWeekBeginning] = useState(getWeekBeginning(7));\r\n\r\n    const [ogDayToday, updateOgDayToday] = useState(dateToday.getDay());\r\n    const [dayToday, updateDayToday] = useState(ogDayToday === 0 ? 6 : ogDayToday - 1);\r\n\r\n    useEffect(() => updateOgDayToday(dateToday.getDay()), [dateToday]);\r\n    useEffect(() => updateDayToday(ogDayToday === 0 ? 6 : ogDayToday - 1), [ogDayToday]);\r\n    useEffect(() => updateThisWeekBeginning(getWeekBeginning()), [dateToday]);\r\n    useEffect(() => updateNextWeekBeginning(getWeekBeginning(7)), [dateToday]);\r\n\r\n    setInterval(() => {\r\n        const newDate = new Date();\r\n        if (newDate.getDay() === 1 && dateToday.getDay() === 0) {\r\n            window.location.reload();\r\n        } else if (newDate.getDate() !== dateToday.getDate()) {\r\n            updateDateToday(newDate);\r\n        }\r\n    }, 60000);\r\n\r\n    function getWeekBeginning(addWeek = 0) {\r\n        let newDate = new Date(),\r\n            day = newDate.getDay();\r\n        function padZero(n) { return n < 10 ? '0' + n : n }\r\n        if (day > 1) {\r\n            newDate.setDate(newDate.getDate() - day + 1 + addWeek);\r\n        } else if (day === 0) {\r\n            newDate.setDate(newDate.getDate() - 6 + addWeek);\r\n        } else {\r\n            newDate.setDate(newDate.getDate() + addWeek);\r\n        }\r\n        return newDate.getFullYear() + '/' + padZero(newDate.getMonth() + 1) + '/' + padZero(newDate.getDate());\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <ArrangeWeek\r\n                key={'thisWeek'}\r\n                today={dayToday}\r\n                weekName={'This Week'}\r\n                days={days}\r\n                weekBeginning={thisWeekBeginning}\r\n                isThisWeek={true}\r\n            />\r\n            <ArrangeWeek\r\n                key={'nextWeek'}\r\n                today={dayToday}\r\n                weekName={'Next Week'}\r\n                days={days}\r\n                weekBeginning={nextWeekBeginning}\r\n                thisWeekBeginning={thisWeekBeginning}\r\n            />\r\n        </main>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport validateItem from '../../../functions/validateItem';\r\nimport '../../Arrange/';\r\nimport {X, Check} from 'react-feather';\r\n\r\nexport default function UpdateItem(props) {\r\n\r\n    const itemToPlay = props.item ? {...props.item} :\r\n        {\r\n            id: '',\r\n            text: '',\r\n            type: true,\r\n            number: 1,\r\n            color: 'color0'\r\n        };\r\n\r\n    const [item, editItem] = useState(itemToPlay);\r\n\r\n    function checkKey(event) {\r\n        if (event.key === 'Enter') updateItem();\r\n    }\r\n\r\n    function handleInput(event) {\r\n        let newItem = {...item};\r\n        newItem[event.target.name] = event.target.value;\r\n        editItem({...newItem});\r\n    }\r\n\r\n    function switchType() {\r\n        let newItem = {...item};\r\n        newItem.type = !newItem.type;\r\n        editItem({...newItem});\r\n    }\r\n\r\n    function updateItem() {\r\n        if (validateItem(item)) {\r\n            props.onUpdateItem({...item});\r\n            editItem({\r\n                id: '',\r\n                text: '',\r\n                type: true,\r\n                number: 1,\r\n                color: 'color0'\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className='item'>\r\n                <input\r\n                    type='text'\r\n                    name='text'\r\n                    value={item.text}\r\n                    onChange={handleInput}\r\n                    onKeyDown={event => checkKey(event)}\r\n                    className='text'\r\n                />\r\n                <button\r\n                    name='type'\r\n                    value={item.type}\r\n                    onClick={switchType}\r\n                    className='type'>\r\n                    {item.type ?\r\n                        <div className='day spot open'>\r\n                        </div>\r\n                        :\r\n                        '#'\r\n                    }\r\n                </button>\r\n                <input\r\n                    type='number'\r\n                    name='number'\r\n                    min='1'\r\n                    max='99999'\r\n                    value={item.number}\r\n                    onChange={handleInput}\r\n                    onKeyDown={event => checkKey(event)}\r\n                    className='number'\r\n                />\r\n                <button\r\n                    className={'color ' + item.color}>\r\n                </button>\r\n                <button\r\n                    onClick={props.onCancelUpdate}\r\n                    className='plus-sign'>\r\n                    <X size={16} />\r\n                </button>\r\n            </div>\r\n            <div className='edit-box'>\r\n                <div className='palette'>\r\n                    {props.colors.map(color =>\r\n                        <button\r\n                            key={color}\r\n                            name='color'\r\n                            value={color}\r\n                            onClick={handleInput}\r\n                            className={'palette-square ' + color}>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <div className='edit-box-buttons'>\r\n                    <button\r\n                        onClick={updateItem}\r\n                        className='edit-complete'>\r\n                        <Check size={16} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport UpdateItem from '../UpdateItem';\r\nimport cutNumber from '../../../functions/cutNumber';\r\nimport validateItem from '../../../functions/validateItem';\r\nimport {X, Hash} from 'react-feather';\r\n\r\nexport default function Item(props) {\r\n\r\n    const [item, editItem] = useState(props.item);\r\n    const [editing, switchEditing] = useState(false);\r\n    const [inUse, switchInUse] = useState(false);\r\n\r\n    useEffect(() => {\r\n        checkInUse();\r\n    });\r\n\r\n    function startEdit() {\r\n        switchEditing(true);\r\n        props.onCancelNewItem();\r\n    }\r\n\r\n    function updateItem(data) {\r\n        if (validateItem(data)) {\r\n            let storedItems = JSON.parse(localStorage.getItem('items'));\r\n            let edited = storedItems.findIndex(item => item.id === data.id);\r\n            storedItems[edited] = data;\r\n            localStorage.setItem('items', JSON.stringify(storedItems));\r\n            editItem({...data});\r\n            switchEditing(false);\r\n        }\r\n    }\r\n\r\n    function checkInUse() {\r\n        if (localStorage.getItem('weeks')) {\r\n            const weeks = JSON.parse(localStorage.getItem('weeks'));\r\n            weeks.forEach(week => {\r\n                if (week.items.find((item) => item[0] === props.item.id)) switchInUse(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editing && !props.currentlyAdding ?\r\n                <UpdateItem\r\n                    item={item}\r\n                    colors={props.colors}\r\n                    onUpdateItem={updateItem}\r\n                    onCancelUpdate={() => switchEditing(false)}\r\n                />\r\n                :\r\n                <div className='item'>\r\n                    <div\r\n                        onClick={startEdit}\r\n                        className='text'>\r\n                        {item.text}\r\n                    </div>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className='type'>\r\n                        {item.type ?\r\n                            <div className='day spot open'>\r\n                            </div>\r\n                            :\r\n                            <Hash size={14} />\r\n                        }\r\n                    </button>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className='number'>\r\n                        {cutNumber(item.number)}\r\n                    </button>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className={'color ' + item.color}>\r\n                    </button>\r\n                    <button\r\n                        value={item.id}\r\n                        disabled={inUse}\r\n                        onClick={props.onDeleteItem}\r\n                        className='plus-sign'>\r\n                        <X size={16} />\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Item from './Item';\r\nimport UpdateItem from './UpdateItem';\r\nimport getStoredItems from '../../functions/getStoredItems';\r\nimport {colorsDays} from '../../static/colorsDays';\r\nimport './items.css';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {Plus} from 'react-feather';\r\nimport { AddBtn } from '../Buttons';\r\n\r\nexport default function Items() {\r\n\r\n    const [items, editItems] = useState(getStoredItems());\r\n    const [adding, switchAdding] = useState(false);\r\n\r\n    function addItem(data) {\r\n        let item = {\r\n            id: uuidv4(),\r\n            text: data.text,\r\n            type: data.type,\r\n            number: data.number,\r\n            color: data.color\r\n        };\r\n        let newItems = [...items];\r\n        newItems.push(item);\r\n        localStorage.setItem('items', JSON.stringify(newItems));\r\n        editItems([...newItems]);\r\n    }\r\n\r\n    function deleteItem(event) {\r\n        if (window.confirm('Really delete?')) {\r\n            let newItems = [...items];\r\n            let filtered = newItems.filter(item => item.id !== event.currentTarget.value);\r\n            localStorage.setItem('items', JSON.stringify(filtered));\r\n            editItems([...filtered]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main id='items'>\r\n            <h1>\r\n                Items\r\n            </h1>\r\n            {items.map(item =>\r\n                <Item\r\n                    key={item.id}\r\n                    item={item}\r\n                    colors={colorsDays}\r\n                    currentlyAdding={adding}\r\n                    onDeleteItem={deleteItem}\r\n                    onCancelNewItem={() => switchAdding(false)}\r\n                />\r\n            )}\r\n            {adding ?\r\n                <UpdateItem\r\n                    colors={colorsDays}\r\n                    onUpdateItem={addItem}\r\n                    onCancelUpdate={() => switchAdding(false)}\r\n                />\r\n                :\r\n                <AddBtn\r\n                    switchAdding={switchAdding}\r\n                />\r\n            }\r\n        </main>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Row from '../../Arrange/ArrangeWeek/Row';\r\nimport Modal from '../../Modal';\r\nimport NotesModal from '../../Arrange/ArrangeWeek/NotesModal';\r\nimport { MoreHorizontal } from 'react-feather';\r\nimport '../../Arrange/arrange.css';\r\n\r\nexport default function ArchiveWeek({week, days}) {\r\n\r\n    const [notesOpen, switchNotesOpen] = useState(false);\r\n\r\n    return (\r\n        <div className='week'>\r\n            <section>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td className='week-date left-column'>\r\n                            {week.date}\r\n                        </td>\r\n                        <td className='week-date'>\r\n                        </td>\r\n                        {days.map((day, i) =>\r\n                            <td\r\n                                key={day + i + week.date}\r\n                                className='day'>\r\n                                {day.substring(0,1)}\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {week.items.map((item, i) =>\r\n                            <Row\r\n                                key={item.id + week.date}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                weekBeginning={week.date}\r\n                                archive={true}\r\n                                onChangeDay={null}\r\n                                onRemoveItem={null}\r\n                            />\r\n                        )}\r\n                        {week.notes &&\r\n                            <tr>\r\n                                <td className='no-table'>\r\n                                </td>\r\n                                <td className='no-table'>\r\n                                </td>\r\n                                {week.notes.map((note, i) =>\r\n                                    <td\r\n                                        key={week.date + 'notes' + i}\r\n                                        className='notes-cell'\r\n                                        onClick={event => event.target.classList.contains('notes-cell') ? switchNotesOpen(week.date + i) : ''}\r\n                                    >\r\n                                        {week.notes[i] &&\r\n                                            <MoreHorizontal\r\n                                                className='notes-cell'\r\n                                                size={12}\r\n                                            />\r\n                                        }\r\n                                        {notesOpen === (week.date + i) &&\r\n                                            <Modal\r\n                                                name={'notes'}\r\n                                                onToggleModal={switchNotesOpen}\r\n                                                modal={\r\n                                                    <NotesModal\r\n                                                        key={week.date + 'addItems'}\r\n                                                        index={i}\r\n                                                        note={note}\r\n                                                        day={days[i]}\r\n                                                        thisDay={days[i]}\r\n                                                        weekBeginning={week.date}\r\n                                                        isArchive={true}\r\n                                                        onToggleModal={switchNotesOpen}\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        }\r\n                                    </td>\r\n                                )}\r\n                            </tr>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ArchiveWeek from './ArchiveWeek';\r\nimport {days} from '../../static/colorsDays';\r\nimport '../../components/Arrange/arrange.css';\r\n\r\nexport default function Archive(props) {\r\n\r\n    const archive = getArchive();\r\n\r\n    function getArchive() {\r\n        if (localStorage.getItem('archive')) {\r\n            return JSON.parse(localStorage.getItem('archive'));\r\n        } else return [];\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <h1>\r\n                Archive\r\n            </h1>\r\n            {archive.map((week, i) =>\r\n                <ArchiveWeek\r\n                    key={'archiveWeek' + i}\r\n                    week={week}\r\n                    days={days}\r\n                />\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './information.css';\r\n\r\nexport default function Information(props) {\r\n\r\n    return (\r\n        <>\r\n            <h2>ITEMS</h2>\r\n            <ul>\r\n                <li>add items: name, type, number, colour</li>\r\n                <li>type: choose between dot (one per day) or number (up to 100,000 per week)</li>\r\n                <li>enter a weekly goal number for the item</li>\r\n                <li>choose a colour (so similar items can be visually grouped)</li>\r\n            </ul>\r\n            <h2>ARRANGE</h2>\r\n            <ul>\r\n                <li>touch an item on the list to add it to the week</li>\r\n                <li>for dot items:</li>\r\n                <li className='indent'>touch a cell to set as <i>todo</i> for that day</li>\r\n                <li className='indent'>touch again to set as <i>done</i></li>\r\n                <li>for number items:</li>\r\n                <li className='indent'>touch a cell to select from options panel</li>\r\n                <li>the number to the left of Monday tells you how many left to do that week</li>\r\n                <li>when you've hit the weekly target for an item, the row will turn black</li>\r\n            </ul>\r\n            <h2>ARCHIVE</h2>\r\n            <ul>\r\n                <li>lists previous weeks</li>\r\n                <li>not editable</li>\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {Redirect, BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Modal from './components/Modal';\r\nimport Nav from './components/Nav';\r\nimport Items from './components/Items';\r\nimport Arrange from './components/Arrange';\r\nimport Archive from './components/Archive';\r\nimport Information from './components/Information';\r\nimport {Info} from 'react-feather';\r\nimport './app.css';\r\n\r\nexport default function App() {\r\n\r\n    const [infoBox, toggleInfoBox] = useState(false);\r\n\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Info size={16} className='info' onClick={() => toggleInfoBox(true)} />\r\n            {infoBox &&\r\n                <Modal\r\n                    name={'info'}\r\n                    onToggleModal={toggleInfoBox}\r\n                    modal={\r\n                        <Information\r\n                            onToggleModal={toggleInfoBox}\r\n                        />\r\n                    }\r\n                />\r\n            }\r\n            <div className='bgPanel'>\r\n            </div>\r\n            <Switch>\r\n                <Route path='/Items'>\r\n                    <Items />\r\n                </Route>\r\n                <Route path='/Arrange'>\r\n                    <Arrange />\r\n                </Route>\r\n                <Route path='/Archive'>\r\n                    <Archive />\r\n                </Route>\r\n                <Route path='/'>\r\n                    <Redirect to='/Arrange' />\r\n                </Route>\r\n            </Switch>\r\n            <Nav />\r\n        </Router>\r\n    );\r\n}\r\n","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA.'\r\n                            );\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}