{"version":3,"sources":["components/Header/turtledot.svg","components/Header/index.js","components/Nav/index.js","functions/validateItem.js","functions/cutNumber.js","components/Cell/index.js","components/Row/index.js","components/Arrange/ArrangeWeek/index.js","static/colors.js","components/Arrange/index.js","components/Items/UpdateItem/index.js","components/Items/Item/index.js","components/Items/index.js","functions/sortColor.js","components/Archive/ArchiveWeek/index.js","components/Archive/index.js","components/Information/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","src","turtledot","className","alt","Nav","to","activeClassName","size","validateItem","item","text","length","number","type","cutNumber","toString","slice","Math","ceil","Cell","props","useState","editing","switchEditing","saveTodo","event","day","target","value","onSaveTodo","data-id","id","data-item","rowIndex","data-day","index","data-week","weekBeginning","onClick","onChangeDay","isThisWeek","today","color","min","max","onChange","onHandleNumber","onBlur","onKeyDown","key","avgTodo","Row","todo","editTodo","currentTotal","tooHigh","tooLow","allDone","cutNum","goalNum","originalDay","row","editRow","handleNumber","newTodo","dataset","useEffect","numberToDo","forEach","push","reduce","a","b","Date","getDay","doNumbers","draggable","archive","data-index","data-dragid","data-dragweek","onRemoveItem","map","i","ArrangeWeek","JSON","parse","localStorage","getItem","week","editWeek","unselected","editUnselected","selected","editSelected","createSelected","createUnselected","newWeek","items","findIndex","uItem","moveItem","splice","addItemToWeek","console","log","undefined","date","setItem","stringify","removeItemFromWeek","window","confirm","filter","needle","changeDay","find","currentTarget","updateArchive","thisWeek","unshift","createWeek","days","ids","colors","Arrange","thisWeekBeginning","getWeekBeginning","nextWeekBeginning","addWeek","newDate","padZero","n","setDate","getDate","getFullYear","getMonth","weekName","UpdateItem","itemToPlay","editItem","handleInput","newItem","name","onCancelUpdate","onUpdateItem","Item","inUse","switchInUse","startEdit","onCancelNewItem","checkInUse","currentlyAdding","data","storedItems","edited","disabled","onDeleteItem","Items","sort","editItems","adding","switchAdding","deleteItem","filtered","uuidv4","newItems","ArchiveWeek","Archive","Information","infoBox","toggleInfoBox","App","basename","process","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a0e92145.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/turtledot.9f70b9aa.svg\";","import React from 'react';\r\nimport turtledot from './turtledot.svg';\r\nimport './header.css';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <img src={turtledot} className='logo' alt='logo' />\r\n        </header>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './nav.css';\r\nimport {Plus, BookOpen} from 'react-feather';\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav>\r\n            <NavLink to='/Items' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <Plus size={16} />\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Items\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Arrange' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <span className='menu-icon-doit'>\r\n                    </span>\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Arrange\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Archive' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <BookOpen size={16} />\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Archive\r\n                </div>\r\n            </NavLink>\r\n            {/*<NavLink to='/Settings' className='menu-item' activeClassName='here'>*/}\r\n            {/*    <div className='menu-icon'>*/}\r\n            {/*        &#8230;*/}\r\n            {/*    </div>*/}\r\n            {/*    <div className='menu-text'>*/}\r\n            {/*        Settings*/}\r\n            {/*    </div>*/}\r\n            {/*</NavLink>*/}\r\n        </nav>\r\n    );\r\n}","export default function validateItem(item) {\r\n    if (item.text.length > 0 && item.text.length < 12 && item.number > 0) {\r\n        if (item.type && item.number < 8) return true;\r\n        if (!item.type && item.number < 100001) return true;\r\n    } else return false;\r\n}\r\n","export default function cutNumber(number) {\r\n    if (number > 99999) {\r\n        return '100k';\r\n    } else if (number > 9999) {\r\n        return number.toString().slice(0,2) + 'k';\r\n    } else if (number > 999) {\r\n        if (number % 1000 === 0) return number.toString().slice(0, 1) + 'k';\r\n        return number.toString().slice(0, 1) + '.' + number.toString().slice(1, 2) + 'k';\r\n    } else if (number % 1 !== 0) {\r\n        return Math.ceil(number);\r\n    } else return number;\r\n}\r\n","import React, {useState} from 'react';\r\nimport cutNumber from '../../functions/cutNumber';\r\nimport '../Row/row.css';\r\n\r\nexport default function Cell(props) {\r\n\r\n    const [editing, switchEditing] = useState(false);\r\n\r\n    function doEdit(event) {\r\n        if (props.day === -1) {\r\n            props.onChangeDay(event);\r\n        } else {\r\n            switchEditing(true);\r\n        }\r\n    }\r\n\r\n    function checkKey(event) {\r\n        if (event.key === 'Enter') saveTodo(event);\r\n    }\r\n\r\n    function saveTodo(event) {\r\n        if (validateTodo(event.target.value)) {\r\n            props.onSaveTodo(event);\r\n            switchEditing(false);\r\n        }\r\n    }\r\n\r\n    function validateTodo(day) {\r\n        return (day > -2 && day < 100001) || day === '';\r\n    }\r\n\r\n    return (\r\n        <td\r\n            data-id={props.id}\r\n            data-item={props.rowIndex}\r\n            data-day={props.index}\r\n            data-week={props.weekBeginning}\r\n            onClick={props.type ? props.onChangeDay : props.isThisWeek ? doEdit : props.onChangeDay}\r\n            className={'main-cell week-spots' + (props.isThisWeek && props.today === props.index ? props.color : '') + (editing ? ' editing' : '')}>\r\n            {editing ?\r\n                <input\r\n                    type='number'\r\n                    min='-1'\r\n                    max='100000'\r\n                    data-id={props.id}\r\n                    data-item={props.rowIndex}\r\n                    data-day={props.index}\r\n                    data-week={props.weekBeginning}\r\n                    value={props.day > -1 ? props.day : ''}\r\n                    className={'type-cell' + (props.day === 0 ? ' grey' : '')}\r\n                    onChange={props.onHandleNumber}\r\n                    onBlur={saveTodo}\r\n                    onKeyDown={checkKey}\r\n                />\r\n                :\r\n                <div\r\n                    className={props.type ?\r\n                        ('spot' + (props.day === 1 ? ' closed' : props.day === 0 ? ' open' : ''))\r\n                        :\r\n                        ('type-cell' + (props.day === 0 ? ' grey' : ''))}>\r\n                    {!props.type && props.day > 0 ? props.day : !props.type && props.day > -1 ? cutNumber(props.avgTodo) : ''}\r\n                </div>\r\n            }\r\n        </td>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Cell from '../Cell';\r\nimport cutNumber from '../../functions/cutNumber';\r\nimport './row.css';\r\n\r\nexport default function Row(props) {\r\n\r\n    const [todo, editTodo] = useState([...props.todo]);\r\n    const [row, editRow] = useState({\r\n        currentTotal: 0,\r\n        avgTodo: 0,\r\n        tooHigh: false,\r\n        tooLow: false,\r\n        allDone: false,\r\n        cutNum: 0,\r\n        goalNum: 0,\r\n        originalDay: 0,\r\n        today: 0\r\n    });\r\n\r\n    useEffect(() => editTodo([...props.todo]), [props]);\r\n    useEffect(() => doNumbers(), [props]);\r\n\r\n    function doNumbers() {\r\n        let numberToDo = [];\r\n        props.todo.forEach(day => day > -1 ? numberToDo.push(+day) : null);\r\n        const currentTotal = numberToDo.reduce((a, b) => a + b, 0);\r\n        const allDone = currentTotal >= +props.number;\r\n        const avgTodo = (+props.number - currentTotal) / numberToDo.length;\r\n        const tooHigh = numberToDo.length > +props.number;\r\n        const tooLow = numberToDo.length < +props.number;\r\n        const cutNum = cutNumber(+props.number);\r\n        const goalNum = cutNumber(+props.number - currentTotal);\r\n        const originalDay = new Date().getDay();\r\n        const today = originalDay === 0 ? 6 : originalDay - 1;\r\n        editRow({\r\n            currentTotal: currentTotal,\r\n            avgTodo: avgTodo,\r\n            tooHigh: tooHigh,\r\n            tooLow: tooLow,\r\n            allDone: allDone,\r\n            cutNum: cutNum,\r\n            goalNum: goalNum,\r\n            originalDay: originalDay,\r\n            today: today\r\n        });\r\n    }\r\n\r\n    function handleNumber(event) {\r\n        let newTodo = [...todo];\r\n        newTodo[event.target.dataset.day] = event.target.value;\r\n        editTodo([...newTodo]);\r\n    }\r\n\r\n    return (\r\n        <tr\r\n            draggable={!props.archive}\r\n            id={props.id + props.weekBeginning}\r\n            data-index={props.index}\r\n            data-dragid={props.id}\r\n            data-dragweek={props.weekBeginning}\r\n            className={row.allDone ? 'allDone' : props.color}\r\n            // onDragStart={props.onDragStart}\r\n            // onDragOver={props.onDragOver}\r\n            // onDragLeave={props.onDragLeave}\r\n            // onDrop={props.onDrop}\r\n        >\r\n            <td\r\n                id={props.id}\r\n                className='week-item left-column'>\r\n                {!props.archive &&\r\n                    <button\r\n                        value={props.id}\r\n                        onClick={props.onRemoveItem}\r\n                        className='week-item-delete'>\r\n                        &mdash;\r\n                    </button>\r\n                }\r\n                {props.text}\r\n            </td>\r\n            <td className={'main-cell week-item-number'\r\n                + (props.type && (row.tooHigh ? ' week-number-arrow-down' : row.tooLow ? ' week-number-arrow-up' : ''))}>\r\n                {cutNumber(row.allDone ? row.currentTotal : row.goalNum > -1 ? row.goalNum : props.number)}\r\n            </td>\r\n            {todo.map((day, i) =>\r\n                <Cell\r\n                    key={props.number + props.id + i}\r\n                    id={props.id}\r\n                    day={day}\r\n                    index={i}\r\n                    rowIndex={props.index}\r\n                    today={row.today}\r\n                    avgTodo={row.avgTodo > 0 ? row.avgTodo : null}\r\n                    type={props.type}\r\n                    color={props.color}\r\n                    weekBeginning={props.weekBeginning}\r\n                    isThisWeek={props.isThisWeek}\r\n                    onHandleNumber={handleNumber}\r\n                    onSaveTodo={props.onSaveTodo}\r\n                    onChangeDay={props.onChangeDay}\r\n                />\r\n            )}\r\n        </tr>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Row from '../../Row';\r\nimport '../arrange.css';\r\n\r\nlet touchData = {};\r\n\r\nexport default function ArrangeWeek(props) {\r\n\r\n    const [week, editWeek] = useState(JSON.parse(localStorage.getItem(props.weekBeginning)));\r\n    const [unselected, editUnselected] = useState(JSON.parse(localStorage.getItem('items')));\r\n    const [selected, editSelected] = useState([]);\r\n\r\n    useEffect(() => createWeek(), [week]);\r\n\r\n    async function createWeek() {\r\n        let createSelected = [];\r\n        let createUnselected = JSON.parse(localStorage.getItem('items'));\r\n        let newWeek = await JSON.parse(localStorage.getItem(props.weekBeginning));\r\n        if (newWeek) {\r\n            newWeek.items.forEach(item => {\r\n                let index = createUnselected.findIndex(uItem => uItem.id === item[0]);\r\n                if (index > -1) {\r\n                    let moveItem = createUnselected.splice(index, 1);\r\n                    moveItem[0].todo = item[1];\r\n                    createSelected.push(moveItem[0]);\r\n                }\r\n            });\r\n        }\r\n        editUnselected([...createUnselected]);\r\n        editSelected([...createSelected]);\r\n    }\r\n\r\n    function addItemToWeek(event) {\r\n        let newWeek = {...week};\r\n        console.log(newWeek)\r\n        if (newWeek.items === undefined) newWeek = {date: props.weekBeginning, items: []};\r\n        console.log(newWeek)\r\n        newWeek.items.push([event.target.value, [-1, -1, -1, -1, -1, -1, -1]]);\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function addAllItemsToWeek() {\r\n        let ids = [];\r\n        let newWeek = {...week};\r\n        unselected.forEach(item => ids.push(item.id));\r\n        if (newWeek.items === undefined) newWeek = {date: props.weekBeginning, items: []};\r\n        ids.forEach(id => newWeek.items.push([id, [-1, -1, -1, -1, -1, -1, -1]]));\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function removeItemFromWeek(event) {\r\n        if (window.confirm('Really remove this item from schedule?')) {\r\n            let newWeek = {...week};\r\n            newWeek.items = newWeek.items.filter(needle => needle[0] !== event.target.value);\r\n            localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n            editWeek({...newWeek});\r\n        }\r\n    }\r\n\r\n    // function copyAllFromThisWeek () {\r\n    //     if (localStorage.getItem(props.thisWeekBeginning)) {\r\n    //         let newWeek = {...week};\r\n    //         let thisWeek = JSON.parse(localStorage.getItem(props.thisWeekBeginning));\r\n    //         if (!newWeek) newWeek = {date: props.weekBeginning, items: []};\r\n    //         newWeek.items = [...thisWeek.items];\r\n    //         localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n    //         editWeek({...newWeek});\r\n    //     }\r\n    // }\r\n\r\n    function changeDay(event) {\r\n        let newWeek = {...week};\r\n        let item = newWeek.items.find(item => item[0] === event.currentTarget.dataset.id);\r\n        let day = event.currentTarget.dataset.day;\r\n        if (props.isThisWeek) {\r\n            item[1][day] = (item[1][day] === (-1) ? 0 : item[1][day] === 0 ? 1 : (-1));\r\n        } else {\r\n            item[1][day] = (item[1][day] > (-1) ? (-1) : 0);\r\n        }\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n        if (props.isThisWeek) updateArchive();\r\n    }\r\n\r\n    function saveTodo(event) {\r\n        let newWeek = {...week};\r\n        let item = newWeek.items.find(item => item[0] === event.currentTarget.dataset.id);\r\n        let day = event.currentTarget.dataset.day;\r\n        item[1][day] = event.target.value === '' ? -1 : +event.target.value;\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n        if (props.isThisWeek) updateArchive();\r\n    }\r\n\r\n    function updateArchive() {\r\n        let archive = JSON.parse(localStorage.getItem('archive'));\r\n        let thisWeek = {\r\n            date: props.weekBeginning,\r\n            items: [...selected]\r\n        };\r\n        if (archive) {\r\n            let index = archive.findIndex(week => week.date === thisWeek.date);\r\n            if (index !== -1) {\r\n                archive[index] = thisWeek;\r\n            } else {\r\n                archive.unshift(thisWeek);\r\n            }\r\n        } else {\r\n            archive = [];\r\n            archive.unshift(thisWeek);\r\n        }\r\n        localStorage.setItem('archive', JSON.stringify(archive));\r\n    }\r\n\r\n    return (\r\n        <div className='week'>\r\n            <section>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td className='week-date left-column'>\r\n                            {props.weekBeginning}\r\n                        </td>\r\n                        <td className='week-date'>\r\n                        </td>\r\n                        {props.days.map((day, i) =>\r\n                            <td\r\n                                key={day + i + props.weekBeginning}\r\n                                className='day'>\r\n                                {day}\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody data-dragweek={props.weekBeginning}>\r\n                    {selected.map((item, i) =>\r\n                        <Row\r\n                            key={item.id + props.weekBeginning}\r\n                            id={item.id}\r\n                            index={i}\r\n                            text={item.text}\r\n                            type={item.type}\r\n                            number={item.number}\r\n                            color={item.color}\r\n                            todo={item.todo}\r\n                            isThisWeek={props.isThisWeek}\r\n                            weekBeginning={props.weekBeginning}\r\n                            onRemoveItem={removeItemFromWeek}\r\n                            onChangeDay={changeDay}\r\n                            onSaveTodo={saveTodo}\r\n                            // onDragStart={onDragStart}\r\n                            // onDragOver={onDragOver}\r\n                            // onDragLeave={onDragLeave}\r\n                            // onDrop={onDrop}\r\n                        />\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n            {unselected.length > 0 &&\r\n            <div className='edit-box'>\r\n                {/*{selected.length < 1 && props.weekName === 'Next Week' &&*/}\r\n                {/*    <button*/}\r\n                {/*        className='addAllItems copy'*/}\r\n                {/*        onClick={copyAllFromThisWeek}*/}\r\n                {/*    >*/}\r\n                {/*        copy schedule from this week*/}\r\n                {/*    </button>*/}\r\n                {/*}*/}\r\n                <button\r\n                    className='addAllItems'\r\n                    onClick={addAllItemsToWeek}\r\n                >\r\n                    add all items\r\n                </button>\r\n                <div className='items-list'>\r\n                    {unselected.map(item =>\r\n                        <button\r\n                            key={item.id + props.weekBeginning + 'u'}\r\n                            value={item.id}\r\n                            data-week={props.weekBeginning}\r\n                            className={'items-list-item ' + item.color}\r\n                            onClick={addItemToWeek}\r\n                        >\r\n                            {item.text}\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","export const colors = ['color0', 'color1', 'color2', 'color3', 'color4', 'color5', 'color6', 'color7', 'color8', 'color9'];\r\n\r\nexport const days = ['M','T','W','T','F','S','S'];\r\n","import React from 'react';\r\nimport ArrangeWeek from './ArrangeWeek';\r\nimport {days} from '../../static/colors';\r\nimport './arrange.css';\r\n\r\nexport default function Arrange() {\r\n\r\n    const thisWeekBeginning = getWeekBeginning();\r\n    const nextWeekBeginning = getWeekBeginning(7);\r\n\r\n    function getWeekBeginning(addWeek = 0) {\r\n        let newDate = new Date(),\r\n            day = newDate.getDay();\r\n        function padZero(n){ return n < 10 ? '0' + n : n}\r\n        if (day > 1) {\r\n            newDate.setDate(newDate.getDate() - day + 1 + addWeek);\r\n        } else if (day === 0) {\r\n            newDate.setDate(newDate.getDate() - 6 + addWeek);\r\n        } else {\r\n            newDate.setDate(newDate.getDate() + addWeek);\r\n        }\r\n        return newDate.getFullYear() + '/' + padZero(newDate.getMonth() + 1) + '/' + padZero(newDate.getDate());\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <h1>\r\n                This Week\r\n            </h1>\r\n            <ArrangeWeek\r\n                key={'thisWeek'}\r\n                weekName={'This Week'}\r\n                days={days}\r\n                weekBeginning={thisWeekBeginning}\r\n                isThisWeek={true}\r\n            />\r\n            <h2>\r\n                Next Week\r\n            </h2>\r\n            <ArrangeWeek\r\n                key={'nextWeek'}\r\n                weekName={'Next Week'}\r\n                days={days}\r\n                weekBeginning={nextWeekBeginning}\r\n                thisWeekBeginning={thisWeekBeginning}\r\n            />\r\n        </main>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport validateItem from '../../../functions/validateItem';\r\nimport '../../Arrange/';\r\nimport {X, Check} from 'react-feather';\r\n\r\nexport default function UpdateItem(props) {\r\n\r\n    const itemToPlay = props.item ? {...props.item} :\r\n        {\r\n            id: '',\r\n            text: '',\r\n            type: true,\r\n            number: 1,\r\n            color: 'color0'\r\n        };\r\n\r\n    const [item, editItem] = useState(itemToPlay);\r\n\r\n    function handleInput (event) {\r\n        let newItem = {...item};\r\n        newItem[event.target.name] = event.target.value;\r\n        editItem({...newItem});\r\n    }\r\n\r\n    function switchType() {\r\n        let newItem = {...item};\r\n        newItem.type = !newItem.type;\r\n        editItem({...newItem});\r\n    }\r\n\r\n    function updateItem() {\r\n        if (validateItem(item)) {\r\n            props.onUpdateItem({...item});\r\n            editItem({\r\n                id: '',\r\n                text: '',\r\n                type: true,\r\n                number: 1,\r\n                color: 'color0'\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className='item'>\r\n                <input\r\n                    type='text'\r\n                    name='text'\r\n                    value={item.text}\r\n                    onChange={handleInput}\r\n                    className='text'\r\n                />\r\n                <button\r\n                    name='type'\r\n                    value={item.type}\r\n                    onClick={switchType}\r\n                    className='type'>\r\n                    {item.type ?\r\n                        <div className='day spot open'>\r\n                        </div>\r\n                        :\r\n                        '#'\r\n                    }\r\n                </button>\r\n                <input\r\n                    type='number'\r\n                    name='number'\r\n                    min='1'\r\n                    max='99999'\r\n                    value={item.number}\r\n                    onChange={handleInput}\r\n                    className='number'\r\n                />\r\n                <button\r\n                    className={'color ' + item.color}>\r\n                </button>\r\n                <button\r\n                    onClick={props.onCancelUpdate}\r\n                    className='plus-sign'>\r\n                    <X size={16} />\r\n                </button>\r\n            </div>\r\n            <div className='edit-box'>\r\n                <div className='palette'>\r\n                    {props.colors.map(color =>\r\n                        <button\r\n                            key={color}\r\n                            name='color'\r\n                            value={color}\r\n                            onClick={handleInput}\r\n                            className={'palette-square ' + color}>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <div className='edit-box-buttons'>\r\n                    <button\r\n                        onClick={updateItem}\r\n                        className='edit-complete'>\r\n                        <Check size={16} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport UpdateItem from '../UpdateItem';\r\nimport cutNumber from '../../../functions/cutNumber';\r\nimport validateItem from '../../../functions/validateItem';\r\nimport {X, Hash} from 'react-feather';\r\n\r\nexport default function Item(props) {\r\n\r\n    const [item, editItem] = useState(props.item);\r\n    const [editing, switchEditing] = useState(false);\r\n    const [inUse, switchInUse] = useState(false);\r\n\r\n    useEffect(() => {\r\n        checkInUse();\r\n    });\r\n\r\n    function startEdit() {\r\n        switchEditing(true);\r\n        props.onCancelNewItem();\r\n    }\r\n\r\n    function updateItem(data) {\r\n        if (validateItem(data)) {\r\n            let storedItems = JSON.parse(localStorage.getItem('items'));\r\n            let edited = storedItems.findIndex(item => item.id === data.id);\r\n            storedItems[edited] = data;\r\n            localStorage.setItem('items', JSON.stringify(storedItems));\r\n            editItem({...data});\r\n            switchEditing(false);\r\n        }\r\n    }\r\n\r\n    function checkInUse() {\r\n        if (localStorage.getItem('weeks')) {\r\n            const weeks = JSON.parse(localStorage.getItem('weeks'));\r\n            weeks.forEach(week => {\r\n                if (week.items.find((item) => item[0] === props.item.id)) switchInUse(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editing && !props.currentlyAdding ?\r\n                <UpdateItem\r\n                    item={item}\r\n                    colors={props.colors}\r\n                    onUpdateItem={updateItem}\r\n                    onCancelUpdate={() => switchEditing(false)}\r\n                />\r\n                :\r\n                <div className='item'>\r\n                    <div\r\n                        onClick={startEdit}\r\n                        className='text'>\r\n                        {item.text}\r\n                    </div>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className='type'>\r\n                        {item.type ?\r\n                            <div className='day spot open'>\r\n                            </div>\r\n                            :\r\n                            <Hash size={14} />\r\n                        }\r\n                    </button>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className='number'>\r\n                        {cutNumber(item.number)}\r\n                    </button>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className={'color ' + item.color}>\r\n                    </button>\r\n                    <button\r\n                        value={item.id}\r\n                        disabled={inUse}\r\n                        onClick={props.onDeleteItem}\r\n                        className='plus-sign'>\r\n                        <X size={16} />\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Item from './Item';\r\nimport UpdateItem from './UpdateItem';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport sortColor from '../../functions/sortColor';\r\nimport {colors} from '../../static/colors';\r\nimport './items.css';\r\nimport {Plus} from 'react-feather';\r\n\r\nexport default function Items() {\r\n\r\n    const [items, editItems] = useState(getItems());\r\n    const [adding, switchAdding] = useState(false);\r\n\r\n    function getItems() {\r\n        if (localStorage.getItem('items')) {\r\n            return sortColor(JSON.parse(localStorage.getItem('items')));\r\n        } else return [];\r\n    }\r\n\r\n    function addItem(data) {\r\n        let item = {\r\n            id: uuidv4(),\r\n            text: data.text,\r\n            type: data.type,\r\n            number: data.number,\r\n            color: data.color\r\n        };\r\n        let newItems = [...items];\r\n        newItems.push(item);\r\n        localStorage.setItem('items', JSON.stringify(newItems));\r\n        editItems([...newItems]);\r\n    }\r\n\r\n    function deleteItem(event) {\r\n        if (window.confirm('Really delete?')) {\r\n            let newItems = [...items];\r\n            let filtered = newItems.filter(item => item.id !== event.target.value);\r\n            localStorage.setItem('items', JSON.stringify(filtered));\r\n            editItems([...filtered]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main id='items'>\r\n            <h1>\r\n                Items\r\n            </h1>\r\n            {items.map(item =>\r\n                <Item\r\n                    key={item.id}\r\n                    item={item}\r\n                    colors={colors}\r\n                    currentlyAdding={adding}\r\n                    onDeleteItem={deleteItem}\r\n                    onCancelNewItem={() => switchAdding(false)}\r\n                />\r\n            )}\r\n            {adding ?\r\n                <UpdateItem\r\n                    colors={colors}\r\n                    onUpdateItem={addItem}\r\n                    onCancelUpdate={() => switchAdding(false)}\r\n                />\r\n                :\r\n                <button\r\n                    onClick={() => switchAdding(true)}\r\n                    className='plus-sign add'>\r\n                    <Plus size={18} />\r\n                </button>\r\n            }\r\n        </main>\r\n    );\r\n}\r\n","export default function sortColor(array) {\r\n    return array.sort((a, b) => (a.color > b.color) ? 1 : -1);\r\n}\r\n","import React from 'react';\r\nimport Row from '../../Row';\r\nimport '../../Arrange/arrange.css';\r\n\r\nexport default function ArchiveWeek(props) {\r\n    return (\r\n        <div className='week'>\r\n            <section>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td className='week-date left-column'>\r\n                            {props.week.date}\r\n                        </td>\r\n                        <td className='week-date'>\r\n                        </td>\r\n                        {props.days.map((day, i) =>\r\n                            <td\r\n                                key={day + i + props.week.date}\r\n                                className='day'>\r\n                                {day}\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.week.items.map((item, i) =>\r\n                            <Row\r\n                                key={item.id + props.week.date}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                weekBeginning={props.week.date}\r\n                                archive={true}\r\n                                onChangeDay={null}\r\n                                onRemoveItem={null}\r\n                            />\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ArchiveWeek from './ArchiveWeek';\r\nimport {days} from '../../static/colors';\r\nimport '../../components/Arrange/arrange.css';\r\n\r\nexport default function Archive(props) {\r\n\r\n    const archive = getArchive();\r\n\r\n    function getArchive() {\r\n        if (localStorage.getItem('archive')) {\r\n            return JSON.parse(localStorage.getItem('archive'));\r\n        } else return [];\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <h1>\r\n                Archive\r\n            </h1>\r\n            {archive.map((week, i) =>\r\n                <ArchiveWeek\r\n                    key={'archiveWeek' + i}\r\n                    week={week}\r\n                    days={days}\r\n                />\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport './information.css';\r\nimport {Info, Plus, Check, X} from 'react-feather';\r\n\r\nexport default function Information() {\r\n\r\n    const [infoBox, toggleInfoBox] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Info size={16} className='info' onClick={() => toggleInfoBox(!infoBox)} />\r\n            {infoBox &&\r\n                <div className='info-box'>\r\n                    <h2>ITEMS</h2>\r\n                    <ul>\r\n                        <li>touch the <Plus size={16} /> to add an item</li>\r\n                        <li>enter the item's name</li>\r\n                        <li>choose between dot (one per day) or number (up to 100,000 per week)</li>\r\n                        <li>enter a weekly goal number for the item (max. 7 for dots; max. 100,000 for numbers)</li>\r\n                        <li>choose a colour for the item (similar items can be visually grouped)</li>\r\n                        <li>touch <Check size={16} /> to save, or <X size={16} /> to cancel</li>\r\n                        <li>touch an item to edit it</li>\r\n                    </ul>\r\n                    <h2>ARRANGE</h2>\r\n                    <ul>\r\n                        <li>items are listed for this week &amp; next week</li>\r\n                        <li>touch an item to add it to the week</li>\r\n                        <li>for dot items</li>\r\n                        <li className='indent'>touch once on a given day to set it as <i>todo</i> for that day</li>\r\n                        <li className='indent'>touch again to set it as <i>done</i> for that day</li>\r\n                        <li>for number items</li>\r\n                        <li className='indent'>when you've completed a number (e.g. 5,000 steps), touch the relevant square twice to enter it</li>\r\n                        <li className='indent'>the number to the left of Monday tells you how many left to do that week</li>\r\n                        <li>when you've hit the weekly target for an item, the row will turn black\r\n                        </li>\r\n                    </ul>\r\n                    <h2>ARCHIVE</h2>\r\n                    <ul>\r\n                        <li>lists previous weeks</li>\r\n                        <li>not editable</li>\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Redirect, BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Nav from './components/Nav';\r\nimport Items from './components/Items';\r\nimport Arrange from './components/Arrange';\r\nimport Archive from './components/Archive';\r\nimport Information from './components/Information';\r\nimport './app.css';\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Header />\r\n            <Information />\r\n            <div className='bgPanel'>\r\n            </div>\r\n            <Switch>\r\n                <Route path='/Items'>\r\n                    <Items />\r\n                </Route>\r\n                <Route path='/Arrange'>\r\n                    <Arrange />\r\n                </Route>\r\n                <Route path='/Archive'>\r\n                    <Archive />\r\n                </Route>\r\n                <Route path='/'>\r\n                    <Redirect to='/Arrange' />\r\n                </Route>\r\n            </Switch>\r\n            <Nav />\r\n        </Router>\r\n    );\r\n}\r\n","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA.'\r\n                            );\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}