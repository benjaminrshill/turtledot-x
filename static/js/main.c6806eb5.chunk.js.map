{"version":3,"sources":["components/Modal/index.js","components/Header/turtledot.svg","components/Header/index.js","components/Nav/index.js","functions/validateItem.js","functions/cutNumber.js","components/Arrange/ArrangeWeek/Row/Cell/NumberModal/index.js","components/Arrange/ArrangeWeek/Row/Cell/index.js","components/Arrange/ArrangeWeek/Row/index.js","components/Arrange/ArrangeWeek/AddItems/index.js","components/Arrange/ArrangeWeek/ActionsPanel/index.js","components/Arrange/ArrangeWeek/NotesModal/index.js","functions/getStoredItems.js","functions/sortColor.js","functions/getStoredWeek.js","static/colorsDays.js","components/Arrange/ArrangeWeek/index.js","components/Arrange/index.js","components/Items/UpdateItem/index.js","components/Items/Item/index.js","components/Items/index.js","components/Archive/ArchiveWeek/index.js","components/Archive/index.js","components/Information/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Modal","props","useState","show","switchShow","useEffect","setTimeout","className","name","onClick","onToggleModal","tabIndex","onKeyDown","event","key","target","nodeName","preventDefault","modal","Header","src","turtledot","alt","Nav","to","activeClassName","size","validateItem","item","text","length","number","type","cutNumber","toString","slice","Math","ceil","NumberModal","day","currentValue","editCurrentValue","avgTodo","inputNumber","editInputNumber","validateTodo","onUpdateTodo","doEstimate","doChange","dayOfWeek","id","weekBeginning","min","max","value","onFocus","onChange","checkEnter","touchMax","pos","neg","touch","initial","X","Y","move","final","Cell","editingNumber","switchEditingNumber","updateTodo","onSaveTodo","index","checkVerticalLimit","data-id","data-item","rowIndex","data-day","isThisWeek","today","color","onChangeDay","classList","contains","onTouchStart","e","touches","clientX","clientY","onTouchMove","onTouchEnd","t","v","Row","todo","editTodo","currentTotal","tooHigh","tooLow","allDone","cutNum","goalNum","originalDay","row","editRow","numberDoneAndToDo","numberToDo","forEach","push","reduce","a","b","doNumbers","draggable","archive","shifting","data-index","data-dragid","data-dragweek","deleting","onRemoveItem","data-direction","onMoveItem","map","i","days","AddItems","addOne","onAddItemToWeek","onAddAllItemsToWeek","unselected","data-week","ActionsPanel","onSwitchDeleting","htmlFor","onSwitchShifting","NotesModal","note","editNote","isCurrent","checkCurrent","thisDay","maxLength","onInput","onSaveNote","getStoredItems","localStorage","getItem","JSON","parse","sort","getStoredWeek","week","colorsDays","ArrangeWeek","editWeek","editUnselected","selected","editSelected","switchDeleting","switchShifting","addingItems","switchAddingItems","editingNotes","switchEditingNotes","createSelected","createUnselected","newWeek","items","findIndex","uItem","moveItem","splice","createWeek","notes","nw","saveItem","setItem","stringify","removeItemFromWeek","filter","needle","moveItemInWeek","newIndex","currentTarget","dataset","direction","changeDay","updateArchive","saveTodo","saveNote","console","log","thisWeek","date","unshift","weekName","substring","ids","undefined","Arrange","Date","dateToday","updateDateToday","getWeekBeginning","thisWeekBeginning","updateThisWeekBeginning","nextWeekBeginning","updateNextWeekBeginning","getDay","ogDayToday","updateOgDayToday","dayToday","updateDayToday","addWeek","newDate","padZero","n","setDate","getDate","getFullYear","getMonth","setInterval","window","location","reload","UpdateItem","itemToPlay","editItem","checkKey","updateItem","handleInput","newItem","onUpdateItem","onCancelUpdate","colors","Item","editing","switchEditing","inUse","switchInUse","startEdit","onCancelNewItem","find","checkInUse","currentlyAdding","data","storedItems","edited","disabled","onDeleteItem","Items","editItems","adding","switchAdding","deleteItem","confirm","filtered","uuidv4","newItems","ArchiveWeek","Archive","Information","App","infoBox","toggleInfoBox","basename","process","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c6806eb5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function Modal(props) {\r\n\r\n\tconst [show, switchShow] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => switchShow(true), 10);\r\n\t}, []);\r\n\r\n\tfunction checkBackspace(event) {\r\n\t\tif ((event.key === 'Backspace' && (event.target.nodeName !== 'INPUT' && event.target.nodeName !== 'TEXTAREA')) || event.key === 'Escape') {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tprops.onToggleModal(false);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tclassName={props.name + '-modal-bg modal-bg' + (show ? ' show' : '')}\r\n\t\t\t\tonClick={() => props.onToggleModal(false)}\r\n\t\t\t>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName={props.name + '-modal modal' + (show ? ' show' : '')}\r\n\t\t\t\ttabIndex='0'\r\n\t\t\t\tonKeyDown={checkBackspace}\r\n\t\t\t>\r\n\t\t\t\t{props.modal}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/turtledot.9f70b9aa.svg\";","import React from 'react';\r\nimport turtledot from './turtledot.svg';\r\nimport './header.css';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <img src={turtledot} className='logo' alt='logo' />\r\n        </header>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Plus, BookOpen} from 'react-feather';\r\nimport './nav.css';\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav>\r\n            <NavLink to='/Items' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <Plus size={16} />\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Items\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Arrange' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <span className='menu-icon-doit'>\r\n                    </span>\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Arrange\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Archive' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <BookOpen size={16} />\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Archive\r\n                </div>\r\n            </NavLink>\r\n        </nav>\r\n    );\r\n}","export default function validateItem(item) {\r\n    if (item.text.length > 0 && item.text.length < 12 && item.number > 0) {\r\n        if (item.type && item.number < 8) return true;\r\n        if (!item.type && item.number < 100001) return true;\r\n    } else return false;\r\n}\r\n","export default function cutNumber(number) {\r\n    if (number > 99999) {\r\n        return '100k';\r\n    } else if (number > 9999) {\r\n        return number.toString().slice(0,2) + 'k';\r\n    } else if (number > 999) {\r\n        if (number % 1000 === 0) return number.toString().slice(0, 1) + 'k';\r\n        return number.toString().slice(0, 1) + '.' + number.toString().slice(1, 2) + 'k';\r\n    } else if (number % 1 !== 0) {\r\n        return Math.ceil(number);\r\n    } else return number;\r\n}\r\n","import React, {useState} from 'react';\r\nimport cutNumber from '../../../../../../functions/cutNumber';\r\nimport {Check} from 'react-feather';\r\nimport './numberModal.css';\r\n\r\nexport default function NumberModal(props) {\r\n\r\n    const [currentValue, editCurrentValue] = useState(props.day);\r\n    const [inputNumber, editInputNumber] = useState(props.day > 0 ? props.day : cutNumber(props.avgTodo));\r\n\r\n    function validateTodo() {\r\n        if (currentValue > -2 && currentValue < 100001) {\r\n            props.onUpdateTodo(currentValue);\r\n        }\r\n        props.onToggleModal(false);\r\n    }\r\n\r\n    function checkEnter(event) {\r\n        if (event.key === 'Enter') validateTodo();\r\n    }\r\n\r\n    function doEstimate() {\r\n        if (inputNumber > 0) {\r\n            editCurrentValue(inputNumber);\r\n        } else if (props.avgTodo > 0) {\r\n            doChange(cutNumber(props.avgTodo));\r\n        } else {\r\n            doChange(1);\r\n        }\r\n    }\r\n\r\n    function doChange(number) {\r\n        editInputNumber(number);\r\n        editCurrentValue(number);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='header'>\r\n                <h2>\r\n                    {props.dayOfWeek}:\r\n                </h2>\r\n                <h3>\r\n                    {props.text}\r\n                </h3>\r\n            </div>\r\n            <div className='options'>\r\n                <div\r\n                    className={currentValue === -1 ? 'selected' : ''}\r\n                    onClick={() => editCurrentValue(-1)}\r\n                >\r\n                    not today\r\n                </div>\r\n                <div\r\n                    className={currentValue === 0 ? 'selected' : ''}\r\n                    onClick={() => editCurrentValue(0)}\r\n                >\r\n                    schedule for today\r\n                </div>\r\n                <div\r\n                    className={currentValue > 0 ? 'selected' : ''}\r\n                    onClick={doEstimate}\r\n                >\r\n                    number done today\r\n                    <input\r\n                        id={props.dayOfWeek + props.weekBeginning + props.id + 'inputNumber'}\r\n                        type='number'\r\n                        min='-1'\r\n                        max='100000'\r\n                        value={inputNumber}\r\n                        onFocus={doEstimate}\r\n                        onChange={event => doChange(+event.target.value)}\r\n                        onKeyDown={event => checkEnter(event)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='actions-panel'>\r\n                <button\r\n                    onClick={validateTodo}\r\n                    className='save'\r\n                >\r\n                    <Check size={16} />\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport Modal from '../../../../Modal';\r\nimport NumberModal from './NumberModal';\r\nimport cutNumber from '../../../../../functions/cutNumber';\r\nimport './cell.css';\r\nimport '../../../../Modal/modal.css';\r\n\r\nconst touchMax = {\r\n    max: {\r\n        pos: 12, neg: -12\r\n    },\r\n    limit: {\r\n        pos: 10, neg: -10\r\n    }\r\n}\r\n\r\nconst touch = {\r\n    initial: {\r\n        X: 0, Y: 0\r\n    },\r\n    move: {\r\n        X: 0, Y: 0\r\n    },\r\n    final: {\r\n        X: 0, Y: 0\r\n    }\r\n}\r\n\r\nexport default function Cell(props) {\r\n\r\n    const [editingNumber, switchEditingNumber] = useState(false);\r\n    const avgTodo = props.avgTodo > 0 ? cutNumber(props.avgTodo) : '';\r\n\r\n    function openModal(event) {\r\n        if (event.target.classList.contains('main-cell') || event.target.classList.contains('type-cell')) switchEditingNumber(true);\r\n    }\r\n\r\n    function updateTodo(value) {\r\n        props.onSaveTodo(props.id, props.index, value);\r\n    }\r\n\r\n    function startTouch(e) {\r\n        touch.initial.X = e.touches[0].clientX;\r\n        touch.initial.Y = e.touches[0].clientY;\r\n    }\r\n\r\n    function moveTouch(e) {\r\n        if (touch.initial.X === 0 && touch.initial.Y === 0) return;\r\n        touch.move.X = e.touches[0].clientX;\r\n        touch.final.X = touch.initial.X - touch.move.X;\r\n        touch.move.Y = e.touches[0].clientY;\r\n        touch.final.Y = touch.initial.Y - touch.move.Y;\r\n    }\r\n\r\n    function endTouch() {\r\n        if (touch.final.X > touchMax.max.pos && checkVerticalLimit()) {\r\n            updateTodo(-1);\r\n        } else if (touch.final.X < touchMax.max.neg && checkVerticalLimit()) {\r\n            updateTodo(1);\r\n        }\r\n        for (const t in touch) {\r\n            for (let v in touch[t]) {\r\n                touch[t][v] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkVerticalLimit() {\r\n        return touch.final.Y < touchMax.limit.pos && touch.final.Y > touchMax.limit.neg;\r\n    }\r\n\r\n    return (\r\n        <td\r\n            data-id={props.id}\r\n            data-item={props.rowIndex}\r\n            data-day={props.index}\r\n            className={'main-cell week-spots' + (props.isThisWeek && props.today === props.index ? props.color : '')}\r\n            onClick={props.type ? props.onChangeDay : props.isThisWeek ? openModal : props.onChangeDay}\r\n            onTouchStart={props.type && props.isThisWeek ? startTouch : null}\r\n            onTouchMove={props.type && props.isThisWeek ? moveTouch : null}\r\n            onTouchEnd={props.type && props.isThisWeek ? endTouch : null}\r\n        >\r\n            <div\r\n                className={props.type ?\r\n                    ('spot' + (props.day === 1 ? ' closed' : props.day === 0 ? ' open' : ''))\r\n                    :\r\n                    ('type-cell' + (props.day === 0 ? ' grey' : ''))}\r\n            >\r\n                {!props.type && props.day > 0 ? props.day : !props.type && props.day > -1 ? avgTodo : ''}\r\n            </div>\r\n            {editingNumber &&\r\n                <Modal\r\n                    name={'number'}\r\n                    onToggleModal={switchEditingNumber}\r\n                    modal={\r\n                        <NumberModal\r\n                            id={props.id}\r\n                            day={props.day}\r\n                            avgTodo={props.avgTodo}\r\n                            text={props.text}\r\n                            dayOfWeek={props.dayOfWeek}\r\n                            weekBeginning={props.weekBeginning}\r\n                            onUpdateTodo={updateTodo}\r\n                            onToggleModal={switchEditingNumber}\r\n                        />\r\n                    }\r\n                />\r\n            }\r\n        </td>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Cell from './Cell';\r\nimport cutNumber from '../../../../functions/cutNumber';\r\nimport {ArrowUp, ArrowDown} from 'react-feather';\r\nimport './row.css';\r\n\r\nexport default function Row(props) {\r\n\r\n    const [todo, editTodo] = useState([...props.todo]);\r\n    const [row, editRow] = useState({\r\n        currentTotal: 0,\r\n        avgTodo: 0,\r\n        tooHigh: false,\r\n        tooLow: false,\r\n        allDone: false,\r\n        cutNum: 0,\r\n        goalNum: 0,\r\n        originalDay: 0,\r\n        today: 0\r\n    });\r\n\r\n    useEffect(() => editTodo([...props.todo]), [props]);\r\n    useEffect(() => doNumbers(), [props]);\r\n\r\n    function doNumbers() {\r\n        let numberDoneAndToDo = [];\r\n        let numberToDo = [];\r\n        props.todo.forEach(day => {\r\n            if (day > -1) numberDoneAndToDo.push(+day);\r\n            if (day === 0) numberToDo.push(+day);\r\n        });\r\n        const currentTotal = numberDoneAndToDo.reduce((a, b) => a + b, 0);\r\n        const allDone = currentTotal >= +props.number;\r\n        const avgTodo = numberToDo.length > 0 ? (+props.number - currentTotal) / numberToDo.length : 0;\r\n        const tooHigh = numberDoneAndToDo.length > +props.number;\r\n        const tooLow = numberDoneAndToDo.length < +props.number;\r\n        const cutNum = cutNumber(+props.number);\r\n        const goalNum = cutNumber(+props.number - currentTotal);\r\n        editRow({\r\n            currentTotal: currentTotal,\r\n            avgTodo: avgTodo,\r\n            tooHigh: tooHigh,\r\n            tooLow: tooLow,\r\n            allDone: allDone,\r\n            cutNum: cutNum,\r\n            goalNum: goalNum\r\n        });\r\n    }\r\n\r\n    return (\r\n        <tr\r\n            draggable={!props.archive && props.shifting}\r\n            id={props.id + props.weekBeginning}\r\n            data-index={props.index}\r\n            data-dragid={props.id}\r\n            data-dragweek={props.weekBeginning}\r\n            className={row.allDone ? 'all-done' : props.color}\r\n        >\r\n            <td\r\n                id={props.id}\r\n                className={'week-item left-column' + (props.deleting || props.shifting ? ' small' : '')}>\r\n                {!props.archive && props.deleting &&\r\n                    <button\r\n                        value={props.id}\r\n                        onClick={props.onRemoveItem}\r\n                        className='week-item-actions'>\r\n                        &mdash;\r\n                    </button>\r\n                }\r\n                {!props.archive && props.shifting &&\r\n                <div>\r\n                    <button\r\n                        value={props.index}\r\n                        data-direction='up'\r\n                        onClick={props.onMoveItem}\r\n                        className='week-item-actions'>\r\n                        <ArrowUp size={10} />\r\n                    </button>\r\n                    <button\r\n                        value={props.index}\r\n                        data-direction='down'\r\n                        onClick={props.onMoveItem}\r\n                        className='week-item-actions'>\r\n                        <ArrowDown size={10} />\r\n                    </button>\r\n                </div>\r\n                }\r\n                {props.text}\r\n            </td>\r\n            <td className={'main-cell week-item-number'\r\n                + (props.type && (row.tooHigh ? ' week-number-arrow-down' : row.tooLow ? ' week-number-arrow-up' : ''))}>\r\n                {cutNumber(row.allDone ? row.currentTotal : row.goalNum > -1 ? row.goalNum : props.number)}\r\n            </td>\r\n            {todo.map((day, i) =>\r\n                <Cell\r\n                    key={props.number + props.id + i}\r\n                    id={props.id}\r\n                    day={day}\r\n                    index={i}\r\n                    rowIndex={props.index}\r\n                    today={props.today}\r\n                    avgTodo={row.avgTodo}\r\n                    type={props.type}\r\n                    color={props.color}\r\n                    isThisWeek={props.isThisWeek}\r\n                    weekBeginning={props.weekBeginning}\r\n                    dayOfWeek={!props.archive && props.days[i]}\r\n                    text={props.text}\r\n                    onSaveTodo={props.onSaveTodo}\r\n                    onChangeDay={props.onChangeDay}\r\n                />\r\n            )}\r\n        </tr>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './addItems.css';\r\n\r\nexport default function AddItems(props) {\r\n\r\n\tfunction addAll() {\r\n\t\tprops.onAddAllItemsToWeek();\r\n\t\tprops.onToggleModal(false);\r\n\t}\r\n\r\n\tfunction addOne(event) {\r\n\t\tprops.onAddItemToWeek(event);\r\n\t\tprops.onToggleModal(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Add Items</h2>\r\n\r\n\t\t\t<button\r\n\t\t\t\tclassName='add-all-items'\r\n\t\t\t\tonClick={addAll}\r\n\t\t\t>\r\n\t\t\t\tadd all items\r\n\t\t\t</button>\r\n\r\n\t\t\t<div className='items-list'>\r\n\t\t\t\t{props.unselected.map(item =>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tkey={item.id + props.weekBeginning + 'u'}\r\n\t\t\t\t\t\tvalue={item.id}\r\n\t\t\t\t\t\tdata-week={props.weekBeginning}\r\n\t\t\t\t\t\tclassName={'items-list-item ' + item.color}\r\n\t\t\t\t\t\tonClick={addOne}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{item.text}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport {Maximize2, Trash, Trash2, X} from 'react-feather';\r\n\r\nexport default function ActionsPanel(props) {\r\n\r\n    return (\r\n        <div className='actions-panel'>\r\n            <span>\r\n                <input\r\n                    type='checkbox'\r\n                    id={'delete-items' + props.weekBeginning}\r\n                    onChange={() => !props.shifting && props.onSwitchDeleting(!props.deleting)}\r\n                />\r\n                <label htmlFor={'delete-items' + props.weekBeginning}>\r\n                    {props.deleting ?\r\n                        <Trash2 size={16}/>\r\n                        :\r\n                        <Trash size={16}/>\r\n                    }\r\n                </label>\r\n            </span>\r\n            <span>\r\n                <input\r\n                    type='checkbox'\r\n                    id={'shift-items' + props.weekBeginning}\r\n                    onChange={() => !props.deleting && props.onSwitchShifting(!props.shifting)}\r\n                />\r\n                <label htmlFor={'shift-items' + props.weekBeginning}>\r\n                    {props.shifting ?\r\n                        <X size={16}/>\r\n                        :\r\n                        <Maximize2 size={14} className='deg45'/>\r\n                    }\r\n                </label>\r\n            </span>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport {Check} from 'react-feather';\r\nimport './notesModal.css';\r\n\r\nexport default function NotesModal(props) {\r\n\r\n\tconst [note, editNote] = useState(props.note);\r\n\tconst isCurrent = checkCurrent();\r\n\r\n\tfunction checkCurrent() {\r\n\t\tswitch (props.index) {\r\n\t\t\tcase props.today:\r\n\t\t\t\treturn 'today';\r\n\t\t\tcase props.today - 1:\r\n\t\t\t\treturn 'yesterday';\r\n\t\t\tcase props.today + 1:\r\n\t\t\t\treturn 'tomorrow';\r\n\t\t\tdefault:\r\n\t\t\t\treturn props.isThisWeek ? 'this week' : 'next week';\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Notes</h2>\r\n\r\n\t\t\t<div className='day-name'>\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName='this-day'\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.thisDay}\r\n\t\t\t\t</span>\r\n\t\t\t\t{isCurrent &&\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName='is-current'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{isCurrent}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='text'>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tmaxLength='500'\r\n\t\t\t\t\tvalue={note}\r\n\t\t\t\t\tonInput={event => editNote(event.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='actions-panel'>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='save'\r\n\t\t\t\t\tonClick={() => props.onSaveNote(note, props.index)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Check size={16} />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import sortColor from './sortColor';\r\n\r\nexport default function getStoredItems() {\r\n    if (localStorage.getItem('items')) {\r\n        return sortColor(JSON.parse(localStorage.getItem('items')));\r\n    } else return [];\r\n}\r\n","export default function sortColor(array) {\r\n    return array.sort((a, b) => (a.color > b.color) ? 1 : -1);\r\n}\r\n","export default function getStoredWeek(week) {\r\n    if (localStorage.getItem(week)) {\r\n        return JSON.parse(localStorage.getItem(week));\r\n    } else return {};\r\n}\r\n","export const colorsDays = ['color0', 'color1', 'color2', 'color3', 'color4', 'color5', 'color6', 'color7', 'color8', 'color9'];\r\n\r\nexport const days = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];\r\n","import React, {useEffect, useState} from 'react';\r\nimport Row from './Row';\r\nimport AddItems from './AddItems';\r\nimport ActionsPanel from './ActionsPanel';\r\nimport Modal from '../../Modal';\r\nimport NotesModal from './NotesModal';\r\nimport getStoredItems from '../../../functions/getStoredItems';\r\nimport getStoredWeek from '../../../functions/getStoredWeek';\r\nimport {days} from '../../../static/colorsDays';\r\nimport {Edit2, MoreHorizontal} from 'react-feather';\r\nimport '../arrange.css';\r\nimport '../../Modal/modal.css';\r\n\r\nexport default function ArrangeWeek(props) {\r\n\r\n    const [week, editWeek] = useState(getStoredWeek(props.weekBeginning));\r\n    const [unselected, editUnselected] = useState(getStoredItems());\r\n    const [selected, editSelected] = useState([]);\r\n    const [deleting, switchDeleting] = useState(false);\r\n    const [shifting, switchShifting] = useState(false);\r\n    const [addingItems, switchAddingItems] = useState(false);\r\n    const [editingDay, switchEditingDay] = useState(false);\r\n    const [editingNotes, switchEditingNotes] = useState(false);\r\n\r\n    useEffect(() => createWeek(), [week]);\r\n\r\n    async function createWeek() {\r\n        let createSelected = [];\r\n        let createUnselected = getStoredItems();\r\n        let newWeek = await getStoredWeek(props.weekBeginning);\r\n        if (newWeek.items) {\r\n            newWeek.items.forEach(item => {\r\n                let index = createUnselected.findIndex(uItem => uItem.id === item[0]);\r\n                if (index > -1) {\r\n                    let moveItem = createUnselected.splice(index, 1);\r\n                    moveItem[0].todo = item[1];\r\n                    createSelected.push(moveItem[0]);\r\n                }\r\n            });\r\n        }\r\n        editUnselected([...createUnselected]);\r\n        editSelected([...createSelected]);\r\n    }\r\n\r\n    if (!week.notes) {\r\n        let nw = {...week};\r\n        nw.notes = ['', '', '', '', '', '', '']\r\n        editWeek(nw);\r\n    }\r\n\r\n    function saveItem(newWeek) {\r\n        if (!newWeek.notes) newWeek.notes = ['', '', '', '', '', '', ''];\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n    }\r\n\r\n    function addAllItemsToWeek() {\r\n        let ids = [];\r\n        let newWeek = {...week};\r\n        unselected.forEach(item => ids.push(item.id));\r\n        if (newWeek.items === undefined) newWeek = {date: props.weekBeginning, items: []};\r\n        ids.forEach(id => newWeek.items.push([id, [-1, -1, -1, -1, -1, -1, -1]]));\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function addItemToWeek(event) {\r\n        let newWeek = {...week};\r\n        if (newWeek.items === undefined) newWeek = {date: props.weekBeginning, items: []};\r\n        newWeek.items.push([event.target.value, [-1, -1, -1, -1, -1, -1, -1]]);\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function removeItemFromWeek(event) {\r\n        let newWeek = {...week};\r\n        newWeek.items = newWeek.items.filter(needle => needle[0] !== event.target.value);\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function moveItemInWeek(event) {\r\n        let newWeek = JSON.parse(JSON.stringify(week));\r\n        let index = +event.currentTarget.value;\r\n        let newIndex;\r\n        if (event.currentTarget.dataset.direction === 'up') {\r\n            newIndex = index > 0 ? index - 1 : newWeek.items.length - 1;\r\n        } else {\r\n            newIndex = index < newWeek.items.length - 1 ? index + 1 : 0;\r\n        }\r\n        newWeek.items.splice(newIndex, 0, newWeek.items.splice(index, 1)[0]);\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function changeDay(event) {\r\n        let newWeek = {...week};\r\n        let index = newWeek.items.findIndex(item => item[0] === event.currentTarget.dataset.id);\r\n        let item = newWeek.items[index];\r\n        let day = event.currentTarget.dataset.day;\r\n        if (props.isThisWeek) {\r\n            item[1][day] = (item[1][day] === (-1) ? 0 : item[1][day] === 0 ? 1 : (-1));\r\n        } else {\r\n            item[1][day] = (item[1][day] > (-1) ? (-1) : 0);\r\n        }\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n        updateArchive(newWeek, index);\r\n    }\r\n\r\n    function saveTodo(id, day, value) {\r\n        let newWeek = {...week};\r\n        let index = newWeek.items.findIndex(item => item[0] === id);\r\n        let item = newWeek.items[index];\r\n        item[1][day] = value;\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n        updateArchive(newWeek, index);\r\n    }\r\n\r\n    function saveNote(value, i) {\r\n        let newWeek = {...week};\r\n        newWeek.notes[i] = value;\r\n        console.log(newWeek);\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function updateArchive(newWeek, i) {\r\n        if (props.isThisWeek) {\r\n            let archive = JSON.parse(localStorage.getItem('archive'));\r\n            let thisWeek = {\r\n                date: props.weekBeginning,\r\n                items: [...selected]\r\n            };\r\n            thisWeek.items[i].todo = newWeek.items[i][1];\r\n            if (archive) {\r\n                let index = archive.findIndex(week => week.date === thisWeek.date);\r\n                index > -1 ? archive[index] = thisWeek : archive.unshift(thisWeek);\r\n            } else {\r\n                archive = [];\r\n                archive.unshift(thisWeek);\r\n            }\r\n            localStorage.setItem('archive', JSON.stringify(archive));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='week'>\r\n            <div className='week-header'>\r\n                <ActionsPanel\r\n                    weekBeginning={props.weekBeginning}\r\n                    deleting={deleting}\r\n                    onSwitchDeleting={switchDeleting}\r\n                    shifting={shifting}\r\n                    onSwitchShifting={switchShifting}\r\n                />\r\n                {props.weekName === 'This Week' ?\r\n                    <h1>\r\n                        {props.weekName}\r\n                    </h1>\r\n                    :\r\n                    <h2>\r\n                        {props.weekName}\r\n                    </h2>\r\n                }\r\n            </div>\r\n            <section>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td className='week-date left-column'>\r\n                            {props.weekBeginning}\r\n                        </td>\r\n                        <td className='week-date'>\r\n                        </td>\r\n                        {props.days.map((day, i) =>\r\n                            <td\r\n                                key={day + i + props.weekBeginning}\r\n                                className='day'\r\n                            >\r\n                                {day.substring(0,1)}\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody data-dragweek={props.weekBeginning}>\r\n                        {selected.map((item, i) =>\r\n                            <Row\r\n                                key={item.id + props.weekBeginning}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                today={props.today}\r\n                                isThisWeek={props.isThisWeek}\r\n                                weekBeginning={props.weekBeginning}\r\n                                days={days}\r\n                                deleting={deleting}\r\n                                shifting={shifting}\r\n                                onRemoveItem={removeItemFromWeek}\r\n                                onMoveItem={moveItemInWeek}\r\n                                onChangeDay={changeDay}\r\n                                onSaveTodo={saveTodo}\r\n                            />\r\n                        )}\r\n                        <tr>\r\n                            <td className='no-table'>\r\n                            </td>\r\n                            <td className='no-table'>\r\n                                <Edit2 size={12} />\r\n                            </td>\r\n                            {week.notes.map((note, i) =>\r\n                                <td\r\n                                    key={props.weekBeginning + 'notes' + i}\r\n                                    className='notes-cell'\r\n                                    onClick={event => event.target.classList.contains('notes-cell') ? switchEditingNotes(props.weekBeginning + i) : ''}\r\n                                >\r\n                                    {week.notes && week.notes[i] &&\r\n                                        <MoreHorizontal\r\n                                            className='notes-cell'\r\n                                            size={12}\r\n                                        />\r\n                                    }\r\n                                    {editingNotes === (props.weekBeginning + i) &&\r\n                                        <Modal\r\n                                            name={'notes'}\r\n                                            onToggleModal={switchEditingNotes}\r\n                                            modal={\r\n                                                <NotesModal\r\n                                                    key={props.weekBeginning + 'addItems'}\r\n                                                    index={i}\r\n                                                    note={note}\r\n                                                    day={days[i]}\r\n                                                    today={props.today}\r\n                                                    thisDay={days[i]}\r\n                                                    isThisWeek={props.isThisWeek}\r\n                                                    weekBeginning={props.weekBeginning}\r\n                                                    onSaveNote={saveNote}\r\n                                                    onToggleModal={switchEditingNotes}\r\n                                                />\r\n                                            }\r\n                                        />\r\n                                    }\r\n                                </td>\r\n                            )}\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n            {unselected.length > 0 &&\r\n                <div className='edit-box'>\r\n                    <button\r\n                        className='add-items'\r\n                        onClick={() => switchAddingItems(true)}\r\n                    >\r\n                        add items\r\n                    </button>\r\n                    {addingItems &&\r\n                        <Modal\r\n                            name={'add-items'}\r\n                            onToggleModal={switchAddingItems}\r\n                            modal={\r\n                                <AddItems\r\n                                    key={props.weekBeginning + 'addItems'}\r\n                                    unselected={unselected}\r\n                                    onAddAllItemsToWeek={addAllItemsToWeek}\r\n                                    onAddItemToWeek={addItemToWeek}\r\n                                    onToggleModal={switchAddingItems}\r\n                                />\r\n                            }\r\n                        />\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport ArrangeWeek from './ArrangeWeek';\r\nimport {days} from '../../static/colorsDays';\r\nimport './arrange.css';\r\n\r\nexport default function Arrange() {\r\n\r\n    const [dateToday, updateDateToday] = useState(new Date());\r\n    const [thisWeekBeginning, updateThisWeekBeginning] = useState(getWeekBeginning());\r\n    const [nextWeekBeginning, updateNextWeekBeginning] = useState(getWeekBeginning(7));\r\n\r\n    const [ogDayToday, updateOgDayToday] = useState(dateToday.getDay());\r\n    const [dayToday, updateDayToday] = useState(ogDayToday === 0 ? 6 : ogDayToday - 1);\r\n\r\n    useEffect(() => updateOgDayToday(dateToday.getDay()), [dateToday]);\r\n    useEffect(() => updateDayToday(ogDayToday === 0 ? 6 : ogDayToday - 1), [ogDayToday]);\r\n    useEffect(() => updateThisWeekBeginning(getWeekBeginning()), [dateToday]);\r\n    useEffect(() => updateNextWeekBeginning(getWeekBeginning(7)), [dateToday]);\r\n\r\n    setInterval(() => {\r\n        const newDate = new Date();\r\n        if (newDate.getDay() === 1 && dateToday.getDay() === 0) {\r\n            window.location.reload();\r\n        } else if (newDate.getDate() !== dateToday.getDate()) {\r\n            updateDateToday(newDate);\r\n        }\r\n    }, 60000);\r\n\r\n    function getWeekBeginning(addWeek = 0) {\r\n        let newDate = new Date(),\r\n            day = newDate.getDay();\r\n        function padZero(n) { return n < 10 ? '0' + n : n }\r\n        if (day > 1) {\r\n            newDate.setDate(newDate.getDate() - day + 1 + addWeek);\r\n        } else if (day === 0) {\r\n            newDate.setDate(newDate.getDate() - 6 + addWeek);\r\n        } else {\r\n            newDate.setDate(newDate.getDate() + addWeek);\r\n        }\r\n        return newDate.getFullYear() + '/' + padZero(newDate.getMonth() + 1) + '/' + padZero(newDate.getDate());\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <ArrangeWeek\r\n                key={'thisWeek'}\r\n                today={dayToday}\r\n                weekName={'This Week'}\r\n                days={days}\r\n                weekBeginning={thisWeekBeginning}\r\n                isThisWeek={true}\r\n            />\r\n            <ArrangeWeek\r\n                key={'nextWeek'}\r\n                today={dayToday}\r\n                weekName={'Next Week'}\r\n                days={days}\r\n                weekBeginning={nextWeekBeginning}\r\n                thisWeekBeginning={thisWeekBeginning}\r\n            />\r\n        </main>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport validateItem from '../../../functions/validateItem';\r\nimport '../../Arrange/';\r\nimport {X, Check} from 'react-feather';\r\n\r\nexport default function UpdateItem(props) {\r\n\r\n    const itemToPlay = props.item ? {...props.item} :\r\n        {\r\n            id: '',\r\n            text: '',\r\n            type: true,\r\n            number: 1,\r\n            color: 'color0'\r\n        };\r\n\r\n    const [item, editItem] = useState(itemToPlay);\r\n\r\n    function checkKey(event) {\r\n        if (event.key === 'Enter') updateItem();\r\n    }\r\n\r\n    function handleInput(event) {\r\n        let newItem = {...item};\r\n        newItem[event.target.name] = event.target.value;\r\n        editItem({...newItem});\r\n    }\r\n\r\n    function switchType() {\r\n        let newItem = {...item};\r\n        newItem.type = !newItem.type;\r\n        editItem({...newItem});\r\n    }\r\n\r\n    function updateItem() {\r\n        if (validateItem(item)) {\r\n            props.onUpdateItem({...item});\r\n            editItem({\r\n                id: '',\r\n                text: '',\r\n                type: true,\r\n                number: 1,\r\n                color: 'color0'\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className='item'>\r\n                <input\r\n                    type='text'\r\n                    name='text'\r\n                    value={item.text}\r\n                    onChange={handleInput}\r\n                    onKeyDown={event => checkKey(event)}\r\n                    className='text'\r\n                />\r\n                <button\r\n                    name='type'\r\n                    value={item.type}\r\n                    onClick={switchType}\r\n                    className='type'>\r\n                    {item.type ?\r\n                        <div className='day spot open'>\r\n                        </div>\r\n                        :\r\n                        '#'\r\n                    }\r\n                </button>\r\n                <input\r\n                    type='number'\r\n                    name='number'\r\n                    min='1'\r\n                    max='99999'\r\n                    value={item.number}\r\n                    onChange={handleInput}\r\n                    onKeyDown={event => checkKey(event)}\r\n                    className='number'\r\n                />\r\n                <button\r\n                    className={'color ' + item.color}>\r\n                </button>\r\n                <button\r\n                    onClick={props.onCancelUpdate}\r\n                    className='plus-sign'>\r\n                    <X size={16} />\r\n                </button>\r\n            </div>\r\n            <div className='edit-box'>\r\n                <div className='palette'>\r\n                    {props.colors.map(color =>\r\n                        <button\r\n                            key={color}\r\n                            name='color'\r\n                            value={color}\r\n                            onClick={handleInput}\r\n                            className={'palette-square ' + color}>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <div className='edit-box-buttons'>\r\n                    <button\r\n                        onClick={updateItem}\r\n                        className='edit-complete'>\r\n                        <Check size={16} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport UpdateItem from '../UpdateItem';\r\nimport cutNumber from '../../../functions/cutNumber';\r\nimport validateItem from '../../../functions/validateItem';\r\nimport {X, Hash} from 'react-feather';\r\n\r\nexport default function Item(props) {\r\n\r\n    const [item, editItem] = useState(props.item);\r\n    const [editing, switchEditing] = useState(false);\r\n    const [inUse, switchInUse] = useState(false);\r\n\r\n    useEffect(() => {\r\n        checkInUse();\r\n    });\r\n\r\n    function startEdit() {\r\n        switchEditing(true);\r\n        props.onCancelNewItem();\r\n    }\r\n\r\n    function updateItem(data) {\r\n        if (validateItem(data)) {\r\n            let storedItems = JSON.parse(localStorage.getItem('items'));\r\n            let edited = storedItems.findIndex(item => item.id === data.id);\r\n            storedItems[edited] = data;\r\n            localStorage.setItem('items', JSON.stringify(storedItems));\r\n            editItem({...data});\r\n            switchEditing(false);\r\n        }\r\n    }\r\n\r\n    function checkInUse() {\r\n        if (localStorage.getItem('weeks')) {\r\n            const weeks = JSON.parse(localStorage.getItem('weeks'));\r\n            weeks.forEach(week => {\r\n                if (week.items.find((item) => item[0] === props.item.id)) switchInUse(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editing && !props.currentlyAdding ?\r\n                <UpdateItem\r\n                    item={item}\r\n                    colors={props.colors}\r\n                    onUpdateItem={updateItem}\r\n                    onCancelUpdate={() => switchEditing(false)}\r\n                />\r\n                :\r\n                <div className='item'>\r\n                    <div\r\n                        onClick={startEdit}\r\n                        className='text'>\r\n                        {item.text}\r\n                    </div>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className='type'>\r\n                        {item.type ?\r\n                            <div className='day spot open'>\r\n                            </div>\r\n                            :\r\n                            <Hash size={14} />\r\n                        }\r\n                    </button>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className='number'>\r\n                        {cutNumber(item.number)}\r\n                    </button>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className={'color ' + item.color}>\r\n                    </button>\r\n                    <button\r\n                        value={item.id}\r\n                        disabled={inUse}\r\n                        onClick={props.onDeleteItem}\r\n                        className='plus-sign'>\r\n                        <X size={16} />\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Item from './Item';\r\nimport UpdateItem from './UpdateItem';\r\nimport getStoredItems from '../../functions/getStoredItems';\r\nimport {colorsDays} from '../../static/colorsDays';\r\nimport './items.css';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {Plus} from 'react-feather';\r\n\r\nexport default function Items() {\r\n\r\n    const [items, editItems] = useState(getStoredItems());\r\n    const [adding, switchAdding] = useState(false);\r\n\r\n    function addItem(data) {\r\n        let item = {\r\n            id: uuidv4(),\r\n            text: data.text,\r\n            type: data.type,\r\n            number: data.number,\r\n            color: data.color\r\n        };\r\n        let newItems = [...items];\r\n        newItems.push(item);\r\n        localStorage.setItem('items', JSON.stringify(newItems));\r\n        editItems([...newItems]);\r\n    }\r\n\r\n    function deleteItem(event) {\r\n        if (window.confirm('Really delete?')) {\r\n            let newItems = [...items];\r\n            let filtered = newItems.filter(item => item.id !== event.currentTarget.value);\r\n            localStorage.setItem('items', JSON.stringify(filtered));\r\n            editItems([...filtered]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main id='items'>\r\n            <h1>\r\n                Items\r\n            </h1>\r\n            {items.map(item =>\r\n                <Item\r\n                    key={item.id}\r\n                    item={item}\r\n                    colors={colorsDays}\r\n                    currentlyAdding={adding}\r\n                    onDeleteItem={deleteItem}\r\n                    onCancelNewItem={() => switchAdding(false)}\r\n                />\r\n            )}\r\n            {adding ?\r\n                <UpdateItem\r\n                    colors={colorsDays}\r\n                    onUpdateItem={addItem}\r\n                    onCancelUpdate={() => switchAdding(false)}\r\n                />\r\n                :\r\n                <button\r\n                    onClick={() => switchAdding(true)}\r\n                    className='plus-sign add'>\r\n                    <Plus size={18} />\r\n                </button>\r\n            }\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Row from '../../Arrange/ArrangeWeek/Row';\r\nimport '../../Arrange/arrange.css';\r\n\r\nexport default function ArchiveWeek(props) {\r\n    return (\r\n        <div className='week'>\r\n            <section>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td className='week-date left-column'>\r\n                            {props.week.date}\r\n                        </td>\r\n                        <td className='week-date'>\r\n                        </td>\r\n                        {props.days.map((day, i) =>\r\n                            <td\r\n                                key={day + i + props.week.date}\r\n                                className='day'>\r\n                                {day.substring(0,1)}\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.week.items.map((item, i) =>\r\n                            <Row\r\n                                key={item.id + props.week.date}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                weekBeginning={props.week.date}\r\n                                archive={true}\r\n                                onChangeDay={null}\r\n                                onRemoveItem={null}\r\n                            />\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ArchiveWeek from './ArchiveWeek';\r\nimport {days} from '../../static/colorsDays';\r\nimport '../../components/Arrange/arrange.css';\r\n\r\nexport default function Archive(props) {\r\n\r\n    const archive = getArchive();\r\n\r\n    function getArchive() {\r\n        if (localStorage.getItem('archive')) {\r\n            return JSON.parse(localStorage.getItem('archive'));\r\n        } else return [];\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <h1>\r\n                Archive\r\n            </h1>\r\n            {archive.map((week, i) =>\r\n                <ArchiveWeek\r\n                    key={'archiveWeek' + i}\r\n                    week={week}\r\n                    days={days}\r\n                />\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './information.css';\r\n\r\nexport default function Information(props) {\r\n\r\n    return (\r\n        <>\r\n            <h2>ITEMS</h2>\r\n            <ul>\r\n                <li>add items: name, type, number, colour</li>\r\n                <li>type: choose between dot (one per day) or number (up to 100,000 per week)</li>\r\n                <li>enter a weekly goal number for the item</li>\r\n                <li>choose a colour (so similar items can be visually grouped)</li>\r\n            </ul>\r\n            <h2>ARRANGE</h2>\r\n            <ul>\r\n                <li>touch an item on the list to add it to the week</li>\r\n                <li>for dot items:</li>\r\n                <li className='indent'>touch a cell to set as <i>todo</i> for that day</li>\r\n                <li className='indent'>touch again to set as <i>done</i></li>\r\n                <li>for number items:</li>\r\n                <li className='indent'>touch a cell to select from options panel</li>\r\n                <li>the number to the left of Monday tells you how many left to do that week</li>\r\n                <li>when you've hit the weekly target for an item, the row will turn black</li>\r\n            </ul>\r\n            <h2>ARCHIVE</h2>\r\n            <ul>\r\n                <li>lists previous weeks</li>\r\n                <li>not editable</li>\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {Redirect, BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Modal from './components/Modal';\r\nimport Header from './components/Header';\r\nimport Nav from './components/Nav';\r\nimport Items from './components/Items';\r\nimport Arrange from './components/Arrange';\r\nimport Archive from './components/Archive';\r\nimport Information from './components/Information';\r\nimport {Info} from 'react-feather';\r\nimport './app.css';\r\n\r\nexport default function App() {\r\n\r\n    const [infoBox, toggleInfoBox] = useState(false);\r\n\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Header />\r\n            <Info size={16} className='info' onClick={() => toggleInfoBox(true)} />\r\n            {infoBox &&\r\n                <Modal\r\n                    name={'info'}\r\n                    onToggleModal={toggleInfoBox}\r\n                    modal={\r\n                        <Information\r\n                            onToggleModal={toggleInfoBox}\r\n                        />\r\n                    }\r\n                />\r\n            }\r\n            <div className='bgPanel'>\r\n            </div>\r\n            <Switch>\r\n                <Route path='/Items'>\r\n                    <Items />\r\n                </Route>\r\n                <Route path='/Arrange'>\r\n                    <Arrange />\r\n                </Route>\r\n                <Route path='/Archive'>\r\n                    <Archive />\r\n                </Route>\r\n                <Route path='/'>\r\n                    <Redirect to='/Arrange' />\r\n                </Route>\r\n            </Switch>\r\n            <Nav />\r\n        </Router>\r\n    );\r\n}\r\n","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA.'\r\n                            );\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}