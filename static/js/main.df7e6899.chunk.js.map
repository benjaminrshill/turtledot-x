{"version":3,"sources":["components/Header/turtledot.svg","components/Header/index.js","components/Nav/index.js","functions/validateItem.js","functions/cutNumber.js","components/Cell/index.js","components/Row/index.js","functions/getStoredItems.js","functions/sortColor.js","functions/getStoredWeek.js","static/colorsDays.js","components/Arrange/ArrangeWeek/index.js","components/Arrange/index.js","components/Items/UpdateItem/index.js","components/Items/Item/index.js","components/Items/index.js","components/Archive/ArchiveWeek/index.js","components/Archive/index.js","components/Information/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","src","turtledot","className","alt","Nav","to","activeClassName","size","validateItem","item","text","length","number","type","cutNumber","toString","slice","Math","ceil","Cell","props","useState","editing","switchEditing","day","editedValue","changeEditedValue","validateTodo","onSaveTodo","id","index","data-id","data-item","rowIndex","data-day","onClick","onChangeDay","isThisWeek","event","target","classList","contains","today","color","avgTodo","dayOfWeek","name","checked","onChange","value","min","max","onFocus","onKeyDown","key","checkKey","Row","todo","editTodo","currentTotal","tooHigh","tooLow","allDone","cutNum","goalNum","originalDay","row","editRow","useEffect","numberDoneAndToDo","numberToDo","forEach","push","reduce","a","b","Date","getDay","doNumbers","draggable","archive","weekBeginning","data-index","data-dragid","data-dragweek","shifting","deleting","onRemoveItem","data-direction","onMoveItem","map","i","days","getStoredItems","localStorage","getItem","JSON","parse","sort","getStoredWeek","week","colorsDays","ArrangeWeek","editWeek","unselected","editUnselected","selected","editSelected","switchDeleting","switchShifting","createSelected","createUnselected","newWeek","items","findIndex","uItem","moveItem","splice","addItemToWeek","undefined","date","setItem","stringify","removeItemFromWeek","filter","needle","moveItemInWeek","newIndex","currentTarget","dataset","direction","changeDay","updateArchive","saveTodo","thisWeek","unshift","createWeek","htmlFor","substring","ids","data-week","Arrange","dateToday","updateDateToday","getWeekBeginning","thisWeekBeginning","updateThisWeekBeginning","nextWeekBeginning","updateNextWeekBeginning","addWeek","newDate","padZero","n","setDate","getDate","getFullYear","getMonth","setInterval","window","location","reload","weekName","UpdateItem","itemToPlay","editItem","updateItem","handleInput","newItem","onUpdateItem","onCancelUpdate","colors","Item","inUse","switchInUse","startEdit","onCancelNewItem","find","checkInUse","currentlyAdding","data","storedItems","edited","disabled","onDeleteItem","Items","editItems","adding","switchAdding","deleteItem","confirm","filtered","uuidv4","newItems","ArchiveWeek","Archive","Information","infoBox","toggleInfoBox","App","basename","process","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"gXAAe,MAA0B,sC,MCI1B,SAASA,IACpB,OACI,iCACI,qBAAKC,IAAKC,EAAWC,UAAU,OAAOC,IAAI,W,0BCFvC,SAASC,IACpB,OACI,gCACI,eAAC,IAAD,CAASC,GAAG,SAASH,UAAU,YAAYI,gBAAgB,OAA3D,UACI,qBAAKJ,UAAU,YAAf,SACI,cAAC,IAAD,CAAMK,KAAM,OAEhB,qBAAKL,UAAU,YAAf,sBAIJ,eAAC,IAAD,CAASG,GAAG,WAAWH,UAAU,YAAYI,gBAAgB,OAA7D,UACI,qBAAKJ,UAAU,YAAf,SACI,sBAAMA,UAAU,qBAGpB,qBAAKA,UAAU,YAAf,wBAIJ,eAAC,IAAD,CAASG,GAAG,WAAWH,UAAU,YAAYI,gBAAgB,OAA7D,UACI,qBAAKJ,UAAU,YAAf,SACI,cAAC,IAAD,CAAUK,KAAM,OAEpB,qBAAKL,UAAU,YAAf,2B,0BC7BD,SAASM,EAAaC,GACjC,OAAIA,EAAKC,KAAKC,OAAS,GAAKF,EAAKC,KAAKC,OAAS,IAAMF,EAAKG,OAAS,OAC3DH,EAAKI,MAAQJ,EAAKG,OAAS,MAC1BH,EAAKI,MAAQJ,EAAKG,OAAS,aAAhC,I,6BCHO,SAASE,EAAUF,GAC9B,OAAIA,EAAS,MACF,OACAA,EAAS,KACTA,EAAOG,WAAWC,MAAM,EAAE,GAAK,IAC/BJ,EAAS,IACZA,EAAS,MAAS,EAAUA,EAAOG,WAAWC,MAAM,EAAG,GAAK,IACzDJ,EAAOG,WAAWC,MAAM,EAAG,GAAK,IAAMJ,EAAOG,WAAWC,MAAM,EAAG,GAAK,IACtEJ,EAAS,IAAM,EACfK,KAAKC,KAAKN,GACPA,E,MCNH,SAASO,EAAKC,GAAQ,IAAD,EAECC,oBAAS,GAFV,mBAEzBC,EAFyB,KAEhBC,EAFgB,OAGSF,mBAASD,EAAMI,KAHxB,mBAGzBC,EAHyB,KAGZC,EAHY,KAKhC,SAASC,IACDF,GAAe,GAAKA,EAAc,SAClCL,EAAMQ,WAAWR,EAAMS,GAAIT,EAAMU,MAAOL,GACxCF,GAAc,IAYtB,OACI,qBACIQ,UAASX,EAAMS,GACfG,YAAWZ,EAAMa,SACjBC,WAAUd,EAAMU,MAChBK,QAASf,EAAMP,KAAOO,EAAMgB,YAAchB,EAAMiB,WATxD,SAAmBC,IACXA,EAAMC,OAAOC,UAAUC,SAAS,cAAgBH,EAAMC,OAAOC,UAAUC,SAAS,eAAclB,GAAc,IAQnCH,EAAMgB,YAC/ElC,UAAW,wBAA0BkB,EAAMiB,YAAcjB,EAAMsB,QAAUtB,EAAMU,MAAQV,EAAMuB,MAAQ,IALzG,UAMQ,qBACIzC,UAAWkB,EAAMP,KACZ,QAAwB,IAAdO,EAAMI,IAAY,UAA0B,IAAdJ,EAAMI,IAAY,QAAU,IAEpE,aAA6B,IAAdJ,EAAMI,IAAY,QAAU,IAJpD,UAKMJ,EAAMP,MAAQO,EAAMI,IAAM,EAAIJ,EAAMI,KAAOJ,EAAMP,MAAQO,EAAMI,KAAO,EAAIV,EAAUM,EAAMwB,SAAW,KAE9GtB,GACG,qCACI,qBACIa,QAASR,EACTzB,UAAU,oBAGd,sBAAKA,UAAU,eAAf,UACI,6BACKkB,EAAMV,OAEX,6BACKU,EAAMyB,YAEX,qCACI,8BACI,kCACI,uBACIhC,KAAK,QACLiC,KAAK,eACLC,SAA2B,KAAjBtB,EACVuB,SAAU,kBAAMtB,GAAmB,MAL3C,iBAUJ,8BACI,kCACI,uBACIb,KAAK,QACLiC,KAAK,eACLC,QAA0B,KAAhBtB,EACVuB,SAAU,kBAAMtB,EAAkB,MAL1C,0BAUJ,8BACI,kCACI,uBACIb,KAAK,QACLiC,KAAK,eACLG,MAAOxB,EACPsB,SAAUtB,EAAc,EACxBuB,SAAUvB,EAAc,EAAI,kBAAMC,EAAkBZ,EAAUM,EAAMwB,WAAY,OANxF,6BAYR,uBACI/B,KAAK,SACLqC,IAAI,KACJC,IAAI,SACJF,MAAOxB,EACP2B,QAAS3B,EAAc,EAAI,kBAAMC,EAAkBZ,EAAUM,EAAMwB,WAAY,KAC/EI,SAAU,SAAAV,GAAK,OAAIZ,GAAmBY,EAAMC,OAAOU,QACnDI,UAAW,SAAAf,GAAK,OA/ExC,SAAkBA,GACI,UAAdA,EAAMgB,KAAiB3B,IA8Ea4B,CAASjB,MAEjC,wBACIH,QAASR,EACTzB,UAAU,YAFd,2B,0BC3FT,SAASsD,EAAIpC,GAAQ,IAAD,EAENC,mBAAS,YAAID,EAAMqC,OAFb,mBAExBA,EAFwB,KAElBC,EAFkB,OAGRrC,mBAAS,CAC5BsC,aAAc,EACdf,QAAS,EACTgB,SAAS,EACTC,QAAQ,EACRC,SAAS,EACTC,OAAQ,EACRC,QAAS,EACTC,YAAa,EACbvB,MAAO,IAZoB,mBAGxBwB,EAHwB,KAGnBC,EAHmB,KA+C/B,OAhCAC,qBAAU,kBAAMV,EAAS,YAAItC,EAAMqC,SAAQ,CAACrC,IAC5CgD,qBAAU,kBAEV,WACI,IAAIC,EAAoB,GACpBC,EAAa,GACjBlD,EAAMqC,KAAKc,SAAQ,SAAA/C,GACXA,GAAO,GAAG6C,EAAkBG,MAAMhD,GAC1B,IAARA,GAAW8C,EAAWE,MAAMhD,MAEpC,IAAMmC,EAAeU,EAAkBI,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GACzDb,EAAUH,IAAiBvC,EAAMR,OACjCgC,IAAYxB,EAAMR,OAAS+C,GAAgBW,EAAW3D,OACtDiD,EAAUS,EAAkB1D,QAAUS,EAAMR,OAC5CiD,EAASQ,EAAkB1D,QAAUS,EAAMR,OAC3CmD,EAASjD,GAAWM,EAAMR,QAC1BoD,EAAUlD,GAAWM,EAAMR,OAAS+C,GACpCM,GAAc,IAAIW,MAAOC,SAE/BV,EAAQ,CACJR,aAAcA,EACdf,QAASA,EACTgB,QAASA,EACTC,OAAQA,EACRC,QAASA,EACTC,OAAQA,EACRC,QAASA,EACTC,YAAaA,EACbvB,MAV0B,IAAhBuB,EAAoB,EAAIA,EAAc,IAjBxCa,KAAa,CAAC1D,IAgC1B,qBACI2D,WAAY3D,EAAM4D,QAClBnD,GAAIT,EAAMS,GAAKT,EAAM6D,cACrBC,aAAY9D,EAAMU,MAClBqD,cAAa/D,EAAMS,GACnBuD,gBAAehE,EAAM6D,cACrB/E,UAAWgE,EAAIJ,QAAU,UAAY1C,EAAMuB,MAN/C,UAQI,qBACId,GAAIT,EAAMS,GACV3B,UAAW,yBAA2BkB,EAAMiE,SAAW,SAAW,IAFtE,WAGMjE,EAAM4D,SAAW5D,EAAMkE,UACrB,wBACIrC,MAAO7B,EAAMS,GACbM,QAASf,EAAMmE,aACfrF,UAAU,oBAHd,qBAOFkB,EAAM4D,SAAW5D,EAAMiE,UACrB,gCACI,wBACIpC,MAAO7B,EAAMU,MACb0D,iBAAe,KACfrD,QAASf,EAAMqE,WACfvF,UAAU,oBAJd,SAKI,cAAC,IAAD,CAASK,KAAM,OAEnB,wBACI0C,MAAO7B,EAAMU,MACb0D,iBAAe,OACfrD,QAASf,EAAMqE,WACfvF,UAAU,oBAJd,SAKI,cAAC,IAAD,CAAWK,KAAM,UAI5Ba,EAAMV,QAEX,oBAAIR,UAAW,8BACRkB,EAAMP,OAASqD,EAAIN,QAAU,0BAA4BM,EAAIL,OAAS,wBAA0B,KADvG,SAEK/C,EAAUoD,EAAIJ,QAAUI,EAAIP,aAAeO,EAAIF,SAAW,EAAIE,EAAIF,QAAU5C,EAAMR,UAEtF6C,EAAKiC,KAAI,SAAClE,EAAKmE,GAAN,OACN,cAACxE,EAAD,CAEIU,GAAIT,EAAMS,GACVL,IAAKA,EACLM,MAAO6D,EACP1D,SAAUb,EAAMU,MAChBY,MAAOwB,EAAIxB,MACXE,QAASsB,EAAItB,QAAU,EAAIsB,EAAItB,QAAU,KACzC/B,KAAMO,EAAMP,KACZ8B,MAAOvB,EAAMuB,MACbN,WAAYjB,EAAMiB,WAClB4C,cAAe7D,EAAM6D,cACrBpC,WAAYzB,EAAM4D,SAAW5D,EAAMwE,KAAKD,GACxCjF,KAAMU,EAAMV,KACZkB,WAAYR,EAAMQ,WAClBQ,YAAahB,EAAMgB,aAddhB,EAAMR,OAASQ,EAAMS,GAAK8D,SCjGpC,SAASE,IACpB,OAAIC,aAAaC,QAAQ,SACJC,KAAKC,MAAMH,aAAaC,QAAQ,UCHxCG,MAAK,SAACxB,EAAGC,GAAJ,OAAWD,EAAE/B,MAAQgC,EAAEhC,MAAS,GAAK,KDIzC,GELH,SAASwD,EAAcC,GAClC,OAAIN,aAAaC,QAAQK,GACdJ,KAAKC,MAAMH,aAAaC,QAAQK,IAC7B,G,UCHLC,EAAa,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAExGT,EAAO,CAAC,SAAS,UAAU,YAAY,WAAW,SAAS,WAAW,U,wBCMpE,SAASU,EAAYlF,GAAQ,IAAD,EAEdC,mBAAS8E,EAAc/E,EAAM6D,gBAFf,mBAEhCmB,EAFgC,KAE1BG,EAF0B,OAGFlF,mBAASwE,KAHP,mBAGhCW,EAHgC,KAGpBC,EAHoB,OAINpF,mBAAS,IAJH,mBAIhCqF,EAJgC,KAItBC,EAJsB,OAKJtF,oBAAS,GALL,mBAKhCiE,EALgC,KAKtBsB,EALsB,OAMJvF,oBAAS,GANL,mBAMhCgE,EANgC,KAMtBwB,EANsB,iDAUvC,gCAAAnC,EAAA,6DACQoC,EAAiB,GACjBC,EAAmBlB,IAF3B,SAGwBM,EAAc/E,EAAM6D,eAH5C,QAGQ+B,EAHR,QAIgBC,OACRD,EAAQC,MAAM1C,SAAQ,SAAA9D,GAClB,IAAIqB,EAAQiF,EAAiBG,WAAU,SAAAC,GAAK,OAAIA,EAAMtF,KAAOpB,EAAK,MAClE,GAAIqB,GAAS,EAAG,CACZ,IAAIsF,EAAWL,EAAiBM,OAAOvF,EAAO,GAC9CsF,EAAS,GAAG3D,KAAOhD,EAAK,GACxBqG,EAAetC,KAAK4C,EAAS,QAIzCX,EAAe,YAAIM,IACnBJ,EAAa,GAAD,OAAKG,IAfrB,4CAVuC,sBA4BvC,SAASQ,EAAchF,GACnB,IAAI0E,EAAO,eAAOZ,QACImB,IAAlBP,EAAQC,QAAqBD,EAAU,CAACQ,KAAMpG,EAAM6D,cAAegC,MAAO,KAC9ED,EAAQC,MAAMzC,KAAK,CAAClC,EAAMC,OAAOU,MAAO,EAAE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAClE6C,aAAa2B,QAAQrG,EAAM6D,cAAee,KAAK0B,UAAUV,IACzDT,EAAS,eAAIS,IAajB,SAASW,EAAmBrF,GACxB,IAAI0E,EAAO,eAAOZ,GAClBY,EAAQC,MAAQD,EAAQC,MAAMW,QAAO,SAAAC,GAAM,OAAIA,EAAO,KAAOvF,EAAMC,OAAOU,SAC1E6C,aAAa2B,QAAQrG,EAAM6D,cAAee,KAAK0B,UAAUV,IACzDT,EAAS,eAAIS,IAGjB,SAASc,EAAexF,GACpB,IACIyF,EADAjG,GAASQ,EAAM0F,cAAc/E,MAE7B+D,EAAUhB,KAAKC,MAAMD,KAAK0B,UAAUtB,IAEpC2B,EAD0C,OAA1CzF,EAAM0F,cAAcC,QAAQC,UACjBpG,EAAQ,EAAIA,EAAQ,EAAIkF,EAAQC,MAAMtG,OAAS,EAE/CmB,EAAQkF,EAAQC,MAAMtG,OAAS,EAAImB,EAAQ,EAAI,EAE9DkF,EAAQC,MAAMI,OAAOU,EAAU,EAAGf,EAAQC,MAAMI,OAAOvF,EAAO,GAAG,IACjEgE,aAAa2B,QAAQrG,EAAM6D,cAAee,KAAK0B,UAAUV,IACzDT,EAAS,eAAIS,IAGjB,SAASmB,EAAU7F,GACf,IAAI0E,EAAO,eAAOZ,GACdtE,EAAQkF,EAAQC,MAAMC,WAAU,SAAAzG,GAAI,OAAIA,EAAK,KAAO6B,EAAM0F,cAAcC,QAAQpG,MAChFpB,EAAOuG,EAAQC,MAAMnF,GACrBN,EAAMc,EAAM0F,cAAcC,QAAQzG,IAClCJ,EAAMiB,WACN5B,EAAK,GAAGe,IAA2B,IAAnBf,EAAK,GAAGe,GAAgB,EAAqB,IAAjBf,EAAK,GAAGe,GAAa,GAAM,EAEvEf,EAAK,GAAGe,GAAQf,EAAK,GAAGe,IAAS,GAAO,EAAK,EAEjDsE,aAAa2B,QAAQrG,EAAM6D,cAAee,KAAK0B,UAAUV,IACzDT,EAAS,eAAIS,IACboB,EAAcpB,EAASlF,GAG3B,SAASuG,EAASxG,EAAIL,EAAKyB,GACvB,IAAI+D,EAAO,eAAOZ,GACdtE,EAAQkF,EAAQC,MAAMC,WAAU,SAAAzG,GAAI,OAAIA,EAAK,KAAOoB,KAC7CmF,EAAQC,MAAMnF,GACpB,GAAGN,GAAOyB,EACf6C,aAAa2B,QAAQrG,EAAM6D,cAAee,KAAK0B,UAAUV,IACzDT,EAAS,eAAIS,IACboB,EAAcpB,EAASlF,GAG3B,SAASsG,EAAcpB,EAASrB,GAC5B,GAAIvE,EAAMiB,WAAY,CAClB,IAAI2C,EAAUgB,KAAKC,MAAMH,aAAaC,QAAQ,YAC1CuC,EAAW,CACXd,KAAMpG,EAAM6D,cACZgC,MAAM,YAAKP,IAGf,GADA4B,EAASrB,MAAMtB,GAAGlC,KAAOuD,EAAQC,MAAMtB,GAAG,GACtCX,EAAS,CACT,IAAIlD,EAAQkD,EAAQkC,WAAU,SAAAd,GAAI,OAAIA,EAAKoB,OAASc,EAASd,QAC7D1F,GAAS,EAAIkD,EAAQlD,GAASwG,EAAWtD,EAAQuD,QAAQD,QAEzDtD,EAAU,IACFuD,QAAQD,GAEpBxC,aAAa2B,QAAQ,UAAWzB,KAAK0B,UAAU1C,KAIvD,OAvGAZ,qBAAU,kBAR6B,0CAQvBoE,KAAc,CAACpC,IAwG3B,sBAAKlG,UAAU,OAAf,UACI,sBAAKA,UAAU,eAAf,UACI,iCACI,uBACIW,KAAK,WACLgB,GAAI,cAAgBT,EAAM6D,cAC1BjC,SAAU,kBAAOqC,GAAYuB,GAAgBtB,MAEjD,uBAAOmD,QAAS,cAAgBrH,EAAM6D,cAAtC,SACKK,EACG,cAAC,IAAD,CAAQ/E,KAAM,KAEd,cAAC,IAAD,CAAOA,KAAM,UAIzB,iCACI,uBACIM,KAAK,WACLgB,GAAI,aAAeT,EAAM6D,cACzBjC,SAAU,kBAAOsC,GAAYuB,GAAgBxB,MAEjD,uBAAOoD,QAAS,aAAerH,EAAM6D,cAArC,SACKI,EACG,cAAC,IAAD,CAAG9E,KAAM,KAET,cAAC,IAAD,CAAWA,KAAM,aAKjC,kCACI,kCACI,gCACA,+BACI,oBAAIL,UAAU,wBAAd,SACKkB,EAAM6D,gBAEX,oBAAI/E,UAAU,cAEbkB,EAAMwE,KAAKF,KAAI,SAAClE,EAAKmE,GAAN,OACZ,oBAEIzF,UAAU,MAFd,SAGKsB,EAAIkH,UAAU,EAAE,IAFZlH,EAAMmE,EAAIvE,EAAM6D,uBAOjC,uBAAOG,gBAAehE,EAAM6D,cAA5B,SACKyB,EAAShB,KAAI,SAACjF,EAAMkF,GAAP,OACV,cAACnC,EAAD,CAEI3B,GAAIpB,EAAKoB,GACTC,MAAO6D,EACPjF,KAAMD,EAAKC,KACXG,KAAMJ,EAAKI,KACXD,OAAQH,EAAKG,OACb+B,MAAOlC,EAAKkC,MACZc,KAAMhD,EAAKgD,KACXpB,WAAYjB,EAAMiB,WAClB4C,cAAe7D,EAAM6D,cACrBW,KAAMA,EACNN,SAAUA,EACVD,SAAUA,EACVE,aAAcoC,EACdlC,WAAYqC,EACZ1F,YAAa+F,EACbvG,WAAYyG,GAhBP5H,EAAKoB,GAAKT,EAAM6D,yBAsBxCuB,EAAW7F,OAAS,GACjB,sBAAKT,UAAU,WAAf,UACI,wBACIA,UAAU,cACViC,QA1JpB,WACI,IAAIwG,EAAM,GACN3B,EAAO,eAAOZ,GAClBI,EAAWjC,SAAQ,SAAA9D,GAAI,OAAIkI,EAAInE,KAAK/D,EAAKoB,YACnB0F,IAAlBP,EAAQC,QAAqBD,EAAU,CAACQ,KAAMpG,EAAM6D,cAAegC,MAAO,KAC9E0B,EAAIpE,SAAQ,SAAA1C,GAAE,OAAImF,EAAQC,MAAMzC,KAAK,CAAC3C,EAAI,EAAE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,QACpEiE,aAAa2B,QAAQrG,EAAM6D,cAAee,KAAK0B,UAAUV,IACzDT,EAAS,eAAIS,KAiJD,2BAMA,qBAAK9G,UAAU,aAAf,SACKsG,EAAWd,KAAI,SAAAjF,GAAI,OAChB,wBAEIwC,MAAOxC,EAAKoB,GACZ+G,YAAWxH,EAAM6D,cACjB/E,UAAW,mBAAqBO,EAAKkC,MACrCR,QAASmF,EALb,SAOK7G,EAAKC,MANDD,EAAKoB,GAAKT,EAAM6D,cAAgB,gBCxMtD,SAAS4D,IAAW,IAAD,EAEOxH,mBAAS,IAAIuD,MAFpB,mBAEvBkE,EAFuB,KAEZC,EAFY,OAGuB1H,mBAAS2H,KAHhC,mBAGvBC,EAHuB,KAGJC,EAHI,OAIuB7H,mBAAS2H,EAAiB,IAJjD,mBAIvBG,EAJuB,KAIJC,EAJI,KAkB9B,SAASJ,IAA+B,IAAdK,EAAa,uDAAH,EAC5BC,EAAU,IAAI1E,KACdpD,EAAM8H,EAAQzE,SAClB,SAAS0E,EAAQC,GAAK,OAAOA,EAAI,GAAK,IAAMA,EAAIA,EAQhD,OAPIhI,EAAM,EACN8H,EAAQG,QAAQH,EAAQI,UAAYlI,EAAM,EAAI6H,GAC/B,IAAR7H,EACP8H,EAAQG,QAAQH,EAAQI,UAAY,EAAIL,GAExCC,EAAQG,QAAQH,EAAQI,UAAYL,GAEjCC,EAAQK,cAAgB,IAAMJ,EAAQD,EAAQM,WAAa,GAAK,IAAML,EAAQD,EAAQI,WAGjG,OA1BAtF,qBAAU,kBAAM8E,EAAwBF,OAAqB,CAACF,IAC9D1E,qBAAU,kBAAMgF,EAAwBJ,EAAiB,MAAK,CAACF,IAE/De,aAAY,WACR,IAAMP,EAAU,IAAI1E,KACK,IAArB0E,EAAQzE,UAAyC,IAAvBiE,EAAUjE,SACpCiF,OAAOC,SAASC,SACTV,EAAQI,YAAcZ,EAAUY,WACvCX,EAAgBO,KAErB,KAiBC,uBAAMzH,GAAG,UAAT,UACI,2CAGA,cAACyE,EAAD,CAEI2D,SAAU,YACVrE,KAAMA,EACNX,cAAegE,EACf5G,YAAY,GAJP,YAMT,2CAGA,cAACiE,EAAD,CAEI2D,SAAU,YACVrE,KAAMA,EACNX,cAAekE,EACfF,kBAAmBA,GAJd,e,YChDN,SAASiB,EAAW9I,GAE/B,IAAM+I,EAAa/I,EAAMX,KAAN,eAAiBW,EAAMX,MACtC,CACIoB,GAAI,GACJnB,KAAM,GACNG,MAAM,EACND,OAAQ,EACR+B,MAAO,UARuB,EAWbtB,mBAAS8I,GAXI,mBAW/B1J,EAX+B,KAWzB2J,EAXyB,KAatC,SAAS7G,EAASjB,GACI,UAAdA,EAAMgB,KAAiB+G,IAG/B,SAASC,EAAahI,GAClB,IAAIiI,EAAO,eAAO9J,GAClB8J,EAAQjI,EAAMC,OAAOO,MAAQR,EAAMC,OAAOU,MAC1CmH,EAAS,eAAIG,IASjB,SAASF,IACD7J,EAAaC,KACbW,EAAMoJ,aAAN,eAAuB/J,IACvB2J,EAAS,CACLvI,GAAI,GACJnB,KAAM,GACNG,MAAM,EACND,OAAQ,EACR+B,MAAO,YAKnB,OACI,oCACI,sBAAKzC,UAAU,OAAf,UACI,uBACIW,KAAK,OACLiC,KAAK,OACLG,MAAOxC,EAAKC,KACZsC,SAAUsH,EACVjH,UAAW,SAAAf,GAAK,OAAIiB,EAASjB,IAC7BpC,UAAU,SAEd,wBACI4C,KAAK,OACLG,MAAOxC,EAAKI,KACZsB,QAjChB,WACI,IAAIoI,EAAO,eAAO9J,GAClB8J,EAAQ1J,MAAQ0J,EAAQ1J,KACxBuJ,EAAS,eAAIG,KA+BDrK,UAAU,OAJd,SAKKO,EAAKI,KACF,qBAAKX,UAAU,kBAGf,MAGR,uBACIW,KAAK,SACLiC,KAAK,SACLI,IAAI,IACJC,IAAI,QACJF,MAAOxC,EAAKG,OACZoC,SAAUsH,EACVjH,UAAW,SAAAf,GAAK,OAAIiB,EAASjB,IAC7BpC,UAAU,WAEd,wBACIA,UAAW,SAAWO,EAAKkC,QAE/B,wBACIR,QAASf,EAAMqJ,eACfvK,UAAU,YAFd,SAGI,cAAC,IAAD,CAAGK,KAAM,UAGjB,sBAAKL,UAAU,WAAf,UACI,qBAAKA,UAAU,UAAf,SACKkB,EAAMsJ,OAAOhF,KAAI,SAAA/C,GAAK,OACnB,wBAEIG,KAAK,QACLG,MAAON,EACPR,QAASmI,EACTpK,UAAW,kBAAoByC,GAJ1BA,QAQjB,qBAAKzC,UAAU,mBAAf,SACI,wBACIiC,QAASkI,EACTnK,UAAU,gBAFd,SAGI,cAAC,IAAD,CAAOK,KAAM,e,YCnGtB,SAASoK,EAAKvJ,GAAQ,IAAD,EAEPC,mBAASD,EAAMX,MAFR,mBAEzBA,EAFyB,KAEnB2J,EAFmB,OAGC/I,oBAAS,GAHV,mBAGzBC,EAHyB,KAGhBC,EAHgB,OAIHF,oBAAS,GAJN,mBAIzBuJ,EAJyB,KAIlBC,EAJkB,KAUhC,SAASC,IACLvJ,GAAc,GACdH,EAAM2J,kBAuBV,OA7BA3G,qBAAU,YAoBV,WACI,GAAI0B,aAAaC,QAAQ,SAAU,CACjBC,KAAKC,MAAMH,aAAaC,QAAQ,UACxCxB,SAAQ,SAAA6B,GACNA,EAAKa,MAAM+D,MAAK,SAACvK,GAAD,OAAUA,EAAK,KAAOW,EAAMX,KAAKoB,OAAKgJ,GAAY,OAvB9EI,MA6BA,8BACK3J,IAAYF,EAAM8J,gBACf,cAAChB,EAAD,CACIzJ,KAAMA,EACNiK,OAAQtJ,EAAMsJ,OACdF,aA1BhB,SAAoBW,GAChB,GAAI3K,EAAa2K,GAAO,CACpB,IAAIC,EAAcpF,KAAKC,MAAMH,aAAaC,QAAQ,UAC9CsF,EAASD,EAAYlE,WAAU,SAAAzG,GAAI,OAAIA,EAAKoB,KAAOsJ,EAAKtJ,MAC5DuJ,EAAYC,GAAUF,EACtBrF,aAAa2B,QAAQ,QAASzB,KAAK0B,UAAU0D,IAC7ChB,EAAS,eAAIe,IACb5J,GAAc,KAoBNkJ,eAAgB,kBAAMlJ,GAAc,MAGxC,sBAAKrB,UAAU,OAAf,UACI,qBACIiC,QAAS2I,EACT5K,UAAU,OAFd,SAGKO,EAAKC,OAEV,wBACIyB,QAAS2I,EACT5K,UAAU,OAFd,SAGKO,EAAKI,KACF,qBAAKX,UAAU,kBAGf,cAAC,IAAD,CAAMK,KAAM,OAGpB,wBACI4B,QAAS2I,EACT5K,UAAU,SAFd,SAGKY,EAAUL,EAAKG,UAEpB,wBACIuB,QAAS2I,EACT5K,UAAW,SAAWO,EAAKkC,QAE/B,wBACIM,MAAOxC,EAAKoB,GACZyJ,SAAUV,EACVzI,QAASf,EAAMmK,aACfrL,UAAU,YAJd,SAKI,cAAC,IAAD,CAAGK,KAAM,Y,kBCxElB,SAASiL,IAAS,IAAD,EAEDnK,mBAASwE,KAFR,mBAErBoB,EAFqB,KAEdwE,EAFc,OAGGpK,oBAAS,GAHZ,mBAGrBqK,EAHqB,KAGbC,EAHa,KAmB5B,SAASC,EAAWtJ,GAChB,GAAIwH,OAAO+B,QAAQ,kBAAmB,CAClC,IACIC,EADQ,YAAO7E,GACKW,QAAO,SAAAnH,GAAI,OAAIA,EAAKoB,KAAOS,EAAM0F,cAAc/E,SACvE6C,aAAa2B,QAAQ,QAASzB,KAAK0B,UAAUoE,IAC7CL,EAAU,YAAIK,KAItB,OACI,uBAAMjK,GAAG,QAAT,UACI,uCAGCoF,EAAMvB,KAAI,SAAAjF,GAAI,OACX,cAACkK,EAAD,CAEIlK,KAAMA,EACNiK,OAAQrE,EACR6E,gBAAiBQ,EACjBH,aAAcK,EACdb,gBAAiB,kBAAMY,GAAa,KAL/BlL,EAAKoB,OAQjB6J,EACG,cAACxB,EAAD,CACIQ,OAAQrE,EACRmE,aAzChB,SAAiBW,GACb,IAAI1K,EAAO,CACPoB,GAAIkK,cACJrL,KAAMyK,EAAKzK,KACXG,KAAMsK,EAAKtK,KACXD,OAAQuK,EAAKvK,OACb+B,MAAOwI,EAAKxI,OAEZqJ,EAAQ,YAAO/E,GACnB+E,EAASxH,KAAK/D,GACdqF,aAAa2B,QAAQ,QAASzB,KAAK0B,UAAUsE,IAC7CP,EAAU,YAAIO,KA+BFvB,eAAgB,kBAAMkB,GAAa,MAGvC,wBACIxJ,QAAS,kBAAMwJ,GAAa,IAC5BzL,UAAU,gBAFd,SAGI,cAAC,IAAD,CAAMK,KAAM,UC1DjB,SAAS0L,EAAY7K,GAChC,OACI,qBAAKlB,UAAU,OAAf,SACI,kCACI,kCACI,gCACA,+BACI,oBAAIA,UAAU,wBAAd,SACKkB,EAAMgF,KAAKoB,OAEhB,oBAAItH,UAAU,cAEbkB,EAAMwE,KAAKF,KAAI,SAAClE,EAAKmE,GAAN,OACZ,oBAEIzF,UAAU,MAFd,SAGKsB,EAAIkH,UAAU,EAAE,IAFZlH,EAAMmE,EAAIvE,EAAMgF,KAAKoB,cAOtC,gCACKpG,EAAMgF,KAAKa,MAAMvB,KAAI,SAACjF,EAAMkF,GAAP,OAClB,cAACnC,EAAD,CAEI3B,GAAIpB,EAAKoB,GACTC,MAAO6D,EACPjF,KAAMD,EAAKC,KACXG,KAAMJ,EAAKI,KACXD,OAAQH,EAAKG,OACb+B,MAAOlC,EAAKkC,MACZc,KAAMhD,EAAKgD,KACXwB,cAAe7D,EAAMgF,KAAKoB,KAC1BxC,SAAS,EACT5C,YAAa,KACbmD,aAAc,MAXT9E,EAAKoB,GAAKT,EAAMgF,KAAKoB,kBCvB3C,SAAS0E,EAAQ9K,GAE5B,IAAM4D,EAGEc,aAAaC,QAAQ,WACdC,KAAKC,MAAMH,aAAaC,QAAQ,YAC7B,GAGlB,OACI,uBAAMlE,GAAG,UAAT,UACI,yCAGCmD,EAAQU,KAAI,SAACU,EAAMT,GAAP,OACT,cAACsG,EAAD,CAEI7F,KAAMA,EACNR,KAAMA,GAFD,cAAgBD,S,kBClB1B,SAASwG,IAAe,IAAD,EAED9K,oBAAS,GAFR,mBAE3B+K,EAF2B,KAElBC,EAFkB,KAIlC,OACI,qCACI,cAAC,IAAD,CAAM9L,KAAM,GAAIL,UAAU,OAAOiC,QAAS,kBAAMkK,GAAeD,MAC9DA,GACG,sBAAKlM,UAAU,WAAf,UACI,uCACA,+BACI,4CAAc,cAAC,IAAD,CAAMK,KAAM,KAA1B,qBACA,uDACA,qGACA,qHACA,sGACA,wCAAU,cAAC,IAAD,CAAOA,KAAM,KAAvB,gBAA0C,cAAC,IAAD,CAAGA,KAAM,KAAnD,gBACA,6DAEJ,yCACA,+BACI,4EACA,qEACA,+CACA,qBAAIL,UAAU,SAAd,oDAA8D,qCAA9D,mBACA,qBAAIA,UAAU,SAAd,sCAAgD,qCAAhD,mBACA,kDACA,oBAAIA,UAAU,SAAd,4GACA,oBAAIA,UAAU,SAAd,sFACA,2GAGJ,yCACA,+BACI,sDACA,uD,MC7BT,SAASoM,IAEpB,OACI,eAAC,IAAD,CAAQC,SAAUC,eAAlB,UACI,cAACzM,EAAD,IACA,cAACoM,EAAD,IACA,qBAAKjM,UAAU,YAEf,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuM,KAAK,SAAZ,SACI,cAACjB,EAAD,MAEJ,cAAC,IAAD,CAAOiB,KAAK,WAAZ,SACI,cAAC5D,EAAD,MAEJ,cAAC,IAAD,CAAO4D,KAAK,WAAZ,SACI,cAACP,EAAD,MAEJ,cAAC,IAAD,CAAOO,KAAK,IAAZ,SACI,cAAC,IAAD,CAAUpM,GAAG,kBAGrB,cAACD,EAAD,O,UChCNsM,EAAcC,QACa,cAA7B7C,OAAOC,SAAS6C,UAEa,UAA7B9C,OAAOC,SAAS6C,UAEhB9C,OAAOC,SAAS6C,SAASC,MAAM,2DA6BnC,SAASC,EAAgBC,EAAOC,GAC5BC,UAAUC,cACLC,SAASJ,GACTK,MAAK,SAACC,GACHA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBG,QACbT,UAAUC,cAAcS,YAIxBC,QAAQC,IACJ,+GAGAb,GAAUA,EAAOc,UACjBd,EAAOc,SAAST,KAMpBO,QAAQC,IAAI,sCAERb,GAAUA,EAAOe,WACjBf,EAAOe,UAAUV,WAOxCW,OAAM,SAACC,GACJL,QAAQK,MAAM,4CAA6CA,MCjEvEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC9B,EAAD,MAEF+B,SAASC,eAAe,SDFnB,SAAkBtB,GACrB,GAA6C,kBAAmBC,UAAW,CAEvE,GADkB,IAAIsB,IAAI/B,eAAwB1C,OAAOC,SAASyE,MACpDC,SAAW3E,OAAOC,SAAS0E,OACrC,OAEJ3E,OAAO4E,iBAAiB,QAAQ,WAC5B,IAAM3B,EAAK,UAAMP,eAAN,sBACPE,IA2DhB,SAAiCK,EAAOC,GAEpC2B,MAAM5B,EAAO,CACT6B,QAAS,CAAE,iBAAkB,YAE5BxB,MAAK,SAACyB,GAEH,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEjB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,MAAK,SAACC,GAChCA,EAAa8B,aAAa/B,MAAK,WAC3BtD,OAAOC,SAASC,eAKxB8C,EAAgBC,EAAOC,MAG9BgB,OAAM,WACHJ,QAAQC,IAAI,oEAjFRuB,CAAwBrC,EAAOC,GAG/BC,UAAUC,cAAcgC,MAAM9B,MAAK,WAC/BQ,QAAQC,IACJ,+GAKRf,EAAgBC,EAAOC,OCfvCqC,K","file":"static/js/main.df7e6899.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/turtledot.9f70b9aa.svg\";","import React from 'react';\r\nimport turtledot from './turtledot.svg';\r\nimport './header.css';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <img src={turtledot} className='logo' alt='logo' />\r\n        </header>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './nav.css';\r\nimport {Plus, BookOpen} from 'react-feather';\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav>\r\n            <NavLink to='/Items' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <Plus size={16} />\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Items\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Arrange' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <span className='menu-icon-doit'>\r\n                    </span>\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Arrange\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Archive' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <BookOpen size={16} />\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Archive\r\n                </div>\r\n            </NavLink>\r\n            {/*<NavLink to='/Settings' className='menu-item' activeClassName='here'>*/}\r\n            {/*    <div className='menu-icon'>*/}\r\n            {/*        &#8230;*/}\r\n            {/*    </div>*/}\r\n            {/*    <div className='menu-text'>*/}\r\n            {/*        Settings*/}\r\n            {/*    </div>*/}\r\n            {/*</NavLink>*/}\r\n        </nav>\r\n    );\r\n}","export default function validateItem(item) {\r\n    if (item.text.length > 0 && item.text.length < 12 && item.number > 0) {\r\n        if (item.type && item.number < 8) return true;\r\n        if (!item.type && item.number < 100001) return true;\r\n    } else return false;\r\n}\r\n","export default function cutNumber(number) {\r\n    if (number > 99999) {\r\n        return '100k';\r\n    } else if (number > 9999) {\r\n        return number.toString().slice(0,2) + 'k';\r\n    } else if (number > 999) {\r\n        if (number % 1000 === 0) return number.toString().slice(0, 1) + 'k';\r\n        return number.toString().slice(0, 1) + '.' + number.toString().slice(1, 2) + 'k';\r\n    } else if (number % 1 !== 0) {\r\n        return Math.ceil(number);\r\n    } else return number;\r\n}\r\n","import React, {useState} from 'react';\r\nimport cutNumber from '../../functions/cutNumber';\r\nimport './cell.css';\r\n\r\nexport default function Cell(props) {\r\n\r\n    const [editing, switchEditing] = useState(false);\r\n    const [editedValue, changeEditedValue] = useState(props.day);\r\n\r\n    function validateTodo() {\r\n        if (editedValue > -2 && editedValue < 100001) {\r\n            props.onSaveTodo(props.id, props.index, editedValue);\r\n            switchEditing(false);\r\n        }\r\n    }\r\n\r\n    function checkKey(event) {\r\n        if (event.key === 'Enter') validateTodo();\r\n    }\r\n\r\n    function openModal(event) {\r\n        if (event.target.classList.contains('main-cell') || event.target.classList.contains('type-cell')) switchEditing(true);\r\n    }\r\n\r\n    return (\r\n        <td\r\n            data-id={props.id}\r\n            data-item={props.rowIndex}\r\n            data-day={props.index}\r\n            onClick={props.type ? props.onChangeDay : props.isThisWeek ? openModal : props.onChangeDay}\r\n            className={'main-cell week-spots' + (props.isThisWeek && props.today === props.index ? props.color : '')}>\r\n                <div\r\n                    className={props.type ?\r\n                        ('spot' + (props.day === 1 ? ' closed' : props.day === 0 ? ' open' : ''))\r\n                        :\r\n                        ('type-cell' + (props.day === 0 ? ' grey' : ''))}>\r\n                    {!props.type && props.day > 0 ? props.day : !props.type && props.day > -1 ? cutNumber(props.avgTodo) : ''}\r\n                </div>\r\n            {editing &&\r\n                <>\r\n                    <div\r\n                        onClick={validateTodo}\r\n                        className='number-modal-bg'\r\n                    >\r\n                    </div>\r\n                    <div className='number-modal'>\r\n                        <h3>\r\n                            {props.text}\r\n                        </h3>\r\n                        <h2>\r\n                            {props.dayOfWeek}\r\n                        </h2>\r\n                        <fieldset>\r\n                            <div>\r\n                                <label>\r\n                                    <input\r\n                                        type='radio'\r\n                                        name='numberValues'\r\n                                        checked={+editedValue === -1}\r\n                                        onChange={() => changeEditedValue(-1)}\r\n                                    />\r\n                                    not today\r\n                                </label>\r\n                            </div>\r\n                            <div>\r\n                                <label>\r\n                                    <input\r\n                                        type='radio'\r\n                                        name='numberValues'\r\n                                        checked={+editedValue === 0}\r\n                                        onChange={() => changeEditedValue(0)}\r\n                                    />\r\n                                    schedule for today\r\n                                </label>\r\n                            </div>\r\n                            <div>\r\n                                <label>\r\n                                    <input\r\n                                        type='radio'\r\n                                        name='numberValues'\r\n                                        value={editedValue}\r\n                                        checked={+editedValue > 0}\r\n                                        onChange={editedValue < 1 ? () => changeEditedValue(cutNumber(props.avgTodo)) : null}\r\n                                    />\r\n                                    number done today:\r\n                                </label>\r\n                            </div>\r\n                        </fieldset>\r\n                        <input\r\n                            type='number'\r\n                            min='-1'\r\n                            max='100000'\r\n                            value={editedValue}\r\n                            onFocus={editedValue < 1 ? () => changeEditedValue(cutNumber(props.avgTodo)) : null}\r\n                            onChange={event => changeEditedValue(+event.target.value)}\r\n                            onKeyDown={event => checkKey(event)}\r\n                        />\r\n                        <button\r\n                            onClick={validateTodo}\r\n                            className='save-todo'\r\n                        >\r\n                            save\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            }\r\n        </td>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Cell from '../Cell';\r\nimport cutNumber from '../../functions/cutNumber';\r\nimport './row.css';\r\nimport {ArrowUp, ArrowDown} from 'react-feather';\r\n\r\nexport default function Row(props) {\r\n\r\n    const [todo, editTodo] = useState([...props.todo]);\r\n    const [row, editRow] = useState({\r\n        currentTotal: 0,\r\n        avgTodo: 0,\r\n        tooHigh: false,\r\n        tooLow: false,\r\n        allDone: false,\r\n        cutNum: 0,\r\n        goalNum: 0,\r\n        originalDay: 0,\r\n        today: 0\r\n    });\r\n\r\n    useEffect(() => editTodo([...props.todo]), [props]);\r\n    useEffect(() => doNumbers(), [props]);\r\n\r\n    function doNumbers() {\r\n        let numberDoneAndToDo = [];\r\n        let numberToDo = [];\r\n        props.todo.forEach(day => {\r\n            if (day > -1) numberDoneAndToDo.push(+day);\r\n            if (day === 0) numberToDo.push(+day);\r\n        });\r\n        const currentTotal = numberDoneAndToDo.reduce((a, b) => a + b, 0);\r\n        const allDone = currentTotal >= +props.number;\r\n        const avgTodo = (+props.number - currentTotal) / numberToDo.length;\r\n        const tooHigh = numberDoneAndToDo.length > +props.number;\r\n        const tooLow = numberDoneAndToDo.length < +props.number;\r\n        const cutNum = cutNumber(+props.number);\r\n        const goalNum = cutNumber(+props.number - currentTotal);\r\n        const originalDay = new Date().getDay();\r\n        const today = originalDay === 0 ? 6 : originalDay - 1;\r\n        editRow({\r\n            currentTotal: currentTotal,\r\n            avgTodo: avgTodo,\r\n            tooHigh: tooHigh,\r\n            tooLow: tooLow,\r\n            allDone: allDone,\r\n            cutNum: cutNum,\r\n            goalNum: goalNum,\r\n            originalDay: originalDay,\r\n            today: today\r\n        });\r\n    }\r\n\r\n    return (\r\n        <tr\r\n            draggable={!props.archive}\r\n            id={props.id + props.weekBeginning}\r\n            data-index={props.index}\r\n            data-dragid={props.id}\r\n            data-dragweek={props.weekBeginning}\r\n            className={row.allDone ? 'allDone' : props.color}\r\n        >\r\n            <td\r\n                id={props.id}\r\n                className={'week-item left-column' + (props.shifting ? ' small' : '')}>\r\n                {!props.archive && props.deleting &&\r\n                    <button\r\n                        value={props.id}\r\n                        onClick={props.onRemoveItem}\r\n                        className='week-item-actions'>\r\n                        &mdash;\r\n                    </button>\r\n                }\r\n                {!props.archive && props.shifting &&\r\n                    <div>\r\n                        <button\r\n                            value={props.index}\r\n                            data-direction='up'\r\n                            onClick={props.onMoveItem}\r\n                            className='week-item-actions'>\r\n                            <ArrowUp size={10} />\r\n                        </button>\r\n                        <button\r\n                            value={props.index}\r\n                            data-direction='down'\r\n                            onClick={props.onMoveItem}\r\n                            className='week-item-actions'>\r\n                            <ArrowDown size={10} />\r\n                        </button>\r\n                    </div>\r\n                }\r\n                {props.text}\r\n            </td>\r\n            <td className={'main-cell week-item-number'\r\n                + (props.type && (row.tooHigh ? ' week-number-arrow-down' : row.tooLow ? ' week-number-arrow-up' : ''))}>\r\n                {cutNumber(row.allDone ? row.currentTotal : row.goalNum > -1 ? row.goalNum : props.number)}\r\n            </td>\r\n            {todo.map((day, i) =>\r\n                <Cell\r\n                    key={props.number + props.id + i}\r\n                    id={props.id}\r\n                    day={day}\r\n                    index={i}\r\n                    rowIndex={props.index}\r\n                    today={row.today}\r\n                    avgTodo={row.avgTodo > 0 ? row.avgTodo : null}\r\n                    type={props.type}\r\n                    color={props.color}\r\n                    isThisWeek={props.isThisWeek}\r\n                    weekBeginning={props.weekBeginning}\r\n                    dayOfWeek={!props.archive && props.days[i]}\r\n                    text={props.text}\r\n                    onSaveTodo={props.onSaveTodo}\r\n                    onChangeDay={props.onChangeDay}\r\n                />\r\n            )}\r\n        </tr>\r\n    );\r\n}\r\n","import sortColor from './sortColor';\r\n\r\nexport default function getStoredItems() {\r\n    if (localStorage.getItem('items')) {\r\n        return sortColor(JSON.parse(localStorage.getItem('items')));\r\n    } else return [];\r\n}\r\n","export default function sortColor(array) {\r\n    return array.sort((a, b) => (a.color > b.color) ? 1 : -1);\r\n}\r\n","export default function getStoredWeek(week) {\r\n    if (localStorage.getItem(week)) {\r\n        return JSON.parse(localStorage.getItem(week));\r\n    } else return {};\r\n}\r\n","export const colorsDays = ['color0', 'color1', 'color2', 'color3', 'color4', 'color5', 'color6', 'color7', 'color8', 'color9'];\r\n\r\nexport const days = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];\r\n","import React, {useEffect, useState} from 'react';\r\nimport Row from '../../Row';\r\nimport getStoredItems from '../../../functions/getStoredItems';\r\nimport getStoredWeek from '../../../functions/getStoredWeek';\r\nimport '../arrange.css';\r\nimport {days} from '../../../static/colorsDays';\r\nimport {Trash, Trash2, ArrowDown, X} from 'react-feather';\r\n\r\nexport default function ArrangeWeek(props) {\r\n\r\n    const [week, editWeek] = useState(getStoredWeek(props.weekBeginning));\r\n    const [unselected, editUnselected] = useState(getStoredItems());\r\n    const [selected, editSelected] = useState([]);\r\n    const [deleting, switchDeleting] = useState(false);\r\n    const [shifting, switchShifting] = useState(false);\r\n\r\n    useEffect(() => createWeek(), [week]);\r\n\r\n    async function createWeek() {\r\n        let createSelected = [];\r\n        let createUnselected = getStoredItems();\r\n        let newWeek = await getStoredWeek(props.weekBeginning);\r\n        if (newWeek.items) {\r\n            newWeek.items.forEach(item => {\r\n                let index = createUnselected.findIndex(uItem => uItem.id === item[0]);\r\n                if (index > -1) {\r\n                    let moveItem = createUnselected.splice(index, 1);\r\n                    moveItem[0].todo = item[1];\r\n                    createSelected.push(moveItem[0]);\r\n                }\r\n            });\r\n        }\r\n        editUnselected([...createUnselected]);\r\n        editSelected([...createSelected]);\r\n    }\r\n\r\n    function addItemToWeek(event) {\r\n        let newWeek = {...week};\r\n        if (newWeek.items === undefined) newWeek = {date: props.weekBeginning, items: []};\r\n        newWeek.items.push([event.target.value, [-1, -1, -1, -1, -1, -1, -1]]);\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function addAllItemsToWeek() {\r\n        let ids = [];\r\n        let newWeek = {...week};\r\n        unselected.forEach(item => ids.push(item.id));\r\n        if (newWeek.items === undefined) newWeek = {date: props.weekBeginning, items: []};\r\n        ids.forEach(id => newWeek.items.push([id, [-1, -1, -1, -1, -1, -1, -1]]));\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function removeItemFromWeek(event) {\r\n        let newWeek = {...week};\r\n        newWeek.items = newWeek.items.filter(needle => needle[0] !== event.target.value);\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function moveItemInWeek(event) {\r\n        let index = +event.currentTarget.value;\r\n        let newIndex;\r\n        let newWeek = JSON.parse(JSON.stringify(week));\r\n        if (event.currentTarget.dataset.direction === 'up') {\r\n            newIndex = index > 0 ? index - 1 : newWeek.items.length - 1;\r\n        } else {\r\n            newIndex = index < newWeek.items.length - 1 ? index + 1 : 0;\r\n        }\r\n        newWeek.items.splice(newIndex, 0, newWeek.items.splice(index, 1)[0]);\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function changeDay(event) {\r\n        let newWeek = {...week};\r\n        let index = newWeek.items.findIndex(item => item[0] === event.currentTarget.dataset.id);\r\n        let item = newWeek.items[index];\r\n        let day = event.currentTarget.dataset.day;\r\n        if (props.isThisWeek) {\r\n            item[1][day] = (item[1][day] === (-1) ? 0 : item[1][day] === 0 ? 1 : (-1));\r\n        } else {\r\n            item[1][day] = (item[1][day] > (-1) ? (-1) : 0);\r\n        }\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n        updateArchive(newWeek, index);\r\n    }\r\n\r\n    function saveTodo(id, day, value) {\r\n        let newWeek = {...week};\r\n        let index = newWeek.items.findIndex(item => item[0] === id);\r\n        let item = newWeek.items[index];\r\n        item[1][day] = value;\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n        updateArchive(newWeek, index);\r\n    }\r\n\r\n    function updateArchive(newWeek, i) {\r\n        if (props.isThisWeek) {\r\n            let archive = JSON.parse(localStorage.getItem('archive'));\r\n            let thisWeek = {\r\n                date: props.weekBeginning,\r\n                items: [...selected]\r\n            };\r\n            thisWeek.items[i].todo = newWeek.items[i][1];\r\n            if (archive) {\r\n                let index = archive.findIndex(week => week.date === thisWeek.date);\r\n                index > -1 ? archive[index] = thisWeek : archive.unshift(thisWeek);\r\n            } else {\r\n                archive = [];\r\n                archive.unshift(thisWeek);\r\n            }\r\n            localStorage.setItem('archive', JSON.stringify(archive));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='week'>\r\n            <div className='actionsPanel'>\r\n                <span>\r\n                    <input\r\n                        type='checkbox'\r\n                        id={'deleteItems' + props.weekBeginning}\r\n                        onChange={() => !shifting && switchDeleting(!deleting)}\r\n                    />\r\n                    <label htmlFor={'deleteItems' + props.weekBeginning}>\r\n                        {deleting ?\r\n                            <Trash2 size={16} />\r\n                            :\r\n                            <Trash size={16} />\r\n                        }\r\n                    </label>\r\n                </span>\r\n                <span>\r\n                    <input\r\n                        type='checkbox'\r\n                        id={'shiftItems' + props.weekBeginning}\r\n                        onChange={() => !deleting && switchShifting(!shifting)}\r\n                    />\r\n                    <label htmlFor={'shiftItems' + props.weekBeginning}>\r\n                        {shifting ?\r\n                            <X size={16} />\r\n                            :\r\n                            <ArrowDown size={16} />\r\n                        }\r\n                    </label>\r\n                </span>\r\n            </div>\r\n            <section>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td className='week-date left-column'>\r\n                            {props.weekBeginning}\r\n                        </td>\r\n                        <td className='week-date'>\r\n                        </td>\r\n                        {props.days.map((day, i) =>\r\n                            <td\r\n                                key={day + i + props.weekBeginning}\r\n                                className='day'>\r\n                                {day.substring(0,1)}\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody data-dragweek={props.weekBeginning}>\r\n                        {selected.map((item, i) =>\r\n                            <Row\r\n                                key={item.id + props.weekBeginning}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                isThisWeek={props.isThisWeek}\r\n                                weekBeginning={props.weekBeginning}\r\n                                days={days}\r\n                                deleting={deleting}\r\n                                shifting={shifting}\r\n                                onRemoveItem={removeItemFromWeek}\r\n                                onMoveItem={moveItemInWeek}\r\n                                onChangeDay={changeDay}\r\n                                onSaveTodo={saveTodo}\r\n                            />\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n            {unselected.length > 0 &&\r\n                <div className='edit-box'>\r\n                    <button\r\n                        className='addAllItems'\r\n                        onClick={addAllItemsToWeek}\r\n                    >\r\n                        add all items\r\n                    </button>\r\n                    <div className='items-list'>\r\n                        {unselected.map(item =>\r\n                            <button\r\n                                key={item.id + props.weekBeginning + 'u'}\r\n                                value={item.id}\r\n                                data-week={props.weekBeginning}\r\n                                className={'items-list-item ' + item.color}\r\n                                onClick={addItemToWeek}\r\n                            >\r\n                                {item.text}\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport ArrangeWeek from './ArrangeWeek';\r\nimport {days} from '../../static/colorsDays';\r\nimport './arrange.css';\r\n\r\nexport default function Arrange() {\r\n\r\n    const [dateToday, updateDateToday] = useState(new Date());\r\n    const [thisWeekBeginning, updateThisWeekBeginning] = useState(getWeekBeginning());\r\n    const [nextWeekBeginning, updateNextWeekBeginning] = useState(getWeekBeginning(7));\r\n\r\n    useEffect(() => updateThisWeekBeginning(getWeekBeginning()), [dateToday]);\r\n    useEffect(() => updateNextWeekBeginning(getWeekBeginning(7)), [dateToday]);\r\n\r\n    setInterval(() => {\r\n        const newDate = new Date();\r\n        if (newDate.getDay() === 1 && dateToday.getDay() === 0) {\r\n            window.location.reload();\r\n        } else if (newDate.getDate() !== dateToday.getDate()) {\r\n            updateDateToday(newDate);\r\n        }\r\n    }, 60000);\r\n\r\n    function getWeekBeginning(addWeek = 0) {\r\n        let newDate = new Date(),\r\n            day = newDate.getDay();\r\n        function padZero(n) { return n < 10 ? '0' + n : n }\r\n        if (day > 1) {\r\n            newDate.setDate(newDate.getDate() - day + 1 + addWeek);\r\n        } else if (day === 0) {\r\n            newDate.setDate(newDate.getDate() - 6 + addWeek);\r\n        } else {\r\n            newDate.setDate(newDate.getDate() + addWeek);\r\n        }\r\n        return newDate.getFullYear() + '/' + padZero(newDate.getMonth() + 1) + '/' + padZero(newDate.getDate());\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <h1>\r\n                This Week\r\n            </h1>\r\n            <ArrangeWeek\r\n                key={'thisWeek'}\r\n                weekName={'This Week'}\r\n                days={days}\r\n                weekBeginning={thisWeekBeginning}\r\n                isThisWeek={true}\r\n            />\r\n            <h2>\r\n                Next Week\r\n            </h2>\r\n            <ArrangeWeek\r\n                key={'nextWeek'}\r\n                weekName={'Next Week'}\r\n                days={days}\r\n                weekBeginning={nextWeekBeginning}\r\n                thisWeekBeginning={thisWeekBeginning}\r\n            />\r\n        </main>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport validateItem from '../../../functions/validateItem';\r\nimport '../../Arrange/';\r\nimport {X, Check} from 'react-feather';\r\n\r\nexport default function UpdateItem(props) {\r\n\r\n    const itemToPlay = props.item ? {...props.item} :\r\n        {\r\n            id: '',\r\n            text: '',\r\n            type: true,\r\n            number: 1,\r\n            color: 'color0'\r\n        };\r\n\r\n    const [item, editItem] = useState(itemToPlay);\r\n\r\n    function checkKey(event) {\r\n        if (event.key === 'Enter') updateItem();\r\n    }\r\n\r\n    function handleInput (event) {\r\n        let newItem = {...item};\r\n        newItem[event.target.name] = event.target.value;\r\n        editItem({...newItem});\r\n    }\r\n\r\n    function switchType() {\r\n        let newItem = {...item};\r\n        newItem.type = !newItem.type;\r\n        editItem({...newItem});\r\n    }\r\n\r\n    function updateItem() {\r\n        if (validateItem(item)) {\r\n            props.onUpdateItem({...item});\r\n            editItem({\r\n                id: '',\r\n                text: '',\r\n                type: true,\r\n                number: 1,\r\n                color: 'color0'\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className='item'>\r\n                <input\r\n                    type='text'\r\n                    name='text'\r\n                    value={item.text}\r\n                    onChange={handleInput}\r\n                    onKeyDown={event => checkKey(event)}\r\n                    className='text'\r\n                />\r\n                <button\r\n                    name='type'\r\n                    value={item.type}\r\n                    onClick={switchType}\r\n                    className='type'>\r\n                    {item.type ?\r\n                        <div className='day spot open'>\r\n                        </div>\r\n                        :\r\n                        '#'\r\n                    }\r\n                </button>\r\n                <input\r\n                    type='number'\r\n                    name='number'\r\n                    min='1'\r\n                    max='99999'\r\n                    value={item.number}\r\n                    onChange={handleInput}\r\n                    onKeyDown={event => checkKey(event)}\r\n                    className='number'\r\n                />\r\n                <button\r\n                    className={'color ' + item.color}>\r\n                </button>\r\n                <button\r\n                    onClick={props.onCancelUpdate}\r\n                    className='plus-sign'>\r\n                    <X size={16} />\r\n                </button>\r\n            </div>\r\n            <div className='edit-box'>\r\n                <div className='palette'>\r\n                    {props.colors.map(color =>\r\n                        <button\r\n                            key={color}\r\n                            name='color'\r\n                            value={color}\r\n                            onClick={handleInput}\r\n                            className={'palette-square ' + color}>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <div className='edit-box-buttons'>\r\n                    <button\r\n                        onClick={updateItem}\r\n                        className='edit-complete'>\r\n                        <Check size={16} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport UpdateItem from '../UpdateItem';\r\nimport cutNumber from '../../../functions/cutNumber';\r\nimport validateItem from '../../../functions/validateItem';\r\nimport {X, Hash} from 'react-feather';\r\n\r\nexport default function Item(props) {\r\n\r\n    const [item, editItem] = useState(props.item);\r\n    const [editing, switchEditing] = useState(false);\r\n    const [inUse, switchInUse] = useState(false);\r\n\r\n    useEffect(() => {\r\n        checkInUse();\r\n    });\r\n\r\n    function startEdit() {\r\n        switchEditing(true);\r\n        props.onCancelNewItem();\r\n    }\r\n\r\n    function updateItem(data) {\r\n        if (validateItem(data)) {\r\n            let storedItems = JSON.parse(localStorage.getItem('items'));\r\n            let edited = storedItems.findIndex(item => item.id === data.id);\r\n            storedItems[edited] = data;\r\n            localStorage.setItem('items', JSON.stringify(storedItems));\r\n            editItem({...data});\r\n            switchEditing(false);\r\n        }\r\n    }\r\n\r\n    function checkInUse() {\r\n        if (localStorage.getItem('weeks')) {\r\n            const weeks = JSON.parse(localStorage.getItem('weeks'));\r\n            weeks.forEach(week => {\r\n                if (week.items.find((item) => item[0] === props.item.id)) switchInUse(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editing && !props.currentlyAdding ?\r\n                <UpdateItem\r\n                    item={item}\r\n                    colors={props.colors}\r\n                    onUpdateItem={updateItem}\r\n                    onCancelUpdate={() => switchEditing(false)}\r\n                />\r\n                :\r\n                <div className='item'>\r\n                    <div\r\n                        onClick={startEdit}\r\n                        className='text'>\r\n                        {item.text}\r\n                    </div>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className='type'>\r\n                        {item.type ?\r\n                            <div className='day spot open'>\r\n                            </div>\r\n                            :\r\n                            <Hash size={14} />\r\n                        }\r\n                    </button>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className='number'>\r\n                        {cutNumber(item.number)}\r\n                    </button>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className={'color ' + item.color}>\r\n                    </button>\r\n                    <button\r\n                        value={item.id}\r\n                        disabled={inUse}\r\n                        onClick={props.onDeleteItem}\r\n                        className='plus-sign'>\r\n                        <X size={16} />\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Item from './Item';\r\nimport UpdateItem from './UpdateItem';\r\nimport getStoredItems from '../../functions/getStoredItems';\r\nimport {colorsDays} from '../../static/colorsDays';\r\nimport './items.css';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {Plus} from 'react-feather';\r\n\r\nexport default function Items() {\r\n\r\n    const [items, editItems] = useState(getStoredItems());\r\n    const [adding, switchAdding] = useState(false);\r\n\r\n    function addItem(data) {\r\n        let item = {\r\n            id: uuidv4(),\r\n            text: data.text,\r\n            type: data.type,\r\n            number: data.number,\r\n            color: data.color\r\n        };\r\n        let newItems = [...items];\r\n        newItems.push(item);\r\n        localStorage.setItem('items', JSON.stringify(newItems));\r\n        editItems([...newItems]);\r\n    }\r\n\r\n    function deleteItem(event) {\r\n        if (window.confirm('Really delete?')) {\r\n            let newItems = [...items];\r\n            let filtered = newItems.filter(item => item.id !== event.currentTarget.value);\r\n            localStorage.setItem('items', JSON.stringify(filtered));\r\n            editItems([...filtered]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main id='items'>\r\n            <h1>\r\n                Items\r\n            </h1>\r\n            {items.map(item =>\r\n                <Item\r\n                    key={item.id}\r\n                    item={item}\r\n                    colors={colorsDays}\r\n                    currentlyAdding={adding}\r\n                    onDeleteItem={deleteItem}\r\n                    onCancelNewItem={() => switchAdding(false)}\r\n                />\r\n            )}\r\n            {adding ?\r\n                <UpdateItem\r\n                    colors={colorsDays}\r\n                    onUpdateItem={addItem}\r\n                    onCancelUpdate={() => switchAdding(false)}\r\n                />\r\n                :\r\n                <button\r\n                    onClick={() => switchAdding(true)}\r\n                    className='plus-sign add'>\r\n                    <Plus size={18} />\r\n                </button>\r\n            }\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Row from '../../Row';\r\nimport '../../Arrange/arrange.css';\r\n\r\nexport default function ArchiveWeek(props) {\r\n    return (\r\n        <div className='week'>\r\n            <section>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td className='week-date left-column'>\r\n                            {props.week.date}\r\n                        </td>\r\n                        <td className='week-date'>\r\n                        </td>\r\n                        {props.days.map((day, i) =>\r\n                            <td\r\n                                key={day + i + props.week.date}\r\n                                className='day'>\r\n                                {day.substring(0,1)}\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.week.items.map((item, i) =>\r\n                            <Row\r\n                                key={item.id + props.week.date}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                weekBeginning={props.week.date}\r\n                                archive={true}\r\n                                onChangeDay={null}\r\n                                onRemoveItem={null}\r\n                            />\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ArchiveWeek from './ArchiveWeek';\r\nimport {days} from '../../static/colorsDays';\r\nimport '../../components/Arrange/arrange.css';\r\n\r\nexport default function Archive(props) {\r\n\r\n    const archive = getArchive();\r\n\r\n    function getArchive() {\r\n        if (localStorage.getItem('archive')) {\r\n            return JSON.parse(localStorage.getItem('archive'));\r\n        } else return [];\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <h1>\r\n                Archive\r\n            </h1>\r\n            {archive.map((week, i) =>\r\n                <ArchiveWeek\r\n                    key={'archiveWeek' + i}\r\n                    week={week}\r\n                    days={days}\r\n                />\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport './information.css';\r\nimport {Info, Plus, Check, X} from 'react-feather';\r\n\r\nexport default function Information() {\r\n\r\n    const [infoBox, toggleInfoBox] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Info size={16} className='info' onClick={() => toggleInfoBox(!infoBox)} />\r\n            {infoBox &&\r\n                <div className='info-box'>\r\n                    <h2>ITEMS</h2>\r\n                    <ul>\r\n                        <li>touch the <Plus size={16} /> to add an item</li>\r\n                        <li>enter the item's name</li>\r\n                        <li>choose between dot (one per day) or number (up to 100,000 per week)</li>\r\n                        <li>enter a weekly goal number for the item (max. 7 for dots; max. 100,000 for numbers)</li>\r\n                        <li>choose a colour for the item (similar items can be visually grouped)</li>\r\n                        <li>touch <Check size={16} /> to save, or <X size={16} /> to cancel</li>\r\n                        <li>touch an item to edit it</li>\r\n                    </ul>\r\n                    <h2>ARRANGE</h2>\r\n                    <ul>\r\n                        <li>items are listed for this week &amp; next week</li>\r\n                        <li>touch an item to add it to the week</li>\r\n                        <li>for dot items</li>\r\n                        <li className='indent'>touch once on a given day to set it as <i>todo</i> for that day</li>\r\n                        <li className='indent'>touch again to set it as <i>done</i> for that day</li>\r\n                        <li>for number items</li>\r\n                        <li className='indent'>when you've completed a number (e.g. 5,000 steps), touch the relevant square twice to enter it</li>\r\n                        <li className='indent'>the number to the left of Monday tells you how many left to do that week</li>\r\n                        <li>when you've hit the weekly target for an item, the row will turn black\r\n                        </li>\r\n                    </ul>\r\n                    <h2>ARCHIVE</h2>\r\n                    <ul>\r\n                        <li>lists previous weeks</li>\r\n                        <li>not editable</li>\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Redirect, BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Nav from './components/Nav';\r\nimport Items from './components/Items';\r\nimport Arrange from './components/Arrange';\r\nimport Archive from './components/Archive';\r\nimport Information from './components/Information';\r\nimport './app.css';\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Header />\r\n            <Information />\r\n            <div className='bgPanel'>\r\n            </div>\r\n            <Switch>\r\n                <Route path='/Items'>\r\n                    <Items />\r\n                </Route>\r\n                <Route path='/Arrange'>\r\n                    <Arrange />\r\n                </Route>\r\n                <Route path='/Archive'>\r\n                    <Archive />\r\n                </Route>\r\n                <Route path='/'>\r\n                    <Redirect to='/Arrange' />\r\n                </Route>\r\n            </Switch>\r\n            <Nav />\r\n        </Router>\r\n    );\r\n}\r\n","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA.'\r\n                            );\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}