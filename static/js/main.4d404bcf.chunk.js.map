{"version":3,"sources":["components/Modal/ModalHeader/index.js","components/Modal/index.js","components/Nav/index.js","functions/validateItem.js","functions/cutNumber.js","components/Arrange/ArrangeWeek/Row/Cell/NumberModal/index.js","static/colorsDays.js","components/Arrange/ArrangeWeek/Row/Cell/index.js","components/Arrange/ArrangeWeek/Row/index.js","components/Arrange/ArrangeWeek/AddItems/index.js","components/Arrange/ArrangeWeek/ActionsPanel/index.js","components/Arrange/ArrangeWeek/NotesModal/index.js","components/Buttons/index.js","functions/getStoredItems.js","functions/sortColor.js","functions/getStoredWeek.js","components/Arrange/ArrangeWeek/index.js","components/Arrange/index.js","components/Items/UpdateItem/index.js","components/Items/Item/index.js","components/Items/index.js","components/Archive/ArchiveWeek/index.js","components/Archive/index.js","components/Information/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["ModalHeader","props","isCurrent","isThisWeek","today","index","checkCurrent","className","title","showDay","thisDay","isArchive","Modal","useState","show","switchShow","useEffect","setTimeout","name","onClick","onToggleModal","tabIndex","onKeyDown","event","key","target","nodeName","preventDefault","modal","Nav","to","activeClassName","size","validateItem","item","text","length","number","type","cutNumber","toString","slice","Math","ceil","NumberModal","day","currentValue","editCurrentValue","avgTodo","inputNumber","editInputNumber","validateTodo","onUpdateTodo","doEstimate","doChange","id","dayOfWeek","weekBeginning","min","max","value","onFocus","onChange","checkEnter","colorsDays","days","touchMax","pos","neg","touch","initial","X","Y","move","final","Cell","editingNumber","switchEditingNumber","updateTodo","onSaveTodo","checkVerticalLimit","data-id","data-item","rowIndex","data-day","color","onChangeDay","classList","contains","onTouchStart","e","touches","clientX","clientY","onTouchMove","onTouchEnd","t","v","Row","todo","editTodo","currentTotal","tooHigh","tooLow","allDone","cutNum","goalNum","originalDay","row","editRow","numberDoneAndToDo","numberToDo","forEach","push","reduce","a","b","doNumbers","draggable","archive","shifting","data-index","data-dragid","data-dragweek","deleting","onRemoveItem","data-direction","onMoveItem","map","i","AddItems","addOne","onAddItemToWeek","onAddAllItemsToWeek","unselected","data-week","ActionsPanel","onSwitchDeleting","htmlFor","showShiftItems","onSwitchShifting","NotesModal","note","editNote","maxLength","onInput","onSaveNote","AddBtn","switchAdding","getStoredItems","localStorage","getItem","JSON","parse","sort","getStoredWeek","week","notes","ArrangeWeek","editWeek","editUnselected","selected","editSelected","switchDeleting","switchShifting","addingItems","switchAddingItems","editingNotes","switchEditingNotes","createSelected","createUnselected","newWeek","items","findIndex","uItem","moveItem","splice","saveItem","setItem","stringify","removeItemFromWeek","filter","needle","moveItemInWeek","newIndex","currentTarget","dataset","direction","changeDay","updateArchive","saveTodo","saveNote","thisWeek","date","hasNotes","unshift","createWeek","weekName","substring","ids","undefined","Arrange","Date","dateToday","updateDateToday","getWeekBeginning","thisWeekBeginning","updateThisWeekBeginning","nextWeekBeginning","updateNextWeekBeginning","getDay","ogDayToday","updateOgDayToday","dayToday","updateDayToday","addWeek","newDate","padZero","n","setDate","getDate","getFullYear","getMonth","setInterval","window","location","reload","UpdateItem","itemToPlay","editItem","checkKey","updateItem","handleInput","newItem","onUpdateItem","onCancelUpdate","colors","Item","editing","switchEditing","inUse","switchInUse","startEdit","onCancelNewItem","find","checkInUse","currentlyAdding","data","storedItems","edited","disabled","onDeleteItem","Items","editItems","adding","deleteItem","confirm","filtered","uuidv4","newItems","ArchiveWeek","notesOpen","switchNotesOpen","Archive","Information","App","infoBox","toggleInfoBox","basename","process","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.4d404bcf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './modalHeader.css';\r\n\r\nexport default function ModalHeader(props) {\r\n\r\n\tconst isCurrent = checkCurrent();\r\n\r\n\tfunction checkCurrent() {\r\n\t\tif (props.isThisWeek) {\r\n\t\t\tswitch (props.index) {\r\n\t\t\t\tcase props.today:\r\n\t\t\t\t\treturn 'today';\r\n\t\t\t\tcase props.today - 1:\r\n\t\t\t\t\treturn 'yesterday';\r\n\t\t\t\tcase props.today + 1:\r\n\t\t\t\t\treturn 'tomorrow';\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn props.isThisWeek ? 'this week' : 'next week';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (props.today === 6 && props.index === 0) {\r\n\t\t\t\treturn 'tomorrow';\r\n\t\t\t} else {\r\n\t\t\t\treturn props.isThisWeek ? 'this week' : 'next week';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName='modal-header'\r\n\t\t>\r\n\t\t\t{props.title &&\r\n\t\t\t\t<h2>\r\n\t\t\t\t\t{props.title}\r\n\t\t\t\t</h2>\r\n\t\t\t}\r\n\r\n\t\t\t{props.showDay &&\r\n\t\t\t\t<div className='day-name'>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName='this-day'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{props.thisDay}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t{isCurrent && !props.isArchive &&\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName='is-current'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{isCurrent}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport ModalHeader from './ModalHeader';\r\n\r\nexport default function Modal(props) {\r\n\r\n\tconst [show, switchShow] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => switchShow(true), 10);\r\n\t}, []);\r\n\r\n\tfunction checkBackspace(event) {\r\n\t\tif ((event.key === 'Backspace' && (event.target.nodeName !== 'INPUT' && event.target.nodeName !== 'TEXTAREA')) || event.key === 'Escape') {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tprops.onToggleModal(false);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tclassName={props.name + '-modal-bg modal-bg' + (show ? ' show' : '')}\r\n\t\t\t\tonClick={() => props.onToggleModal(false)}\r\n\t\t\t>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName={props.name + '-modal modal' + (show ? ' show' : '')}\r\n\t\t\t\ttabIndex='0'\r\n\t\t\t\tonKeyDown={checkBackspace}\r\n\t\t\t>\r\n\t\t\t\t<ModalHeader\r\n\t\t\t\t\tindex={props.index}\r\n\t\t\t\t\tshowDay={props.showDay}\r\n\t\t\t\t\ttoday={props.today}\r\n\t\t\t\t\tthisDay={props.thisDay}\r\n\t\t\t\t\tisThisWeek={props.isThisWeek}\r\n\t\t\t\t\tisArchive={props.isArchive}\r\n\t\t\t\t\ttitle={props.title}\r\n\t\t\t\t/>\r\n\t\t\t\t{props.modal}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Plus, BookOpen} from 'react-feather';\r\nimport './nav.css';\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav>\r\n            <NavLink to='/Items' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <Plus size={16} />\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Items\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Arrange' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <span className='menu-icon-doit'>\r\n                    </span>\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Arrange\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Archive' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <BookOpen size={16} />\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Archive\r\n                </div>\r\n            </NavLink>\r\n        </nav>\r\n    );\r\n}","export default function validateItem(item) {\r\n    if (item.text.length > 0 && item.text.length < 12 && item.number > 0) {\r\n        if (item.type && item.number < 8) return true;\r\n        if (!item.type && item.number < 100001) return true;\r\n    } else return false;\r\n}\r\n","export default function cutNumber(number) {\r\n    if (number > 99999) {\r\n        return '100k';\r\n    } else if (number > 9999) {\r\n        return number.toString().slice(0,2) + 'k';\r\n    } else if (number > 999) {\r\n        if (number % 1000 === 0) return number.toString().slice(0, 1) + 'k';\r\n        return number.toString().slice(0, 1) + '.' + number.toString().slice(1, 2) + 'k';\r\n    } else if (number % 1 !== 0) {\r\n        return Math.ceil(number);\r\n    } else return number;\r\n}\r\n","import React, { useState } from 'react';\r\nimport cutNumber from '../../../../../../functions/cutNumber';\r\nimport { Check } from 'react-feather';\r\nimport './numberModal.css';\r\n\r\nexport default function NumberModal(props) {\r\n\r\n    const [currentValue, editCurrentValue] = useState(props.day);\r\n    const [inputNumber, editInputNumber] = useState(props.day > 0 ? props.day : cutNumber(props.avgTodo));\r\n\r\n    function validateTodo() {\r\n        if (currentValue > -2 && currentValue < 100001) {\r\n            props.onUpdateTodo(currentValue);\r\n        }\r\n        props.onToggleModal(false);\r\n    }\r\n\r\n    function checkEnter(event) {\r\n        if (event.key === 'Enter') validateTodo();\r\n    }\r\n\r\n    function doEstimate() {\r\n        if (inputNumber > 0) {\r\n            editCurrentValue(inputNumber);\r\n        } else if (props.avgTodo > 0) {\r\n            doChange(cutNumber(props.avgTodo));\r\n        } else {\r\n            doChange(1);\r\n        }\r\n    }\r\n\r\n    function doChange(number) {\r\n        editInputNumber(number);\r\n        editCurrentValue(number);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='options'>\r\n                <div\r\n                    className={currentValue === -1 ? 'selected' : ''}\r\n                    onClick={() => editCurrentValue(-1)}\r\n                >\r\n                    not today\r\n                </div>\r\n                <div\r\n                    className={currentValue === 0 ? 'selected' : ''}\r\n                    onClick={() => editCurrentValue(0)}\r\n                >\r\n                    schedule for today\r\n                </div>\r\n                <div\r\n                    className={currentValue > 0 ? 'selected' : ''}\r\n                    onClick={doEstimate}\r\n                >\r\n                    number done today\r\n                    <input\r\n                        id={props.dayOfWeek + props.weekBeginning + props.id + 'inputNumber'}\r\n                        type='number'\r\n                        min='-1'\r\n                        max='100000'\r\n                        value={inputNumber}\r\n                        onFocus={doEstimate}\r\n                        onChange={event => doChange(+event.target.value)}\r\n                        onKeyDown={event => checkEnter(event)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='actions-panel'>\r\n                <button\r\n                    onClick={validateTodo}\r\n                    className='save'\r\n                >\r\n                    <Check size={16} />\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","export const colorsDays = ['color0', 'color1', 'color2', 'color3', 'color4', 'color5', 'color6', 'color7', 'color8', 'color9'];\r\n\r\nexport const days = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];\r\n","import React, { useState } from 'react';\r\nimport Modal from '../../../../Modal';\r\nimport NumberModal from './NumberModal';\r\nimport cutNumber from '../../../../../functions/cutNumber';\r\nimport { days } from '../../../../../static/colorsDays';\r\nimport './cell.css';\r\nimport '../../../../Modal/modal.css';\r\n\r\nconst touchMax = {\r\n    max: {\r\n        pos: 12, neg: -12\r\n    },\r\n    limit: {\r\n        pos: 10, neg: -10\r\n    }\r\n}\r\n\r\nconst touch = {\r\n    initial: {\r\n        X: 0, Y: 0\r\n    },\r\n    move: {\r\n        X: 0, Y: 0\r\n    },\r\n    final: {\r\n        X: 0, Y: 0\r\n    }\r\n}\r\n\r\nexport default function Cell(props) {\r\n\r\n    const [editingNumber, switchEditingNumber] = useState(false);\r\n    const avgTodo = props.avgTodo > 0 ? cutNumber(props.avgTodo) : '';\r\n\r\n    function openModal(event) {\r\n        if (event.target.classList.contains('main-cell') || event.target.classList.contains('type-cell')) switchEditingNumber(true);\r\n    }\r\n\r\n    function updateTodo(value) {\r\n        props.onSaveTodo(props.id, props.index, value);\r\n    }\r\n\r\n    function startTouch(e) {\r\n        touch.initial.X = e.touches[0].clientX;\r\n        touch.initial.Y = e.touches[0].clientY;\r\n    }\r\n\r\n    function moveTouch(e) {\r\n        if (touch.initial.X === 0 && touch.initial.Y === 0) return;\r\n        touch.move.X = e.touches[0].clientX;\r\n        touch.final.X = touch.initial.X - touch.move.X;\r\n        touch.move.Y = e.touches[0].clientY;\r\n        touch.final.Y = touch.initial.Y - touch.move.Y;\r\n    }\r\n\r\n    function endTouch() {\r\n        if (touch.final.X > touchMax.max.pos && checkVerticalLimit()) {\r\n            updateTodo(-1);\r\n        } else if (touch.final.X < touchMax.max.neg && checkVerticalLimit()) {\r\n            updateTodo(1);\r\n        }\r\n        for (const t in touch) {\r\n            for (let v in touch[t]) {\r\n                touch[t][v] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkVerticalLimit() {\r\n        return touch.final.Y < touchMax.limit.pos && touch.final.Y > touchMax.limit.neg;\r\n    }\r\n\r\n    return (\r\n        <td\r\n            data-id={props.id}\r\n            data-item={props.rowIndex}\r\n            data-day={props.index}\r\n            className={'main-cell week-spots' + (props.isThisWeek && props.today === props.index ? props.color : '')}\r\n            onClick={props.type ? props.onChangeDay : props.isThisWeek ? openModal : props.onChangeDay}\r\n            onTouchStart={props.type && props.isThisWeek ? startTouch : null}\r\n            onTouchMove={props.type && props.isThisWeek ? moveTouch : null}\r\n            onTouchEnd={props.type && props.isThisWeek ? endTouch : null}\r\n        >\r\n            <div\r\n                className={props.type ?\r\n                    ('spot' + (props.day === 1 ? ' closed' : props.day === 0 ? ' open' : ''))\r\n                    :\r\n                    ('type-cell' + (props.day === 0 ? ' grey' : ''))}\r\n            >\r\n                {!props.type && props.day > 0 ? props.day : !props.type && props.day > -1 ? avgTodo : ''}\r\n            </div>\r\n            {editingNumber &&\r\n                <Modal\r\n                    index={props.index}\r\n                    showDay={true}\r\n                    today={props.today}\r\n                    thisDay={days[props.index]}\r\n                    isThisWeek={props.isThisWeek}\r\n                    name={'number'}\r\n                    title={'Number'}\r\n                    onToggleModal={switchEditingNumber}\r\n                    modal={\r\n                        <NumberModal\r\n                            id={props.id}\r\n                            day={props.day}\r\n                            avgTodo={props.avgTodo}\r\n                            text={props.text}\r\n                            dayOfWeek={props.dayOfWeek}\r\n                            weekBeginning={props.weekBeginning}\r\n                            onUpdateTodo={updateTodo}\r\n                            onToggleModal={switchEditingNumber}\r\n                        />\r\n                    }\r\n                />\r\n            }\r\n        </td>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Cell from './Cell';\r\nimport cutNumber from '../../../../functions/cutNumber';\r\nimport {ArrowUp, ArrowDown} from 'react-feather';\r\nimport './row.css';\r\n\r\nexport default function Row(props) {\r\n\r\n    const [todo, editTodo] = useState([...props.todo]);\r\n    const [row, editRow] = useState({\r\n        currentTotal: 0,\r\n        avgTodo: 0,\r\n        tooHigh: false,\r\n        tooLow: false,\r\n        allDone: false,\r\n        cutNum: 0,\r\n        goalNum: 0,\r\n        originalDay: 0,\r\n        today: 0\r\n    });\r\n\r\n    useEffect(() => editTodo([...props.todo]), [props]);\r\n    useEffect(() => doNumbers(), [props]);\r\n\r\n    function doNumbers() {\r\n        let numberDoneAndToDo = [];\r\n        let numberToDo = [];\r\n        props.todo.forEach(day => {\r\n            if (day > -1) numberDoneAndToDo.push(+day);\r\n            if (day === 0) numberToDo.push(+day);\r\n        });\r\n        const currentTotal = numberDoneAndToDo.reduce((a, b) => a + b, 0);\r\n        const allDone = currentTotal >= +props.number;\r\n        const avgTodo = numberToDo.length > 0 ? (+props.number - currentTotal) / numberToDo.length : 0;\r\n        const tooHigh = numberDoneAndToDo.length > +props.number;\r\n        const tooLow = numberDoneAndToDo.length < +props.number;\r\n        const cutNum = cutNumber(+props.number);\r\n        const goalNum = cutNumber(+props.number - currentTotal);\r\n        editRow({\r\n            currentTotal: currentTotal,\r\n            avgTodo: avgTodo,\r\n            tooHigh: tooHigh,\r\n            tooLow: tooLow,\r\n            allDone: allDone,\r\n            cutNum: cutNum,\r\n            goalNum: goalNum\r\n        });\r\n    }\r\n\r\n    return (\r\n        <tr\r\n            draggable={!props.archive && props.shifting}\r\n            id={props.id + props.weekBeginning}\r\n            data-index={props.index}\r\n            data-dragid={props.id}\r\n            data-dragweek={props.weekBeginning}\r\n            className={row.allDone ? 'all-done' : props.color}\r\n        >\r\n            <td\r\n                id={props.id}\r\n                className={'week-item left-column' + (props.deleting || props.shifting ? ' small' : '')}>\r\n                {!props.archive && props.deleting &&\r\n                    <button\r\n                        value={props.id}\r\n                        onClick={props.onRemoveItem}\r\n                        className='week-item-actions'>\r\n                        &mdash;\r\n                    </button>\r\n                }\r\n                {!props.archive && props.shifting &&\r\n                <div>\r\n                    <button\r\n                        value={props.index}\r\n                        data-direction='up'\r\n                        onClick={props.onMoveItem}\r\n                        className='week-item-actions'>\r\n                        <ArrowUp size={10} />\r\n                    </button>\r\n                    <button\r\n                        value={props.index}\r\n                        data-direction='down'\r\n                        onClick={props.onMoveItem}\r\n                        className='week-item-actions'>\r\n                        <ArrowDown size={10} />\r\n                    </button>\r\n                </div>\r\n                }\r\n                {props.text}\r\n            </td>\r\n            <td\r\n                className={'main-cell week-item-number' + ((props.type && !props.archive) ? (row.tooHigh ? ' week-number-arrow-down' : row.tooLow ? ' week-number-arrow-up' : '') : '')}\r\n            >\r\n                {cutNumber(row.allDone ? row.currentTotal : row.goalNum > -1 ? row.goalNum : props.number)}\r\n            </td>\r\n            {todo.map((day, i) =>\r\n                <Cell\r\n                    key={props.number + props.id + i}\r\n                    id={props.id}\r\n                    day={day}\r\n                    index={i}\r\n                    rowIndex={props.index}\r\n                    today={props.today}\r\n                    avgTodo={row.avgTodo}\r\n                    type={props.type}\r\n                    color={props.color}\r\n                    isThisWeek={props.isThisWeek}\r\n                    weekBeginning={props.weekBeginning}\r\n                    dayOfWeek={!props.archive && props.days[i]}\r\n                    text={props.text}\r\n                    onSaveTodo={props.onSaveTodo}\r\n                    onChangeDay={props.onChangeDay}\r\n                />\r\n            )}\r\n        </tr>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './addItems.css';\r\n\r\nexport default function AddItems(props) {\r\n\r\n\tfunction addAll() {\r\n\t\tprops.onAddAllItemsToWeek();\r\n\t\tprops.onToggleModal(false);\r\n\t}\r\n\r\n\tfunction addOne(event) {\r\n\t\tprops.onAddItemToWeek(event);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button\r\n\t\t\t\tclassName='add-all-items'\r\n\t\t\t\tonClick={addAll}\r\n\t\t\t>\r\n\t\t\t\tadd all items\r\n\t\t\t</button>\r\n\r\n\t\t\t<div className='items-list'>\r\n\t\t\t\t{props.unselected.map(item =>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tkey={item.id + props.weekBeginning + 'u'}\r\n\t\t\t\t\t\tvalue={item.id}\r\n\t\t\t\t\t\tdata-week={props.weekBeginning}\r\n\t\t\t\t\t\tclassName={'items-list-item ' + item.color}\r\n\t\t\t\t\t\tonClick={addOne}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{item.text}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport {Maximize2, Trash, Trash2, X} from 'react-feather';\r\n\r\nexport default function ActionsPanel(props) {\r\n\r\n    return (\r\n        <div className='actions-panel'>\r\n            <span>\r\n                <input\r\n                    type='checkbox'\r\n                    id={'delete-items' + props.weekBeginning}\r\n                    onChange={() => !props.shifting && props.onSwitchDeleting(!props.deleting)}\r\n                />\r\n                <label htmlFor={'delete-items' + props.weekBeginning}>\r\n                    {props.deleting ?\r\n                        <Trash2 size={14}/>\r\n                        :\r\n                        <Trash size={14}/>\r\n                    }\r\n                </label>\r\n            </span>\r\n            {props.showShiftItems &&\r\n                <span>\r\n                    <input\r\n                        type='checkbox'\r\n                        id={'shift-items' + props.weekBeginning}\r\n                        onChange={() => !props.deleting && props.onSwitchShifting(!props.shifting)}\r\n                    />\r\n                    <label htmlFor={'shift-items' + props.weekBeginning}>\r\n                        {props.shifting ?\r\n                            <X size={14}/>\r\n                            :\r\n                            <Maximize2 size={12} className='deg45'/>\r\n                        }\r\n                    </label>\r\n                </span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport {Check} from 'react-feather';\r\nimport ModalHeader from '../../../Modal/ModalHeader';\r\nimport './notesModal.css';\r\n\r\nexport default function NotesModal(props) {\r\n\r\n\tconst [note, editNote] = useState(props.note);\r\n\r\n\tfunction saveNote() {\r\n\t\tprops.onSaveNote(note, props.index);\r\n\t\tprops.onToggleModal(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='text'>\r\n\t\t\t\t{!props.isArchive ?\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tmaxLength='500'\r\n\t\t\t\t\t\tvalue={note}\r\n\t\t\t\t\t\tonInput={event => editNote(event.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{note}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t\t{!props.isArchive &&\r\n\t\t\t\t<div className='actions-panel'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='save'\r\n\t\t\t\t\t\tonClick={saveNote}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Check size={16} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport { Plus } from 'react-feather';\r\nimport './buttons.css';\r\n\r\nexport function AddBtn(props) {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName='plus-sign add'\r\n\t\t\tonClick={() => props.switchAdding(true)}\r\n\t\t>\r\n\t\t\t<Plus size={18} />\r\n\t\t</button>\r\n\t)\r\n}\r\n","import sortColor from './sortColor';\r\n\r\nexport default function getStoredItems() {\r\n    if (localStorage.getItem('items')) {\r\n        return sortColor(JSON.parse(localStorage.getItem('items')));\r\n    } else return [];\r\n}\r\n","export default function sortColor(array) {\r\n    return array.sort((a, b) => (a.color > b.color) ? 1 : -1);\r\n}\r\n","export default function getStoredWeek(week) {\r\n    if (localStorage.getItem(week)) {\r\n        return JSON.parse(localStorage.getItem(week));\r\n    } else return {\r\n        notes: ['', '', '', '', '', '', '']\r\n    };\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Row from './Row';\r\nimport AddItems from './AddItems';\r\nimport ActionsPanel from './ActionsPanel';\r\nimport Modal from '../../Modal';\r\nimport NotesModal from './NotesModal';\r\nimport { AddBtn } from '../../Buttons';\r\nimport getStoredItems from '../../../functions/getStoredItems';\r\nimport getStoredWeek from '../../../functions/getStoredWeek';\r\nimport { days } from '../../../static/colorsDays';\r\nimport { Edit2, MoreHorizontal } from 'react-feather';\r\nimport '../arrange.css';\r\nimport '../../Modal/modal.css';\r\n\r\nexport default function ArrangeWeek(props) {\r\n\r\n    const [week, editWeek] = useState(getStoredWeek(props.weekBeginning));\r\n    const [unselected, editUnselected] = useState(getStoredItems());\r\n    const [selected, editSelected] = useState([]);\r\n    const [deleting, switchDeleting] = useState(false);\r\n    const [shifting, switchShifting] = useState(false);\r\n    const [addingItems, switchAddingItems] = useState(false);\r\n    const [editingNotes, switchEditingNotes] = useState(false);\r\n\r\n    useEffect(() => createWeek(), [week]);\r\n\r\n    async function createWeek() {\r\n        let createSelected = [];\r\n        let createUnselected = getStoredItems();\r\n        let newWeek = await getStoredWeek(props.weekBeginning);\r\n        if (newWeek.items) {\r\n            newWeek.items.forEach(item => {\r\n                let index = createUnselected.findIndex(uItem => uItem.id === item[0]);\r\n                if (index > -1) {\r\n                    let moveItem = createUnselected.splice(index, 1);\r\n                    moveItem[0].todo = item[1];\r\n                    createSelected.push(moveItem[0]);\r\n                }\r\n            });\r\n        }\r\n        editUnselected([...createUnselected]);\r\n        editSelected([...createSelected]);\r\n        return;\r\n    }\r\n\r\n    function saveItem(newWeek) {\r\n        if (!newWeek.notes) newWeek.notes = ['', '', '', '', '', '', ''];\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n    }\r\n\r\n    function addAllItemsToWeek() {\r\n        let ids = [];\r\n        let newWeek = {...week};\r\n        unselected.forEach(item => ids.push(item.id));\r\n        if (newWeek.items === undefined) {\r\n            newWeek.date = props.weekBeginning;\r\n            newWeek.items = [];\r\n        };\r\n        ids.forEach(id => newWeek.items.push([id, [-1, -1, -1, -1, -1, -1, -1]]));\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function addItemToWeek(event) {\r\n        let newWeek = {...week};\r\n        if (newWeek.items === undefined) {\r\n            newWeek.date = props.weekBeginning;\r\n            newWeek.items = [];\r\n        };\r\n        newWeek.items.push([event.target.value, [-1, -1, -1, -1, -1, -1, -1]]);\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function removeItemFromWeek(event) {\r\n        let newWeek = {...week};\r\n        newWeek.items = newWeek.items.filter(needle => needle[0] !== event.target.value);\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function moveItemInWeek(event) {\r\n        let newWeek = JSON.parse(JSON.stringify(week));\r\n        let index = +event.currentTarget.value;\r\n        let newIndex;\r\n        if (event.currentTarget.dataset.direction === 'up') {\r\n            newIndex = index > 0 ? index - 1 : newWeek.items.length - 1;\r\n        } else {\r\n            newIndex = index < newWeek.items.length - 1 ? index + 1 : 0;\r\n        }\r\n        newWeek.items.splice(newIndex, 0, newWeek.items.splice(index, 1)[0]);\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function changeDay(event) {\r\n        let newWeek = {...week};\r\n        let index = newWeek.items.findIndex(item => item[0] === event.currentTarget.dataset.id);\r\n        let item = newWeek.items[index];\r\n        let day = event.currentTarget.dataset.day;\r\n        if (props.isThisWeek) {\r\n            item[1][day] = (item[1][day] === (-1) ? 0 : item[1][day] === 0 ? 1 : (-1));\r\n        } else {\r\n            item[1][day] = (item[1][day] > (-1) ? (-1) : 0);\r\n        }\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n        updateArchive(newWeek, index);\r\n    }\r\n\r\n    function saveTodo(id, day, value) {\r\n        let newWeek = {...week};\r\n        let index = newWeek.items.findIndex(item => item[0] === id);\r\n        let item = newWeek.items[index];\r\n        item[1][day] = value;\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n        updateArchive(newWeek, index);\r\n    }\r\n\r\n    function saveNote(value, i) {\r\n        let newWeek = {...week};\r\n        newWeek.notes[i] = value;\r\n        saveItem(newWeek);\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function updateArchive(newWeek, i) {\r\n        if (props.isThisWeek) {\r\n            let archive = JSON.parse(localStorage.getItem('archive') || []);\r\n            let thisWeek = {\r\n                date: props.weekBeginning,\r\n                items: [...selected]\r\n            };\r\n            thisWeek.items[i].todo = newWeek.items[i][1];\r\n            if (hasNotes(newWeek.notes)) thisWeek.notes = newWeek.notes;\r\n            let index = archive.findIndex(week => week.date === thisWeek.date);\r\n            index > -1 ? archive[index] = thisWeek : archive.unshift(thisWeek);\r\n            localStorage.setItem('archive', JSON.stringify(archive));\r\n        }\r\n    }\r\n\r\n    function hasNotes(notes) {\r\n        let hasNotes = false;\r\n        notes.forEach(note => {\r\n            if (note !== '') hasNotes = true;\r\n        });\r\n        return hasNotes;\r\n    }\r\n\r\n    return (\r\n        <div className='week'>\r\n            {props.weekName === 'This Week' ?\r\n                <h1>\r\n                    {props.weekName}\r\n                </h1>\r\n                :\r\n                <h2>\r\n                    {props.weekName}\r\n                </h2>\r\n            }\r\n            <section>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td className='week-date left-column'>\r\n                            {props.weekBeginning}\r\n                        </td>\r\n                        <td className='week-date'>\r\n                        </td>\r\n                        {props.days.map((day, i) =>\r\n                            <td\r\n                                key={day + i + props.weekBeginning}\r\n                                className='day'\r\n                            >\r\n                                {day.substring(0,1)}\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody data-dragweek={props.weekBeginning}>\r\n                        {selected.map((item, i) =>\r\n                            <Row\r\n                                key={item.id + props.weekBeginning}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                today={props.today}\r\n                                isThisWeek={props.isThisWeek}\r\n                                weekBeginning={props.weekBeginning}\r\n                                days={days}\r\n                                deleting={deleting}\r\n                                shifting={shifting}\r\n                                onRemoveItem={removeItemFromWeek}\r\n                                onMoveItem={moveItemInWeek}\r\n                                onChangeDay={changeDay}\r\n                                onSaveTodo={saveTodo}\r\n                            />\r\n                        )}\r\n                        {week.notes &&\r\n                            <tr>\r\n                                <td className='no-table'>\r\n                                    {selected.length > 0 &&\r\n                                        <ActionsPanel\r\n                                            showShiftItems={selected.length > 1}\r\n                                            weekBeginning={props.weekBeginning}\r\n                                            deleting={deleting}\r\n                                            onSwitchDeleting={switchDeleting}\r\n                                            shifting={shifting}\r\n                                            onSwitchShifting={switchShifting}\r\n                                        />\r\n                                    }\r\n                                </td>\r\n                                <td className='no-table'>\r\n                                    <Edit2 size={12} />\r\n                                </td>\r\n                                {week.notes.map((note, i) =>\r\n                                    <td\r\n                                        key={props.weekBeginning + 'notes' + i}\r\n                                        className='notes-cell'\r\n                                        onClick={event => event.target.classList.contains('notes-cell') ? switchEditingNotes(props.weekBeginning + i) : ''}\r\n                                    >\r\n                                        {week.notes[i] &&\r\n                                            <MoreHorizontal\r\n                                                className='notes-cell'\r\n                                                size={12}\r\n                                            />\r\n                                        }\r\n                                        {editingNotes === (props.weekBeginning + i) &&\r\n                                            <Modal\r\n                                                index={i}\r\n                                                showDay={true}\r\n                                                today={props.today}\r\n                                                thisDay={days[i]}\r\n                                                isThisWeek={props.isThisWeek}\r\n                                                name={'notes'}\r\n                                                title={'Notes'}\r\n                                                onToggleModal={switchEditingNotes}\r\n                                                modal={\r\n                                                    <NotesModal\r\n                                                        key={props.weekBeginning + 'addItems'}\r\n                                                        index={i}\r\n                                                        note={note}\r\n                                                        day={days[i]}\r\n                                                        today={props.today}\r\n                                                        thisDay={days[i]}\r\n                                                        isThisWeek={props.isThisWeek}\r\n                                                        weekBeginning={props.weekBeginning}\r\n                                                        onSaveNote={saveNote}\r\n                                                        onToggleModal={switchEditingNotes}\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        }\r\n                                    </td>\r\n                                )}\r\n                            </tr>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n            {unselected.length > 0 &&\r\n                <div className='edit-box'>\r\n                    <AddBtn\r\n                        switchAdding={switchAddingItems}\r\n                    />\r\n                    {addingItems &&\r\n                        <Modal\r\n                            name={'add-items'}\r\n                            title={'Add Items'}\r\n                            onToggleModal={switchAddingItems}\r\n                            modal={\r\n                                <AddItems\r\n                                    key={props.weekBeginning + 'addItems'}\r\n                                    unselected={unselected}\r\n                                    onAddAllItemsToWeek={addAllItemsToWeek}\r\n                                    onAddItemToWeek={addItemToWeek}\r\n                                    onToggleModal={switchAddingItems}\r\n                                />\r\n                            }\r\n                        />\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport ArrangeWeek from './ArrangeWeek';\r\nimport {days} from '../../static/colorsDays';\r\nimport './arrange.css';\r\n\r\nexport default function Arrange() {\r\n\r\n    const [dateToday, updateDateToday] = useState(new Date());\r\n    const [thisWeekBeginning, updateThisWeekBeginning] = useState(getWeekBeginning());\r\n    const [nextWeekBeginning, updateNextWeekBeginning] = useState(getWeekBeginning(7));\r\n\r\n    const [ogDayToday, updateOgDayToday] = useState(dateToday.getDay());\r\n    const [dayToday, updateDayToday] = useState(ogDayToday === 0 ? 6 : ogDayToday - 1);\r\n\r\n    useEffect(() => updateOgDayToday(dateToday.getDay()), [dateToday]);\r\n    useEffect(() => updateDayToday(ogDayToday === 0 ? 6 : ogDayToday - 1), [ogDayToday]);\r\n    useEffect(() => updateThisWeekBeginning(getWeekBeginning()), [dateToday]);\r\n    useEffect(() => updateNextWeekBeginning(getWeekBeginning(7)), [dateToday]);\r\n\r\n    setInterval(() => {\r\n        const newDate = new Date();\r\n        if (newDate.getDay() === 1 && dateToday.getDay() === 0) {\r\n            window.location.reload();\r\n        } else if (newDate.getDate() !== dateToday.getDate()) {\r\n            updateDateToday(newDate);\r\n        }\r\n    }, 60000);\r\n\r\n    function getWeekBeginning(addWeek = 0) {\r\n        let newDate = new Date(),\r\n            day = newDate.getDay();\r\n        function padZero(n) { return n < 10 ? '0' + n : n }\r\n        if (day > 1) {\r\n            newDate.setDate(newDate.getDate() - day + 1 + addWeek);\r\n        } else if (day === 0) {\r\n            newDate.setDate(newDate.getDate() - 6 + addWeek);\r\n        } else {\r\n            newDate.setDate(newDate.getDate() + addWeek);\r\n        }\r\n        return newDate.getFullYear() + '/' + padZero(newDate.getMonth() + 1) + '/' + padZero(newDate.getDate());\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <ArrangeWeek\r\n                key={'thisWeek'}\r\n                today={dayToday}\r\n                weekName={'This Week'}\r\n                days={days}\r\n                weekBeginning={thisWeekBeginning}\r\n                isThisWeek={true}\r\n            />\r\n            <ArrangeWeek\r\n                key={'nextWeek'}\r\n                today={dayToday}\r\n                weekName={'Next Week'}\r\n                days={days}\r\n                weekBeginning={nextWeekBeginning}\r\n                thisWeekBeginning={thisWeekBeginning}\r\n            />\r\n        </main>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport validateItem from '../../../functions/validateItem';\r\nimport '../../Arrange/';\r\nimport {X, Check} from 'react-feather';\r\n\r\nexport default function UpdateItem(props) {\r\n\r\n    const itemToPlay = props.item ? {...props.item} :\r\n        {\r\n            id: '',\r\n            text: '',\r\n            type: true,\r\n            number: 1,\r\n            color: 'color0'\r\n        };\r\n\r\n    const [item, editItem] = useState(itemToPlay);\r\n\r\n    function checkKey(event) {\r\n        if (event.key === 'Enter') updateItem();\r\n    }\r\n\r\n    function handleInput(event) {\r\n        let newItem = {...item};\r\n        newItem[event.target.name] = event.target.value;\r\n        editItem({...newItem});\r\n    }\r\n\r\n    function switchType() {\r\n        let newItem = {...item};\r\n        newItem.type = !newItem.type;\r\n        editItem({...newItem});\r\n    }\r\n\r\n    function updateItem() {\r\n        if (validateItem(item)) {\r\n            props.onUpdateItem({...item});\r\n            editItem({\r\n                id: '',\r\n                text: '',\r\n                type: true,\r\n                number: 1,\r\n                color: 'color0'\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className='item'>\r\n                <input\r\n                    type='text'\r\n                    name='text'\r\n                    value={item.text}\r\n                    onChange={handleInput}\r\n                    onKeyDown={event => checkKey(event)}\r\n                    className='text'\r\n                />\r\n                <button\r\n                    name='type'\r\n                    value={item.type}\r\n                    onClick={switchType}\r\n                    className='type'>\r\n                    {item.type ?\r\n                        <div className='day spot open'>\r\n                        </div>\r\n                        :\r\n                        '#'\r\n                    }\r\n                </button>\r\n                <input\r\n                    type='number'\r\n                    name='number'\r\n                    min='1'\r\n                    max='99999'\r\n                    value={item.number}\r\n                    onChange={handleInput}\r\n                    onKeyDown={event => checkKey(event)}\r\n                    className='number'\r\n                />\r\n                <button\r\n                    className={'color ' + item.color}>\r\n                </button>\r\n                <button\r\n                    onClick={props.onCancelUpdate}\r\n                    className='plus-sign'>\r\n                    <X size={16} />\r\n                </button>\r\n            </div>\r\n            <div className='edit-box'>\r\n                <div className='palette'>\r\n                    {props.colors.map(color =>\r\n                        <button\r\n                            key={color}\r\n                            name='color'\r\n                            value={color}\r\n                            onClick={handleInput}\r\n                            className={'palette-square ' + color}>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <div className='edit-box-buttons'>\r\n                    <button\r\n                        onClick={updateItem}\r\n                        className='edit-complete'>\r\n                        <Check size={16} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport UpdateItem from '../UpdateItem';\r\nimport cutNumber from '../../../functions/cutNumber';\r\nimport validateItem from '../../../functions/validateItem';\r\nimport {X, Hash} from 'react-feather';\r\n\r\nexport default function Item(props) {\r\n\r\n    const [item, editItem] = useState(props.item);\r\n    const [editing, switchEditing] = useState(false);\r\n    const [inUse, switchInUse] = useState(false);\r\n\r\n    useEffect(() => {\r\n        checkInUse();\r\n    });\r\n\r\n    function startEdit() {\r\n        switchEditing(true);\r\n        props.onCancelNewItem();\r\n    }\r\n\r\n    function updateItem(data) {\r\n        if (validateItem(data)) {\r\n            let storedItems = JSON.parse(localStorage.getItem('items'));\r\n            let edited = storedItems.findIndex(item => item.id === data.id);\r\n            storedItems[edited] = data;\r\n            localStorage.setItem('items', JSON.stringify(storedItems));\r\n            editItem({...data});\r\n            switchEditing(false);\r\n        }\r\n    }\r\n\r\n    function checkInUse() {\r\n        if (localStorage.getItem('weeks')) {\r\n            const weeks = JSON.parse(localStorage.getItem('weeks'));\r\n            weeks.forEach(week => {\r\n                if (week.items.find((item) => item[0] === props.item.id)) switchInUse(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editing && !props.currentlyAdding ?\r\n                <UpdateItem\r\n                    item={item}\r\n                    colors={props.colors}\r\n                    onUpdateItem={updateItem}\r\n                    onCancelUpdate={() => switchEditing(false)}\r\n                />\r\n                :\r\n                <div className='item'>\r\n                    <div\r\n                        onClick={startEdit}\r\n                        className='text'>\r\n                        {item.text}\r\n                    </div>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className='type'>\r\n                        {item.type ?\r\n                            <div className='day spot open'>\r\n                            </div>\r\n                            :\r\n                            <Hash size={14} />\r\n                        }\r\n                    </button>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className='number'>\r\n                        {cutNumber(item.number)}\r\n                    </button>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className={'color ' + item.color}>\r\n                    </button>\r\n                    <button\r\n                        value={item.id}\r\n                        disabled={inUse}\r\n                        onClick={props.onDeleteItem}\r\n                        className='plus-sign'>\r\n                        <X size={16} />\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Item from './Item';\r\nimport UpdateItem from './UpdateItem';\r\nimport getStoredItems from '../../functions/getStoredItems';\r\nimport {colorsDays} from '../../static/colorsDays';\r\nimport './items.css';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {Plus} from 'react-feather';\r\nimport { AddBtn } from '../Buttons';\r\n\r\nexport default function Items() {\r\n\r\n    const [items, editItems] = useState(getStoredItems());\r\n    const [adding, switchAdding] = useState(false);\r\n\r\n    function addItem(data) {\r\n        let item = {\r\n            id: uuidv4(),\r\n            text: data.text,\r\n            type: data.type,\r\n            number: data.number,\r\n            color: data.color\r\n        };\r\n        let newItems = [...items];\r\n        newItems.push(item);\r\n        localStorage.setItem('items', JSON.stringify(newItems));\r\n        editItems([...newItems]);\r\n    }\r\n\r\n    function deleteItem(event) {\r\n        if (window.confirm('Really delete?')) {\r\n            let newItems = [...items];\r\n            let filtered = newItems.filter(item => item.id !== event.currentTarget.value);\r\n            localStorage.setItem('items', JSON.stringify(filtered));\r\n            editItems([...filtered]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main id='items'>\r\n            <h1>\r\n                Items\r\n            </h1>\r\n            {items.map(item =>\r\n                <Item\r\n                    key={item.id}\r\n                    item={item}\r\n                    colors={colorsDays}\r\n                    currentlyAdding={adding}\r\n                    onDeleteItem={deleteItem}\r\n                    onCancelNewItem={() => switchAdding(false)}\r\n                />\r\n            )}\r\n            {adding ?\r\n                <UpdateItem\r\n                    colors={colorsDays}\r\n                    onUpdateItem={addItem}\r\n                    onCancelUpdate={() => switchAdding(false)}\r\n                />\r\n                :\r\n                <AddBtn\r\n                    switchAdding={switchAdding}\r\n                />\r\n            }\r\n        </main>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Row from '../../Arrange/ArrangeWeek/Row';\r\nimport Modal from '../../Modal';\r\nimport NotesModal from '../../Arrange/ArrangeWeek/NotesModal';\r\nimport { Edit2, MoreHorizontal } from 'react-feather';\r\nimport '../../Arrange/arrange.css';\r\n\r\nexport default function ArchiveWeek({week, days}) {\r\n\r\n    const [notesOpen, switchNotesOpen] = useState(false);\r\n\r\n    return (\r\n        <div className='week'>\r\n            <section>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td className='week-date left-column'>\r\n                            {week.date}\r\n                        </td>\r\n                        <td className='week-date'>\r\n                        </td>\r\n                        {days.map((day, i) =>\r\n                            <td\r\n                                key={day + i + week.date}\r\n                                className='day'>\r\n                                {day.substring(0,1)}\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {week.items.map((item, i) =>\r\n                            <Row\r\n                                key={item.id + week.date}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                weekBeginning={week.date}\r\n                                archive={true}\r\n                                onChangeDay={null}\r\n                                onRemoveItem={null}\r\n                            />\r\n                        )}\r\n                        {week.notes &&\r\n                            <tr>\r\n                                <td className='no-table'>\r\n                                </td>\r\n                                <td className='no-table'>\r\n                                    <Edit2 size={12} />\r\n                                </td>\r\n                                {week.notes.map((note, i) =>\r\n                                    <td\r\n                                        key={week.date + 'notes' + i}\r\n                                        className='notes-cell'\r\n                                        onClick={event => event.target.classList.contains('notes-cell') ? switchNotesOpen(week.date + i) : ''}\r\n                                    >\r\n                                        {week.notes[i] &&\r\n                                            <MoreHorizontal\r\n                                                className='notes-cell'\r\n                                                size={12}\r\n                                            />\r\n                                        }\r\n                                        {notesOpen === (week.date + i) &&\r\n                                            <Modal\r\n                                                showDay={true}\r\n                                                thisDay={days[i]}\r\n                                                isArchive={true}\r\n                                                name={'notes'}\r\n                                                title={'Notes'}\r\n                                                onToggleModal={switchNotesOpen}\r\n                                                modal={\r\n                                                    <NotesModal\r\n                                                        key={week.date + 'addItems'}\r\n                                                        index={i}\r\n                                                        note={note}\r\n                                                        day={days[i]}\r\n                                                        thisDay={days[i]}\r\n                                                        weekBeginning={week.date}\r\n                                                        isArchive={true}\r\n                                                        onToggleModal={switchNotesOpen}\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        }\r\n                                    </td>\r\n                                )}\r\n                            </tr>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ArchiveWeek from './ArchiveWeek';\r\nimport {days} from '../../static/colorsDays';\r\nimport '../../components/Arrange/arrange.css';\r\n\r\nexport default function Archive(props) {\r\n\r\n    const archive = getArchive();\r\n\r\n    function getArchive() {\r\n        if (localStorage.getItem('archive')) {\r\n            return JSON.parse(localStorage.getItem('archive'));\r\n        } else return [];\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <h1>\r\n                Archive\r\n            </h1>\r\n            {archive.map((week, i) =>\r\n                <ArchiveWeek\r\n                    key={'archiveWeek' + i}\r\n                    week={week}\r\n                    days={days}\r\n                />\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './information.css';\r\n\r\nexport default function Information(props) {\r\n\r\n    return (\r\n        <>\r\n            <h2>ITEMS</h2>\r\n            <ul>\r\n                <li>add items: name, type, number, colour</li>\r\n                <li>type: choose between dot (one per day) or number (up to 100,000 per week)</li>\r\n                <li>enter a weekly goal number for the item</li>\r\n                <li>choose a colour (so similar items can be visually grouped)</li>\r\n            </ul>\r\n            <h2>ARRANGE</h2>\r\n            <ul>\r\n                <li>touch an item on the list to add it to the week</li>\r\n                <li>for dot items:</li>\r\n                <li className='indent'>touch a cell to set as <i>todo</i> for that day</li>\r\n                <li className='indent'>touch again to set as <i>done</i></li>\r\n                <li>for number items:</li>\r\n                <li className='indent'>touch a cell to select from options panel</li>\r\n                <li>the number to the left of Monday tells you how many left to do that week</li>\r\n                <li>when you've hit the weekly target for an item, the row will turn black</li>\r\n            </ul>\r\n            <h2>ARCHIVE</h2>\r\n            <ul>\r\n                <li>lists previous weeks</li>\r\n                <li>not editable</li>\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {Redirect, BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Modal from './components/Modal';\r\nimport Nav from './components/Nav';\r\nimport Items from './components/Items';\r\nimport Arrange from './components/Arrange';\r\nimport Archive from './components/Archive';\r\nimport Information from './components/Information';\r\nimport {Info} from 'react-feather';\r\nimport './app.css';\r\n\r\nexport default function App() {\r\n\r\n    const [infoBox, toggleInfoBox] = useState(false);\r\n\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Info size={16} className='info' onClick={() => toggleInfoBox(true)} />\r\n            {infoBox &&\r\n                <Modal\r\n                    name={'info'}\r\n                    onToggleModal={toggleInfoBox}\r\n                    modal={\r\n                        <Information\r\n                            onToggleModal={toggleInfoBox}\r\n                        />\r\n                    }\r\n                />\r\n            }\r\n            <div className='bgPanel'>\r\n            </div>\r\n            <Switch>\r\n                <Route path='/Items'>\r\n                    <Items />\r\n                </Route>\r\n                <Route path='/Arrange'>\r\n                    <Arrange />\r\n                </Route>\r\n                <Route path='/Archive'>\r\n                    <Archive />\r\n                </Route>\r\n                <Route path='/'>\r\n                    <Redirect to='/Arrange' />\r\n                </Route>\r\n            </Switch>\r\n            <Nav />\r\n        </Router>\r\n    );\r\n}\r\n","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA.'\r\n                            );\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}