{"version":3,"sources":["components/Header/turtledot.svg","components/Header/index.js","components/Nav/index.js","functions/validateItem.js","functions/cutNumber.js","components/Row/index.js","components/Arrange/ArrangeWeek/index.js","static/colors.js","components/Arrange/index.js","components/Items/UpdateItem/index.js","components/Items/Item/index.js","components/Items/index.js","functions/sortColor.js","components/Archive/ArchiveWeek/index.js","components/Archive/index.js","components/Information/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","src","turtledot","className","alt","Nav","to","activeClassName","size","validateItem","item","text","length","number","type","cutNumber","toString","slice","Math","ceil","Row","props","useState","todo","editTodo","editing","switchEditing","currentTotal","avgTodo","tooHigh","tooLow","allDone","cutNum","goalNum","originalDay","today","row","editRow","handleNumber","event","newTodo","target","dataset","day","value","saveTodo","onSaveTodo","useEffect","numberToDo","forEach","push","reduce","a","b","Date","getDay","doNumbers","draggable","archive","id","weekBeginning","data-index","index","data-dragid","data-dragweek","color","onClick","onRemoveItem","map","i","data-id","data-item","data-day","data-week","onChangeDay","isThisWeek","min","max","onChange","onBlur","ArrangeWeek","JSON","parse","localStorage","getItem","week","editWeek","unselected","editUnselected","selected","editSelected","createSelected","createUnselected","newWeek","items","findIndex","uItem","moveItem","splice","addItemToWeek","console","log","undefined","date","setItem","stringify","removeItemFromWeek","window","confirm","filter","needle","changeDay","find","currentTarget","createWeek","days","ids","colors","Arrange","thisWeekBeginning","getWeekBeginning","nextWeekBeginning","addWeek","newDate","padZero","n","setDate","getDate","getFullYear","getMonth","weekName","UpdateItem","itemToPlay","editItem","handleInput","newItem","name","onCancelUpdate","onUpdateItem","Item","inUse","switchInUse","startEdit","onCancelNewItem","checkInUse","currentlyAdding","data","storedItems","edited","disabled","onDeleteItem","Items","sort","editItems","adding","switchAdding","deleteItem","filtered","uuidv4","newItems","ArchiveWeek","Archive","newA","it","td","mahStr","substring","style","background","Information","infoBox","toggleInfoBox","App","basename","process","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2VAAe,MAA0B,sC,MCI1B,SAASA,IACpB,OACI,iCACI,qBAAKC,IAAKC,EAAWC,UAAU,OAAOC,IAAI,W,0BCFvC,SAASC,IACpB,OACI,gCACI,eAAC,IAAD,CAASC,GAAG,SAASH,UAAU,YAAYI,gBAAgB,OAA3D,UACI,qBAAKJ,UAAU,YAAf,SACI,cAAC,IAAD,CAAMK,KAAM,OAEhB,qBAAKL,UAAU,YAAf,sBAIJ,eAAC,IAAD,CAASG,GAAG,WAAWH,UAAU,YAAYI,gBAAgB,OAA7D,UACI,qBAAKJ,UAAU,YAAf,SACI,sBAAMA,UAAU,qBAGpB,qBAAKA,UAAU,YAAf,wBAIJ,eAAC,IAAD,CAASG,GAAG,WAAWH,UAAU,YAAYI,gBAAgB,OAA7D,UACI,qBAAKJ,UAAU,YAAf,SACI,cAAC,IAAD,CAAUK,KAAM,OAEpB,qBAAKL,UAAU,YAAf,2B,yBC7BD,SAASM,EAAaC,GACjC,OAAIA,EAAKC,KAAKC,OAAS,GAAKF,EAAKC,KAAKC,OAAS,IAAMF,EAAKG,OAAS,OAC3DH,EAAKI,MAAQJ,EAAKG,OAAS,MAC1BH,EAAKI,MAAQJ,EAAKG,OAAS,aAAhC,I,6BCHO,SAASE,EAAUF,GAC9B,OAAIA,EAAS,MACF,OACAA,EAAS,KACTA,EAAOG,WAAWC,MAAM,EAAE,GAAK,IAC/BJ,EAAS,IACZA,EAAS,MAAS,EAAUA,EAAOG,WAAWC,MAAM,EAAG,GAAK,IACzDJ,EAAOG,WAAWC,MAAM,EAAG,GAAK,IAAMJ,EAAOG,WAAWC,MAAM,EAAG,GAAK,IACtEJ,EAAS,IAAM,EACfK,KAAKC,KAAKN,GACPA,E,MCNH,SAASO,EAAIC,GAAQ,IAAD,EAENC,mBAAS,YAAID,EAAME,OAFb,mBAExBA,EAFwB,KAElBC,EAFkB,OAGEF,oBAAS,GAHX,mBAGxBG,EAHwB,KAGfC,EAHe,OAIRJ,mBAAS,CAC5BK,aAAc,EACdC,QAAS,EACTC,SAAS,EACTC,QAAQ,EACRC,SAAS,EACTC,OAAQ,EACRC,QAAS,EACTC,YAAa,EACbC,MAAO,IAboB,mBAIxBC,EAJwB,KAInBC,EAJmB,KA4C/B,SAASC,EAAaC,GAClB,IAAIC,EAAO,YAAOjB,GAClBiB,EAAQD,EAAME,OAAOC,QAAQC,KAAOJ,EAAME,OAAOG,MACjDpB,EAAS,YAAIgB,IAGjB,SAASK,EAASN,GAOlB,IAAsBI,MANDJ,EAAME,OAAOG,QAOf,GAAKD,EAAM,QAAmB,KAARA,KANjCtB,EAAMyB,WAAWP,GACjBb,GAAc,IAQtB,OA7CAqB,qBAAU,kBAAMvB,EAAS,YAAIH,EAAME,SAAQ,CAACF,IAC5C0B,qBAAU,kBAEV,WACI,IAAIC,EAAa,GACjB3B,EAAME,KAAK0B,SAAQ,SAAAN,GAAG,OAAIA,GAAO,EAAIK,EAAWE,MAAMP,GAAO,QAC7D,IAAMhB,EAAeqB,EAAWG,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAClDtB,EAAUJ,IAAiBN,EAAMR,OACjCe,EAAUP,EAAMR,OAASmC,EAAWpC,OACpCiB,EAAUmB,EAAWpC,QAAUS,EAAMR,OACrCiB,EAASkB,EAAWpC,QAAUS,EAAMR,OACpCmB,EAASjB,GAAWM,EAAMR,QAC1BoB,EAAUlB,GAAWM,EAAMR,OAASc,GACpCO,GAAc,IAAIoB,MAAOC,SAE/BlB,EAAQ,CACJV,aAAcA,EACdC,QAASA,EACTC,QAASA,EACTC,OAAQA,EACRC,QAASA,EACTC,OAAQA,EACRC,QAASA,EACTC,YAAaA,EACbC,MAV0B,IAAhBD,EAAoB,EAAIA,EAAc,IAbxCsB,KAAa,CAACnC,IA6C1B,qBACIoC,WAAYpC,EAAMqC,QAClBC,GAAItC,EAAMsC,GAAKtC,EAAMuC,cACrBC,aAAYxC,EAAMyC,MAClBC,cAAa1C,EAAMsC,GACnBK,gBAAe3C,EAAMuC,cACrBzD,UAAWiC,EAAIL,QAAU,UAAYV,EAAM4C,MAN/C,UAYI,qBACIN,GAAItC,EAAMsC,GACVxD,UAAU,wBAFd,WAGMkB,EAAMqC,SACJ,wBACId,MAAOvB,EAAMsC,GACbO,QAAS7C,EAAM8C,aACfhE,UAAU,mBAHd,oBAOHkB,EAAMV,QAEX,oBAAIR,UAAW,8BACRkB,EAAMP,OAASsB,EAAIP,QAAU,0BAA4BO,EAAIN,OAAS,wBAA0B,KADvG,SAEKf,EAAUqB,EAAIL,QAAUK,EAAIT,aAAeS,EAAIH,SAAW,EAAIG,EAAIH,QAAUZ,EAAMR,UAEtFU,EAAK6C,KAAI,SAACzB,EAAK0B,GAAN,OACN,oBAEIC,UAASjD,EAAMsC,GACfY,YAAWlD,EAAMyC,MACjBU,WAAUH,EACVI,YAAWpD,EAAMuC,cACjBM,QAAS7C,EAAMP,KAAOO,EAAMqD,YAAcrD,EAAMsD,WAAa,kBAAMjD,GAAc,IAAQL,EAAMqD,YAC/FvE,UAAW,wBAA0BkB,EAAMsD,YAAcvC,EAAID,QAAUkC,EAAIhD,EAAM4C,MAAQ,IAP7F,SAQKxC,EACG,uBACIX,KAAK,SACL8D,IAAI,KACJC,IAAI,SACJP,UAASjD,EAAMsC,GACfY,YAAWlD,EAAMyC,MACjBU,WAAUH,EACVI,YAAWpD,EAAMuC,cACjBhB,MAAOD,GAAO,EAAIA,EAAM,GACxBxC,UAAW,aAAuB,IAARwC,EAAY,QAAU,IAChDmC,SAAUxC,EACVyC,OAAQlC,IAGZ,qBACI1C,UAAWkB,EAAMP,KACZ,QAAkB,IAAR6B,EAAY,UAAoB,IAARA,EAAY,QAAU,IAExD,aAAuB,IAARA,EAAY,QAAU,IAJ9C,UAKMtB,EAAMP,MAAQ6B,EAAM,EAAIA,GAAOtB,EAAMP,MAAQ6B,GAAO,EAAI5B,EAAUqB,EAAIR,SAAW,MA3BtFyC,EAAIhD,EAAMsC,GAAKtC,EAAMuC,qB,MC3F/B,SAASoB,EAAY3D,GAAQ,IAAD,EAEdC,mBAAS2D,KAAKC,MAAMC,aAAaC,QAAQ/D,EAAMuC,iBAFjC,mBAEhCyB,EAFgC,KAE1BC,EAF0B,OAGFhE,mBAAS2D,KAAKC,MAAMC,aAAaC,QAAQ,WAHvC,mBAGhCG,EAHgC,KAGpBC,EAHoB,OAINlE,mBAAS,IAJH,mBAIhCmE,EAJgC,KAItBC,EAJsB,iDAQvC,gCAAAtC,EAAA,6DACQuC,EAAiB,GACjBC,EAAmBX,KAAKC,MAAMC,aAAaC,QAAQ,UAF3D,SAGwBH,KAAKC,MAAMC,aAAaC,QAAQ/D,EAAMuC,gBAH9D,QAGQiC,EAHR,SAKQA,EAAQC,MAAM7C,SAAQ,SAAAvC,GAClB,IAAIoD,EAAQ8B,EAAiBG,WAAU,SAAAC,GAAK,OAAIA,EAAMrC,KAAOjD,EAAK,MAClE,GAAIoD,GAAS,EAAG,CACZ,IAAImC,EAAWL,EAAiBM,OAAOpC,EAAO,GAC9CmC,EAAS,GAAG1E,KAAOb,EAAK,GACxBiF,EAAezC,KAAK+C,EAAS,QAIzCT,EAAe,YAAII,IACnBF,EAAa,GAAD,OAAKC,IAfrB,4CARuC,sBA0BvC,SAASQ,EAAc5D,GACnB,IAAIsD,EAAO,eAAOR,GAClBe,QAAQC,IAAIR,QACUS,IAAlBT,EAAQC,QAAqBD,EAAU,CAACU,KAAMlF,EAAMuC,cAAekC,MAAO,KAC9EM,QAAQC,IAAIR,GACZA,EAAQC,MAAM5C,KAAK,CAACX,EAAME,OAAOG,MAAO,EAAE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAClEuC,aAAaqB,QAAQnF,EAAMuC,cAAeqB,KAAKwB,UAAUZ,IACzDP,EAAS,eAAIO,IAajB,SAASa,EAAmBnE,GACxB,GAAIoE,OAAOC,QAAQ,0CAA2C,CAC1D,IAAIf,EAAO,eAAOR,GAClBQ,EAAQC,MAAQD,EAAQC,MAAMe,QAAO,SAAAC,GAAM,OAAIA,EAAO,KAAOvE,EAAME,OAAOG,SAC1EuC,aAAaqB,QAAQnF,EAAMuC,cAAeqB,KAAKwB,UAAUZ,IACzDP,EAAS,eAAIO,KAerB,SAASkB,EAAUxE,GACf,IAAIsD,EAAO,eAAOR,GACd3E,EAAOmF,EAAQC,MAAMkB,MAAK,SAAAtG,GAAI,OAAIA,EAAK,KAAO6B,EAAM0E,cAAcvE,QAAQiB,MAC1EhB,EAAMJ,EAAM0E,cAAcvE,QAAQC,IAClCtB,EAAMsD,WACNjE,EAAK,GAAGiC,IAA2B,IAAnBjC,EAAK,GAAGiC,GAAgB,EAAqB,IAAjBjC,EAAK,GAAGiC,GAAa,GAAM,EAEvEjC,EAAK,GAAGiC,GAAQjC,EAAK,GAAGiC,IAAS,GAAO,EAAK,EAEjDwC,aAAaqB,QAAQnF,EAAMuC,cAAeqB,KAAKwB,UAAUZ,IACzDP,EAAS,eAAIO,IAGjB,SAAShD,EAASN,GACd,IAAIsD,EAAO,eAAOR,GACd3E,EAAOmF,EAAQC,MAAMkB,MAAK,SAAAtG,GAAI,OAAIA,EAAK,KAAO6B,EAAM0E,cAAcvE,QAAQiB,MAC1EhB,EAAMJ,EAAM0E,cAAcvE,QAAQC,IACtCjC,EAAK,GAAGiC,GAA8B,KAAvBJ,EAAME,OAAOG,OAAgB,GAAKL,EAAME,OAAOG,MAC9DuC,aAAaqB,QAAQnF,EAAMuC,cAAeqB,KAAKwB,UAAUZ,IACzDP,EAAS,eAAIO,IAsBjB,OArGA9C,qBAAU,kBAN6B,0CAMvBmE,KAAc,CAAC7B,IAsG3B,sBAAKlF,UAAU,OAAf,UACI,kCACI,kCACI,gCACA,+BACI,oBAAIA,UAAU,wBAAd,SACKkB,EAAMuC,gBAEX,oBAAIzD,UAAU,cAEbkB,EAAM8F,KAAK/C,KAAI,SAACzB,EAAK0B,GAAN,OACZ,oBAEIlE,UAAU,MAFd,SAGKwC,GAFIA,EAAM0B,EAAIhD,EAAMuC,uBAOjC,uBAAOI,gBAAe3C,EAAMuC,cAA5B,SACC6B,EAASrB,KAAI,SAAC1D,EAAM2D,GAAP,OACV,cAACjD,EAAD,CAEIuC,GAAIjD,EAAKiD,GACTG,MAAOO,EACP1D,KAAMD,EAAKC,KACXG,KAAMJ,EAAKI,KACXD,OAAQH,EAAKG,OACboD,MAAOvD,EAAKuD,MACZ1C,KAAMb,EAAKa,KACXoD,WAAYtD,EAAMsD,WAClBf,cAAevC,EAAMuC,cACrBO,aAAcuC,EACdhC,YAAaqC,EACbjE,WAAYD,GAZPnC,EAAKiD,GAAKtC,EAAMuC,yBAsBpC2B,EAAW3E,OAAS,GACrB,sBAAKT,UAAU,WAAf,UASI,wBACIA,UAAU,cACV+D,QAhIhB,WACI,IAAIkD,EAAM,GACNvB,EAAO,eAAOR,GAClBE,EAAWtC,SAAQ,SAAAvC,GAAI,OAAI0G,EAAIlE,KAAKxC,EAAKiD,YACnB2C,IAAlBT,EAAQC,QAAqBD,EAAU,CAACU,KAAMlF,EAAMuC,cAAekC,MAAO,KAC9EsB,EAAInE,SAAQ,SAAAU,GAAE,OAAIkC,EAAQC,MAAM5C,KAAK,CAACS,EAAI,EAAE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,QACpEwB,aAAaqB,QAAQnF,EAAMuC,cAAeqB,KAAKwB,UAAUZ,IACzDP,EAAS,eAAIO,KAuHL,2BAMA,qBAAK1F,UAAU,aAAf,SACKoF,EAAWnB,KAAI,SAAA1D,GAAI,OAChB,wBAEIkC,MAAOlC,EAAKiD,GACZc,YAAWpD,EAAMuC,cACjBzD,UAAW,mBAAqBO,EAAKuD,MACrCC,QAASiC,EALb,SAOKzF,EAAKC,MANDD,EAAKiD,GAAKtC,EAAMuC,cAAgB,gBCjL1D,IAAMyD,EAAS,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAEpGF,EAAO,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KCG9B,SAASG,IAEpB,IAAMC,EAAoBC,IACpBC,EAAoBD,EAAiB,GAE3C,SAASA,IAA+B,IAAdE,EAAa,uDAAH,EAC5BC,EAAU,IAAIrE,KACdX,EAAMgF,EAAQpE,SAClB,SAASqE,EAAQC,GAAI,OAAOA,EAAI,GAAK,IAAMA,EAAIA,EAQ/C,OAPIlF,EAAM,EACNgF,EAAQG,QAAQH,EAAQI,UAAYpF,EAAM,EAAI+E,GAC/B,IAAR/E,EACPgF,EAAQG,QAAQH,EAAQI,UAAY,EAAIL,GAExCC,EAAQG,QAAQH,EAAQI,UAAYL,GAEjCC,EAAQK,cAAgB,IAAMJ,EAAQD,EAAQM,WAAa,GAAK,IAAML,EAAQD,EAAQI,WAGjG,OACI,uBAAMpE,GAAG,UAAT,UACI,2CAGA,cAACqB,EAAD,CAEIkD,SAAU,YACVf,KAAMA,EACNvD,cAAe2D,EACf5C,YAAY,GAJP,YAMT,2CAGA,cAACK,EAAD,CAEIkD,SAAU,YACVf,KAAMA,EACNvD,cAAe6D,EACfF,kBAAmBA,GAJd,e,oBCnCN,SAASY,EAAW9G,GAE/B,IAAM+G,EAAa/G,EAAMX,KAAN,eAAiBW,EAAMX,MACtC,CACIiD,GAAI,GACJhD,KAAM,GACNG,MAAM,EACND,OAAQ,EACRoD,MAAO,UARuB,EAWb3C,mBAAS8G,GAXI,mBAW/B1H,EAX+B,KAWzB2H,EAXyB,KAatC,SAASC,EAAa/F,GAClB,IAAIgG,EAAO,eAAO7H,GAClB6H,EAAQhG,EAAME,OAAO+F,MAAQjG,EAAME,OAAOG,MAC1CyF,EAAS,eAAIE,IAsBjB,OACI,oCACI,sBAAKpI,UAAU,OAAf,UACI,uBACIW,KAAK,OACL0H,KAAK,OACL5F,MAAOlC,EAAKC,KACZmE,SAAUwD,EACVnI,UAAU,SAEd,wBACIqI,KAAK,OACL5F,MAAOlC,EAAKI,KACZoD,QAhChB,WACI,IAAIqE,EAAO,eAAO7H,GAClB6H,EAAQzH,MAAQyH,EAAQzH,KACxBuH,EAAS,eAAIE,KA8BDpI,UAAU,OAJd,SAKKO,EAAKI,KACF,qBAAKX,UAAU,kBAGf,MAGR,uBACIW,KAAK,SACL0H,KAAK,SACL5D,IAAI,IACJC,IAAI,QACJjC,MAAOlC,EAAKG,OACZiE,SAAUwD,EACVnI,UAAU,WAEd,wBACIA,UAAW,SAAWO,EAAKuD,QAE/B,wBACIC,QAAS7C,EAAMoH,eACftI,UAAU,YAFd,SAGI,cAAC,IAAD,CAAGK,KAAM,UAGjB,sBAAKL,UAAU,WAAf,UACI,qBAAKA,UAAU,UAAf,SACKkB,EAAMgG,OAAOjD,KAAI,SAAAH,GAAK,OACnB,wBAEIuE,KAAK,QACL5F,MAAOqB,EACPC,QAASoE,EACTnI,UAAW,kBAAoB8D,GAJ1BA,QAQjB,qBAAK9D,UAAU,mBAAf,SACI,wBACI+D,QAnEpB,WACQzD,EAAaC,KACbW,EAAMqH,aAAN,eAAuBhI,IACvB2H,EAAS,CACL1E,GAAI,GACJhD,KAAM,GACNG,MAAM,EACND,OAAQ,EACRoD,MAAO,aA4DC9D,UAAU,gBAFd,SAGI,cAAC,IAAD,CAAOK,KAAM,e,YC7FtB,SAASmI,EAAKtH,GAAQ,IAAD,EAEPC,mBAASD,EAAMX,MAFR,mBAEzBA,EAFyB,KAEnB2H,EAFmB,OAGC/G,oBAAS,GAHV,mBAGzBG,EAHyB,KAGhBC,EAHgB,OAIHJ,oBAAS,GAJN,mBAIzBsH,EAJyB,KAIlBC,EAJkB,KAUhC,SAASC,IACLpH,GAAc,GACdL,EAAM0H,kBAuBV,OA7BAhG,qBAAU,YAoBV,WACI,GAAIoC,aAAaC,QAAQ,SAAU,CACjBH,KAAKC,MAAMC,aAAaC,QAAQ,UACxCnC,SAAQ,SAAAoC,GACNA,EAAKS,MAAMkB,MAAK,SAACtG,GAAD,OAAUA,EAAK,KAAOW,EAAMX,KAAKiD,OAAKkF,GAAY,OAvB9EG,MA6BA,8BACKvH,IAAYJ,EAAM4H,gBACf,cAACd,EAAD,CACIzH,KAAMA,EACN2G,OAAQhG,EAAMgG,OACdqB,aA1BhB,SAAoBQ,GAChB,GAAIzI,EAAayI,GAAO,CACpB,IAAIC,EAAclE,KAAKC,MAAMC,aAAaC,QAAQ,UAC9CgE,EAASD,EAAYpD,WAAU,SAAArF,GAAI,OAAIA,EAAKiD,KAAOuF,EAAKvF,MAC5DwF,EAAYC,GAAUF,EACtB/D,aAAaqB,QAAQ,QAASvB,KAAKwB,UAAU0C,IAC7Cd,EAAS,eAAIa,IACbxH,GAAc,KAoBN+G,eAAgB,kBAAM/G,GAAc,MAGxC,sBAAKvB,UAAU,OAAf,UACI,qBACI+D,QAAS4E,EACT3I,UAAU,OAFd,SAGKO,EAAKC,OAEV,wBACIuD,QAAS4E,EACT3I,UAAU,OAFd,SAGKO,EAAKI,KACF,qBAAKX,UAAU,kBAGf,cAAC,IAAD,CAAMK,KAAM,OAGpB,wBACI0D,QAAS4E,EACT3I,UAAU,SAFd,SAGKY,EAAUL,EAAKG,UAEpB,wBACIqD,QAAS4E,EACT3I,UAAW,SAAWO,EAAKuD,QAE/B,wBACIrB,MAAOlC,EAAKiD,GACZ0F,SAAUT,EACV1E,QAAS7C,EAAMiI,aACfnJ,UAAU,YAJd,SAKI,cAAC,IAAD,CAAGK,KAAM,Y,kBCxElB,SAAS+I,IAAS,IAAD,EAEDjI,mBAInB6D,aAAaC,QAAQ,SACJH,KAAKC,MAAMC,aAAaC,QAAQ,UCf5CoE,MAAK,SAACpG,EAAGC,GAAJ,OAAWD,EAAEa,MAAQZ,EAAEY,MAAS,GAAK,KDgBrC,IARU,mBAErB6B,EAFqB,KAEd2D,EAFc,OAGGnI,oBAAS,GAHZ,mBAGrBoI,EAHqB,KAGbC,EAHa,KAyB5B,SAASC,EAAWrH,GAChB,GAAIoE,OAAOC,QAAQ,kBAAmB,CAClC,IACIiD,EADQ,YAAO/D,GACKe,QAAO,SAAAnG,GAAI,OAAIA,EAAKiD,KAAOpB,EAAME,OAAOG,SAChEuC,aAAaqB,QAAQ,QAASvB,KAAKwB,UAAUoD,IAC7CJ,EAAU,YAAII,KAItB,OACI,uBAAMlG,GAAG,QAAT,UACI,uCAGCmC,EAAM1B,KAAI,SAAA1D,GAAI,OACX,cAACiI,EAAD,CAEIjI,KAAMA,EACN2G,OAAQA,EACR4B,gBAAiBS,EACjBJ,aAAcM,EACdb,gBAAiB,kBAAMY,GAAa,KAL/BjJ,EAAKiD,OAQjB+F,EACG,cAACvB,EAAD,CACId,OAAQA,EACRqB,aAzChB,SAAiBQ,GACb,IAAIxI,EAAO,CACPiD,GAAImG,cACJnJ,KAAMuI,EAAKvI,KACXG,KAAMoI,EAAKpI,KACXD,OAAQqI,EAAKrI,OACboD,MAAOiF,EAAKjF,OAEZ8F,EAAQ,YAAOjE,GACnBiE,EAAS7G,KAAKxC,GACdyE,aAAaqB,QAAQ,QAASvB,KAAKwB,UAAUsD,IAC7CN,EAAU,YAAIM,KA+BFtB,eAAgB,kBAAMkB,GAAa,MAGvC,wBACIzF,QAAS,kBAAMyF,GAAa,IAC5BxJ,UAAU,gBAFd,SAGI,cAAC,IAAD,CAAMK,KAAM,UEhEjB,SAASwJ,EAAY3I,GAChC,OACI,qBAAKlB,UAAU,OAAf,SACI,kCACI,kCACI,gCACA,+BACI,oBAAIA,UAAU,wBAAd,SACKkB,EAAMgE,KAAKkB,OAEhB,oBAAIpG,UAAU,cAEbkB,EAAM8F,KAAK/C,KAAI,SAACzB,EAAK0B,GAAN,OACZ,oBAEIlE,UAAU,MAFd,SAGKwC,GAFIA,EAAM0B,EAAIhD,EAAMgE,KAAKkB,cAOtC,gCACKlF,EAAMgE,KAAKS,MAAM1B,KAAI,SAAC1D,EAAM2D,GAAP,OAClB,cAACjD,EAAD,CAEIuC,GAAIjD,EAAKiD,GACTG,MAAOO,EACP1D,KAAMD,EAAKC,KACXG,KAAMJ,EAAKI,KACXD,OAAQH,EAAKG,OACboD,MAAOvD,EAAKuD,MACZ1C,KAAMb,EAAKa,KACXqC,cAAevC,EAAMgE,KAAKkB,KAC1B7C,SAAS,EACTgB,YAAa,KACbP,aAAc,MAXTzD,EAAKiD,GAAKtC,EAAMgE,KAAKkB,kBCvB3C,SAAS0D,EAAQ5I,GAE5B,IAAMqC,EAGEyB,aAAaC,QAAQ,WACdH,KAAKC,MAAMC,aAAaC,QAAQ,YAC7B,GAqBlB,OACI,uBAAMzB,GAAG,UAAT,UACI,yCAGA,wBAAQO,QAvBhB,WACI,IAAIgG,EAAI,YAAOxG,GACfwG,EAAKjH,SAAQ,SAAAoC,GACTA,EAAKS,MAAM7C,SAAQ,SAAAkH,GACVA,EAAGrJ,MACJqJ,EAAG5I,KAAK0B,SAAQ,SAACmH,EAAI/F,GACjB,GAAI+F,EAAGpJ,WAAWJ,OAAS,EAAG,CAC1B,IAAIyJ,EAASD,EAAGpJ,WAAWsJ,UAAU,EAAE,GACvCH,EAAG5I,KAAK8C,IAAMgG,EAEP,IAAPD,GAAmB,IAAPA,IAAUD,EAAG5I,KAAK8C,IAAM,YAKxDc,aAAaqB,QAAQ,UAAWvB,KAAKwB,UAAUyD,KAQTK,MAAO,CAACC,WAAY,QAAtD,oBACC9G,EAAQU,KAAI,SAACiB,EAAMhB,GAAP,OACT,cAAC2F,EAAD,CAEI3E,KAAMA,EACN8B,KAAMA,GAFD,cAAgB9C,S,kBCrC1B,SAASoG,IAAe,IAAD,EAEDnJ,oBAAS,GAFR,mBAE3BoJ,EAF2B,KAElBC,EAFkB,KAIlC,OACI,qCACI,cAAC,IAAD,CAAMnK,KAAM,GAAIL,UAAU,OAAO+D,QAAS,kBAAMyG,GAAeD,MAC9DA,GACG,sBAAKvK,UAAU,WAAf,UACI,uCACA,+BACI,4CAAc,cAAC,IAAD,CAAMK,KAAM,KAA1B,qBACA,uDACA,qGACA,qHACA,sGACA,wCAAU,cAAC,IAAD,CAAOA,KAAM,KAAvB,gBAA0C,cAAC,IAAD,CAAGA,KAAM,KAAnD,gBACA,6DAEJ,yCACA,+BACI,4EACA,qEACA,+CACA,qBAAIL,UAAU,SAAd,oDAA8D,qCAA9D,mBACA,qBAAIA,UAAU,SAAd,sCAAgD,qCAAhD,mBACA,kDACA,oBAAIA,UAAU,SAAd,4GACA,oBAAIA,UAAU,SAAd,sFACA,2GAGJ,yCACA,+BACI,sDACA,uD,MC7BT,SAASyK,IAEpB,OACI,eAAC,IAAD,CAAQC,SAAUC,eAAlB,UACI,cAAC9K,EAAD,IACA,cAACyK,EAAD,IACA,qBAAKtK,UAAU,YAEf,eAAC,IAAD,WACI,cAAC,IAAD,CAAO4K,KAAK,SAAZ,SACI,cAACxB,EAAD,MAEJ,cAAC,IAAD,CAAOwB,KAAK,WAAZ,SACI,cAACzD,EAAD,MAEJ,cAAC,IAAD,CAAOyD,KAAK,WAAZ,SACI,cAACd,EAAD,MAEJ,cAAC,IAAD,CAAOc,KAAK,IAAZ,SACI,cAAC,IAAD,CAAUzK,GAAG,kBAGrB,cAACD,EAAD,O,MChCQ2K,QACa,cAA7BrE,OAAOsE,SAASC,UAEa,UAA7BvE,OAAOsE,SAASC,UAEhBvE,OAAOsE,SAASC,SAASC,MAAM,2DCCnCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACV,EAAD,MAEFW,SAASC,eAAe,SD8FlB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAACC,GACHA,EAAaC,gBAEhBC,OAAM,SAACC,GACJ5F,QAAQ4F,MAAMA,EAAMC,c","file":"static/js/main.e6886f99.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/turtledot.9f70b9aa.svg\";","import React from 'react';\r\nimport turtledot from './turtledot.svg';\r\nimport './header.css';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <img src={turtledot} className='logo' alt='logo' />\r\n        </header>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './nav.css';\r\nimport {Plus, BookOpen} from 'react-feather';\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav>\r\n            <NavLink to='/Items' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <Plus size={16} />\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Items\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Arrange' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <span className='menu-icon-doit'>\r\n                    </span>\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Arrange\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to='/Archive' className='menu-item' activeClassName='here'>\r\n                <div className='menu-icon'>\r\n                    <BookOpen size={16} />\r\n                </div>\r\n                <div className='menu-text'>\r\n                    Archive\r\n                </div>\r\n            </NavLink>\r\n            {/*<NavLink to='/Settings' className='menu-item' activeClassName='here'>*/}\r\n            {/*    <div className='menu-icon'>*/}\r\n            {/*        &#8230;*/}\r\n            {/*    </div>*/}\r\n            {/*    <div className='menu-text'>*/}\r\n            {/*        Settings*/}\r\n            {/*    </div>*/}\r\n            {/*</NavLink>*/}\r\n        </nav>\r\n    );\r\n}","export default function validateItem(item) {\r\n    if (item.text.length > 0 && item.text.length < 12 && item.number > 0) {\r\n        if (item.type && item.number < 8) return true;\r\n        if (!item.type && item.number < 100001) return true;\r\n    } else return false;\r\n}\r\n","export default function cutNumber(number) {\r\n    if (number > 99999) {\r\n        return '100k';\r\n    } else if (number > 9999) {\r\n        return number.toString().slice(0,2) + 'k';\r\n    } else if (number > 999) {\r\n        if (number % 1000 === 0) return number.toString().slice(0, 1) + 'k';\r\n        return number.toString().slice(0, 1) + '.' + number.toString().slice(1, 2) + 'k';\r\n    } else if (number % 1 !== 0) {\r\n        return Math.ceil(number);\r\n    } else return number;\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport cutNumber from '../../functions/cutNumber';\r\nimport './row.css';\r\n\r\nexport default function Row(props) {\r\n\r\n    const [todo, editTodo] = useState([...props.todo]);\r\n    const [editing, switchEditing] = useState(false);\r\n    const [row, editRow] = useState({\r\n        currentTotal: 0,\r\n        avgTodo: 0,\r\n        tooHigh: false,\r\n        tooLow: false,\r\n        allDone: false,\r\n        cutNum: 0,\r\n        goalNum: 0,\r\n        originalDay: 0,\r\n        today: 0\r\n    });\r\n\r\n    useEffect(() => editTodo([...props.todo]), [props]);\r\n    useEffect(() => doNumbers(), [props]);\r\n\r\n    function doNumbers() {\r\n        let numberToDo = [];\r\n        props.todo.forEach(day => day > -1 ? numberToDo.push(+day) : null);\r\n        const currentTotal = numberToDo.reduce((a, b) => a + b, 0);\r\n        const allDone = currentTotal >= +props.number;\r\n        const avgTodo = props.number / numberToDo.length;\r\n        const tooHigh = numberToDo.length > +props.number;\r\n        const tooLow = numberToDo.length < +props.number;\r\n        const cutNum = cutNumber(+props.number);\r\n        const goalNum = cutNumber(+props.number - currentTotal);\r\n        const originalDay = new Date().getDay();\r\n        const today = originalDay === 0 ? 6 : originalDay - 1;\r\n        editRow({\r\n            currentTotal: currentTotal,\r\n            avgTodo: avgTodo,\r\n            tooHigh: tooHigh,\r\n            tooLow: tooLow,\r\n            allDone: allDone,\r\n            cutNum: cutNum,\r\n            goalNum: goalNum,\r\n            originalDay: originalDay,\r\n            today: today\r\n        });\r\n    }\r\n\r\n    function handleNumber(event) {\r\n        let newTodo = [...todo];\r\n        newTodo[event.target.dataset.day] = event.target.value;\r\n        editTodo([...newTodo]);\r\n    }\r\n\r\n    function saveTodo(event) {\r\n        if (validateTodo(event.target.value)) {\r\n            props.onSaveTodo(event);\r\n            switchEditing(false);\r\n        }\r\n    }\r\n\r\n    function validateTodo(day) {\r\n        return (day > -2 && day < 100001) || day === '';\r\n    }\r\n\r\n    return (\r\n        <tr\r\n            draggable={!props.archive}\r\n            id={props.id + props.weekBeginning}\r\n            data-index={props.index}\r\n            data-dragid={props.id}\r\n            data-dragweek={props.weekBeginning}\r\n            className={row.allDone ? 'allDone' : props.color}\r\n            // onDragStart={props.onDragStart}\r\n            // onDragOver={props.onDragOver}\r\n            // onDragLeave={props.onDragLeave}\r\n            // onDrop={props.onDrop}\r\n        >\r\n            <td\r\n                id={props.id}\r\n                className='week-item left-column'>\r\n                {!props.archive &&\r\n                    <button\r\n                        value={props.id}\r\n                        onClick={props.onRemoveItem}\r\n                        className='week-item-delete'>\r\n                        &mdash;\r\n                    </button>\r\n                }\r\n                {props.text}\r\n            </td>\r\n            <td className={'main-cell week-item-number'\r\n                + (props.type && (row.tooHigh ? ' week-number-arrow-down' : row.tooLow ? ' week-number-arrow-up' : ''))}>\r\n                {cutNumber(row.allDone ? row.currentTotal : row.goalNum > -1 ? row.goalNum : props.number)}\r\n            </td>\r\n            {todo.map((day, i) =>\r\n                <td\r\n                    key={i + props.id + props.weekBeginning}\r\n                    data-id={props.id}\r\n                    data-item={props.index}\r\n                    data-day={i}\r\n                    data-week={props.weekBeginning}\r\n                    onClick={props.type ? props.onChangeDay : props.isThisWeek ? () => switchEditing(true) : props.onChangeDay}\r\n                    className={'main-cell week-spots' + (props.isThisWeek && row.today === i ? props.color : '')}>\r\n                    {editing ?\r\n                        <input\r\n                            type='number'\r\n                            min='-1'\r\n                            max='100000'\r\n                            data-id={props.id}\r\n                            data-item={props.index}\r\n                            data-day={i}\r\n                            data-week={props.weekBeginning}\r\n                            value={day > -1 ? day : ''}\r\n                            className={'type-cell' + (day === 0 ? ' grey' : '')}\r\n                            onChange={handleNumber}\r\n                            onBlur={saveTodo}\r\n                        />\r\n                        :\r\n                        <div\r\n                            className={props.type ?\r\n                                ('spot' + (day === 1 ? ' closed' : day === 0 ? ' open' : ''))\r\n                                :\r\n                                ('type-cell' + (day === 0 ? ' grey' : ''))}>\r\n                            {!props.type && day > 0 ? day : !props.type && day > -1 ? cutNumber(row.avgTodo) : ''}\r\n                        </div>\r\n                    }\r\n                </td>\r\n            )}\r\n        </tr>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Row from '../../Row';\r\nimport '../arrange.css';\r\n\r\nlet touchData = {};\r\n\r\nexport default function ArrangeWeek(props) {\r\n\r\n    const [week, editWeek] = useState(JSON.parse(localStorage.getItem(props.weekBeginning)));\r\n    const [unselected, editUnselected] = useState(JSON.parse(localStorage.getItem('items')));\r\n    const [selected, editSelected] = useState([]);\r\n\r\n    useEffect(() => createWeek(), [week]);\r\n\r\n    async function createWeek() {\r\n        let createSelected = [];\r\n        let createUnselected = JSON.parse(localStorage.getItem('items'));\r\n        let newWeek = await JSON.parse(localStorage.getItem(props.weekBeginning));\r\n        if (newWeek) {\r\n            newWeek.items.forEach(item => {\r\n                let index = createUnselected.findIndex(uItem => uItem.id === item[0]);\r\n                if (index > -1) {\r\n                    let moveItem = createUnselected.splice(index, 1);\r\n                    moveItem[0].todo = item[1];\r\n                    createSelected.push(moveItem[0]);\r\n                }\r\n            });\r\n        }\r\n        editUnselected([...createUnselected]);\r\n        editSelected([...createSelected]);\r\n    }\r\n\r\n    function addItemToWeek(event) {\r\n        let newWeek = {...week};\r\n        console.log(newWeek)\r\n        if (newWeek.items === undefined) newWeek = {date: props.weekBeginning, items: []};\r\n        console.log(newWeek)\r\n        newWeek.items.push([event.target.value, [-1, -1, -1, -1, -1, -1, -1]]);\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function addAllItemsToWeek() {\r\n        let ids = [];\r\n        let newWeek = {...week};\r\n        unselected.forEach(item => ids.push(item.id));\r\n        if (newWeek.items === undefined) newWeek = {date: props.weekBeginning, items: []};\r\n        ids.forEach(id => newWeek.items.push([id, [-1, -1, -1, -1, -1, -1, -1]]));\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function removeItemFromWeek(event) {\r\n        if (window.confirm('Really remove this item from schedule?')) {\r\n            let newWeek = {...week};\r\n            newWeek.items = newWeek.items.filter(needle => needle[0] !== event.target.value);\r\n            localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n            editWeek({...newWeek});\r\n        }\r\n    }\r\n\r\n    // function copyAllFromThisWeek () {\r\n    //     if (localStorage.getItem(props.thisWeekBeginning)) {\r\n    //         let newWeek = {...week};\r\n    //         let thisWeek = JSON.parse(localStorage.getItem(props.thisWeekBeginning));\r\n    //         if (!newWeek) newWeek = {date: props.weekBeginning, items: []};\r\n    //         newWeek.items = [...thisWeek.items];\r\n    //         localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n    //         editWeek({...newWeek});\r\n    //     }\r\n    // }\r\n\r\n    function changeDay(event) {\r\n        let newWeek = {...week};\r\n        let item = newWeek.items.find(item => item[0] === event.currentTarget.dataset.id);\r\n        let day = event.currentTarget.dataset.day;\r\n        if (props.isThisWeek) {\r\n            item[1][day] = (item[1][day] === (-1) ? 0 : item[1][day] === 0 ? 1 : (-1));\r\n        } else {\r\n            item[1][day] = (item[1][day] > (-1) ? (-1) : 0);\r\n        }\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    function saveTodo(event) {\r\n        let newWeek = {...week};\r\n        let item = newWeek.items.find(item => item[0] === event.currentTarget.dataset.id);\r\n        let day = event.currentTarget.dataset.day;\r\n        item[1][day] = event.target.value === '' ? -1 : +event.target.value;\r\n        localStorage.setItem(props.weekBeginning, JSON.stringify(newWeek));\r\n        editWeek({...newWeek});\r\n    }\r\n\r\n    // function updateArchive() {\r\n    //     let archive = JSON.parse(localStorage.getItem('archive'));\r\n    //     let thisWeek = {\r\n    //         date: props.weekBeginning,\r\n    //         items: [...selected]\r\n    //     };\r\n    //     if (archive) {\r\n    //         if (archive[0].date === thisWeek.date) {\r\n    //             archive[0] = thisWeek;\r\n    //         } else {\r\n    //             archive.unshift(thisWeek);\r\n    //         }\r\n    //     } else {\r\n    //         archive = [];\r\n    //         archive.unshift(thisWeek);\r\n    //     }\r\n    //     localStorage.setItem('archive', JSON.stringify(archive));\r\n    // }\r\n\r\n    return (\r\n        <div className='week'>\r\n            <section>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td className='week-date left-column'>\r\n                            {props.weekBeginning}\r\n                        </td>\r\n                        <td className='week-date'>\r\n                        </td>\r\n                        {props.days.map((day, i) =>\r\n                            <td\r\n                                key={day + i + props.weekBeginning}\r\n                                className='day'>\r\n                                {day}\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody data-dragweek={props.weekBeginning}>\r\n                    {selected.map((item, i) =>\r\n                        <Row\r\n                            key={item.id + props.weekBeginning}\r\n                            id={item.id}\r\n                            index={i}\r\n                            text={item.text}\r\n                            type={item.type}\r\n                            number={item.number}\r\n                            color={item.color}\r\n                            todo={item.todo}\r\n                            isThisWeek={props.isThisWeek}\r\n                            weekBeginning={props.weekBeginning}\r\n                            onRemoveItem={removeItemFromWeek}\r\n                            onChangeDay={changeDay}\r\n                            onSaveTodo={saveTodo}\r\n                            // onDragStart={onDragStart}\r\n                            // onDragOver={onDragOver}\r\n                            // onDragLeave={onDragLeave}\r\n                            // onDrop={onDrop}\r\n                        />\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n            {unselected.length > 0 &&\r\n            <div className='edit-box'>\r\n                {/*{selected.length < 1 && props.weekName === 'Next Week' &&*/}\r\n                {/*    <button*/}\r\n                {/*        className='addAllItems copy'*/}\r\n                {/*        onClick={copyAllFromThisWeek}*/}\r\n                {/*    >*/}\r\n                {/*        copy schedule from this week*/}\r\n                {/*    </button>*/}\r\n                {/*}*/}\r\n                <button\r\n                    className='addAllItems'\r\n                    onClick={addAllItemsToWeek}\r\n                >\r\n                    add all items\r\n                </button>\r\n                <div className='items-list'>\r\n                    {unselected.map(item =>\r\n                        <button\r\n                            key={item.id + props.weekBeginning + 'u'}\r\n                            value={item.id}\r\n                            data-week={props.weekBeginning}\r\n                            className={'items-list-item ' + item.color}\r\n                            onClick={addItemToWeek}\r\n                        >\r\n                            {item.text}\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","export const colors = ['color0', 'color1', 'color2', 'color3', 'color4', 'color5', 'color6', 'color7', 'color8', 'color9'];\r\n\r\nexport const days = ['M','T','W','T','F','S','S'];\r\n","import React from 'react';\r\nimport ArrangeWeek from './ArrangeWeek';\r\nimport {days} from '../../static/colors';\r\nimport './arrange.css';\r\n\r\nexport default function Arrange() {\r\n\r\n    const thisWeekBeginning = getWeekBeginning();\r\n    const nextWeekBeginning = getWeekBeginning(7);\r\n\r\n    function getWeekBeginning(addWeek = 0) {\r\n        let newDate = new Date(),\r\n            day = newDate.getDay();\r\n        function padZero(n){ return n < 10 ? '0' + n : n}\r\n        if (day > 1) {\r\n            newDate.setDate(newDate.getDate() - day + 1 + addWeek);\r\n        } else if (day === 0) {\r\n            newDate.setDate(newDate.getDate() - 6 + addWeek);\r\n        } else {\r\n            newDate.setDate(newDate.getDate() + addWeek);\r\n        }\r\n        return newDate.getFullYear() + '/' + padZero(newDate.getMonth() + 1) + '/' + padZero(newDate.getDate());\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <h1>\r\n                This Week\r\n            </h1>\r\n            <ArrangeWeek\r\n                key={'thisWeek'}\r\n                weekName={'This Week'}\r\n                days={days}\r\n                weekBeginning={thisWeekBeginning}\r\n                isThisWeek={true}\r\n            />\r\n            <h2>\r\n                Next Week\r\n            </h2>\r\n            <ArrangeWeek\r\n                key={'nextWeek'}\r\n                weekName={'Next Week'}\r\n                days={days}\r\n                weekBeginning={nextWeekBeginning}\r\n                thisWeekBeginning={thisWeekBeginning}\r\n            />\r\n        </main>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport validateItem from '../../../functions/validateItem';\r\nimport '../../Arrange/';\r\nimport {X, Check} from 'react-feather';\r\n\r\nexport default function UpdateItem(props) {\r\n\r\n    const itemToPlay = props.item ? {...props.item} :\r\n        {\r\n            id: '',\r\n            text: '',\r\n            type: true,\r\n            number: 1,\r\n            color: 'color0'\r\n        };\r\n\r\n    const [item, editItem] = useState(itemToPlay);\r\n\r\n    function handleInput (event) {\r\n        let newItem = {...item};\r\n        newItem[event.target.name] = event.target.value;\r\n        editItem({...newItem});\r\n    }\r\n\r\n    function switchType() {\r\n        let newItem = {...item};\r\n        newItem.type = !newItem.type;\r\n        editItem({...newItem});\r\n    }\r\n\r\n    function updateItem() {\r\n        if (validateItem(item)) {\r\n            props.onUpdateItem({...item});\r\n            editItem({\r\n                id: '',\r\n                text: '',\r\n                type: true,\r\n                number: 1,\r\n                color: 'color0'\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className='item'>\r\n                <input\r\n                    type='text'\r\n                    name='text'\r\n                    value={item.text}\r\n                    onChange={handleInput}\r\n                    className='text'\r\n                />\r\n                <button\r\n                    name='type'\r\n                    value={item.type}\r\n                    onClick={switchType}\r\n                    className='type'>\r\n                    {item.type ?\r\n                        <div className='day spot open'>\r\n                        </div>\r\n                        :\r\n                        '#'\r\n                    }\r\n                </button>\r\n                <input\r\n                    type='number'\r\n                    name='number'\r\n                    min='1'\r\n                    max='99999'\r\n                    value={item.number}\r\n                    onChange={handleInput}\r\n                    className='number'\r\n                />\r\n                <button\r\n                    className={'color ' + item.color}>\r\n                </button>\r\n                <button\r\n                    onClick={props.onCancelUpdate}\r\n                    className='plus-sign'>\r\n                    <X size={16} />\r\n                </button>\r\n            </div>\r\n            <div className='edit-box'>\r\n                <div className='palette'>\r\n                    {props.colors.map(color =>\r\n                        <button\r\n                            key={color}\r\n                            name='color'\r\n                            value={color}\r\n                            onClick={handleInput}\r\n                            className={'palette-square ' + color}>\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <div className='edit-box-buttons'>\r\n                    <button\r\n                        onClick={updateItem}\r\n                        className='edit-complete'>\r\n                        <Check size={16} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport UpdateItem from '../UpdateItem';\r\nimport cutNumber from '../../../functions/cutNumber';\r\nimport validateItem from '../../../functions/validateItem';\r\nimport {X, Hash} from 'react-feather';\r\n\r\nexport default function Item(props) {\r\n\r\n    const [item, editItem] = useState(props.item);\r\n    const [editing, switchEditing] = useState(false);\r\n    const [inUse, switchInUse] = useState(false);\r\n\r\n    useEffect(() => {\r\n        checkInUse();\r\n    });\r\n\r\n    function startEdit() {\r\n        switchEditing(true);\r\n        props.onCancelNewItem();\r\n    }\r\n\r\n    function updateItem(data) {\r\n        if (validateItem(data)) {\r\n            let storedItems = JSON.parse(localStorage.getItem('items'));\r\n            let edited = storedItems.findIndex(item => item.id === data.id);\r\n            storedItems[edited] = data;\r\n            localStorage.setItem('items', JSON.stringify(storedItems));\r\n            editItem({...data});\r\n            switchEditing(false);\r\n        }\r\n    }\r\n\r\n    function checkInUse() {\r\n        if (localStorage.getItem('weeks')) {\r\n            const weeks = JSON.parse(localStorage.getItem('weeks'));\r\n            weeks.forEach(week => {\r\n                if (week.items.find((item) => item[0] === props.item.id)) switchInUse(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editing && !props.currentlyAdding ?\r\n                <UpdateItem\r\n                    item={item}\r\n                    colors={props.colors}\r\n                    onUpdateItem={updateItem}\r\n                    onCancelUpdate={() => switchEditing(false)}\r\n                />\r\n                :\r\n                <div className='item'>\r\n                    <div\r\n                        onClick={startEdit}\r\n                        className='text'>\r\n                        {item.text}\r\n                    </div>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className='type'>\r\n                        {item.type ?\r\n                            <div className='day spot open'>\r\n                            </div>\r\n                            :\r\n                            <Hash size={14} />\r\n                        }\r\n                    </button>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className='number'>\r\n                        {cutNumber(item.number)}\r\n                    </button>\r\n                    <button\r\n                        onClick={startEdit}\r\n                        className={'color ' + item.color}>\r\n                    </button>\r\n                    <button\r\n                        value={item.id}\r\n                        disabled={inUse}\r\n                        onClick={props.onDeleteItem}\r\n                        className='plus-sign'>\r\n                        <X size={16} />\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Item from './Item';\r\nimport UpdateItem from './UpdateItem';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport sortColor from '../../functions/sortColor';\r\nimport {colors} from '../../static/colors';\r\nimport './items.css';\r\nimport {Plus} from 'react-feather';\r\n\r\nexport default function Items() {\r\n\r\n    const [items, editItems] = useState(getItems());\r\n    const [adding, switchAdding] = useState(false);\r\n\r\n    function getItems() {\r\n        if (localStorage.getItem('items')) {\r\n            return sortColor(JSON.parse(localStorage.getItem('items')));\r\n        } else return [];\r\n    }\r\n\r\n    function addItem(data) {\r\n        let item = {\r\n            id: uuidv4(),\r\n            text: data.text,\r\n            type: data.type,\r\n            number: data.number,\r\n            color: data.color\r\n        };\r\n        let newItems = [...items];\r\n        newItems.push(item);\r\n        localStorage.setItem('items', JSON.stringify(newItems));\r\n        editItems([...newItems]);\r\n    }\r\n\r\n    function deleteItem(event) {\r\n        if (window.confirm('Really delete?')) {\r\n            let newItems = [...items];\r\n            let filtered = newItems.filter(item => item.id !== event.target.value);\r\n            localStorage.setItem('items', JSON.stringify(filtered));\r\n            editItems([...filtered]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main id='items'>\r\n            <h1>\r\n                Items\r\n            </h1>\r\n            {items.map(item =>\r\n                <Item\r\n                    key={item.id}\r\n                    item={item}\r\n                    colors={colors}\r\n                    currentlyAdding={adding}\r\n                    onDeleteItem={deleteItem}\r\n                    onCancelNewItem={() => switchAdding(false)}\r\n                />\r\n            )}\r\n            {adding ?\r\n                <UpdateItem\r\n                    colors={colors}\r\n                    onUpdateItem={addItem}\r\n                    onCancelUpdate={() => switchAdding(false)}\r\n                />\r\n                :\r\n                <button\r\n                    onClick={() => switchAdding(true)}\r\n                    className='plus-sign add'>\r\n                    <Plus size={18} />\r\n                </button>\r\n            }\r\n        </main>\r\n    );\r\n}\r\n","export default function sortColor(array) {\r\n    return array.sort((a, b) => (a.color > b.color) ? 1 : -1);\r\n}\r\n","import React from 'react';\r\nimport Row from '../../Row';\r\nimport '../../Arrange/arrange.css';\r\n\r\nexport default function ArchiveWeek(props) {\r\n    return (\r\n        <div className='week'>\r\n            <section>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td className='week-date left-column'>\r\n                            {props.week.date}\r\n                        </td>\r\n                        <td className='week-date'>\r\n                        </td>\r\n                        {props.days.map((day, i) =>\r\n                            <td\r\n                                key={day + i + props.week.date}\r\n                                className='day'>\r\n                                {day}\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.week.items.map((item, i) =>\r\n                            <Row\r\n                                key={item.id + props.week.date}\r\n                                id={item.id}\r\n                                index={i}\r\n                                text={item.text}\r\n                                type={item.type}\r\n                                number={item.number}\r\n                                color={item.color}\r\n                                todo={item.todo}\r\n                                weekBeginning={props.week.date}\r\n                                archive={true}\r\n                                onChangeDay={null}\r\n                                onRemoveItem={null}\r\n                            />\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ArchiveWeek from './ArchiveWeek';\r\nimport {days} from '../../static/colors';\r\nimport '../../components/Arrange/arrange.css';\r\n\r\nexport default function Archive(props) {\r\n\r\n    const archive = getArchive();\r\n\r\n    function getArchive() {\r\n        if (localStorage.getItem('archive')) {\r\n            return JSON.parse(localStorage.getItem('archive'));\r\n        } else return [];\r\n    }\r\n\r\n    function doArchiveUpdate() {\r\n        let newA = [...archive];\r\n        newA.forEach(week => {\r\n            week.items.forEach(it => {\r\n                if (!it.type) {\r\n                    it.todo.forEach((td, i) => {\r\n                        if (td.toString().length > 2) {\r\n                            let mahStr = td.toString().substring(0,1);\r\n                            it.todo[i] = +mahStr;\r\n                        }\r\n                        if (td === 1 || td === 0) it.todo[i] = -1;\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        localStorage.setItem('archive', JSON.stringify(newA));\r\n    }\r\n\r\n    return (\r\n        <main id='arrange'>\r\n            <h1>\r\n                Archive\r\n            </h1>\r\n            <button onClick={doArchiveUpdate} style={{background: 'blue'}}>UPDATE</button>\r\n            {archive.map((week, i) =>\r\n                <ArchiveWeek\r\n                    key={'archiveWeek' + i}\r\n                    week={week}\r\n                    days={days}\r\n                />\r\n            )}\r\n        </main>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport './information.css';\r\nimport {Info, Plus, Check, X} from 'react-feather';\r\n\r\nexport default function Information() {\r\n\r\n    const [infoBox, toggleInfoBox] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Info size={16} className='info' onClick={() => toggleInfoBox(!infoBox)} />\r\n            {infoBox &&\r\n                <div className='info-box'>\r\n                    <h2>ITEMS</h2>\r\n                    <ul>\r\n                        <li>touch the <Plus size={16} /> to add an item</li>\r\n                        <li>enter the item's name</li>\r\n                        <li>choose between dot (one per day) or number (up to 100,000 per week)</li>\r\n                        <li>enter a weekly goal number for the item (max. 7 for dots; max. 100,000 for numbers)</li>\r\n                        <li>choose a colour for the item (similar items can be visually grouped)</li>\r\n                        <li>touch <Check size={16} /> to save, or <X size={16} /> to cancel</li>\r\n                        <li>touch an item to edit it</li>\r\n                    </ul>\r\n                    <h2>ARRANGE</h2>\r\n                    <ul>\r\n                        <li>items are listed for this week &amp; next week</li>\r\n                        <li>touch an item to add it to the week</li>\r\n                        <li>for dot items</li>\r\n                        <li className='indent'>touch once on a given day to set it as <i>todo</i> for that day</li>\r\n                        <li className='indent'>touch again to set it as <i>done</i> for that day</li>\r\n                        <li>for number items</li>\r\n                        <li className='indent'>when you've completed a number (e.g. 5,000 steps), touch the relevant square twice to enter it</li>\r\n                        <li className='indent'>the number to the left of Monday tells you how many left to do that week</li>\r\n                        <li>when you've hit the weekly target for an item, the row will turn black\r\n                        </li>\r\n                    </ul>\r\n                    <h2>ARCHIVE</h2>\r\n                    <ul>\r\n                        <li>lists previous weeks</li>\r\n                        <li>not editable</li>\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Redirect, BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Nav from './components/Nav';\r\nimport Items from './components/Items';\r\nimport Arrange from './components/Arrange';\r\nimport Archive from './components/Archive';\r\nimport Information from './components/Information';\r\nimport './app.css';\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Header />\r\n            <Information />\r\n            <div className='bgPanel'>\r\n            </div>\r\n            <Switch>\r\n                <Route path='/Items'>\r\n                    <Items />\r\n                </Route>\r\n                <Route path='/Arrange'>\r\n                    <Arrange />\r\n                </Route>\r\n                <Route path='/Archive'>\r\n                    <Archive />\r\n                </Route>\r\n                <Route path='/'>\r\n                    <Redirect to='/Arrange' />\r\n                </Route>\r\n            </Switch>\r\n            <Nav />\r\n        </Router>\r\n    );\r\n}\r\n","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA.'\r\n                            );\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.unregister();\n"],"sourceRoot":""}